<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pipelining Working Group on Rust Lang - Compiler Team</title><link>https://rust-lang.github.io/compiler-team/working-groups/pipelining/</link><description>Recent content in Pipelining Working Group on Rust Lang - Compiler Team</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://rust-lang.github.io/compiler-team/working-groups/pipelining/index.xml" rel="self" type="application/rss+xml"/><item><title>FAQs</title><link>https://rust-lang.github.io/compiler-team/working-groups/pipelining/FAQ/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/pipelining/FAQ/</guid><description>Frequently Asked Questions (FAQ) Looks like no questions have been asked yet! If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.</description></item><item><title>Notes</title><link>https://rust-lang.github.io/compiler-team/working-groups/pipelining/NOTES/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/pipelining/NOTES/</guid><description>Pipelining Meeting Notes Video 2019-04-05 @alexcrichton and @nnethercote met on video for ~30m and talked about various aspects of implementing pipelining in the compiler.
What are metadata/rlibs? First we talked a bit about what are rlibs/metadata files and how is this all going to be put together. The recap is:
Rustc can produce metadata files (--emit metadata). These metadata files are like header files for Rust crates. They&amp;rsquo;re internally a compiler-specific binary format and cannot be inspected.</description></item></channel></rss>
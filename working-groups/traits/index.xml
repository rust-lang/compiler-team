<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Traits Working Group on Rust Lang - Compiler Team</title><link>https://rust-lang.github.io/compiler-team/working-groups/traits/</link><description>Recent content in Traits Working Group on Rust Lang - Compiler Team</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://rust-lang.github.io/compiler-team/working-groups/traits/index.xml" rel="self" type="application/rss+xml"/><item><title>Triage meeting on 2019-02-24</title><link>https://rust-lang.github.io/compiler-team/working-groups/traits/minutes/triage-2019-02-24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/traits/minutes/triage-2019-02-24/</guid><description>Triage meeting on 2019-02-24 Info Zulip thread.
Summary The goal of the meeting was to try and figure out, in somewhat more detail, how we want to organize the traits working group itself. We&amp;rsquo;ve been doing work on enumerating and triaging the set of things we hope to do, but in this meeting we were basically trying to come up with some concrete next steps.
Ultimately we identified the following next steps:</description></item><item><title>Triage meeting on 2019-03-04</title><link>https://rust-lang.github.io/compiler-team/working-groups/traits/minutes/triage-2019-03-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/traits/minutes/triage-2019-03-04/</guid><description>Triage meeting on 2019-03-04 Info Zulip thread.
Summary We followed up on the goals from last time.
Lifetime problems around async-await We discussed how we found a way to resolve the async fn complications by changing the async fn desugaring, and hence don&amp;rsquo;t need any deep trait action. We are still interested in trying to find a way to solve the &amp;ldquo;captures problem&amp;rdquo; for impl Trait, however, and alexreg and nikomatsakis may do some follow-up there.</description></item><item><title>Triage meeting on 2019-03-11</title><link>https://rust-lang.github.io/compiler-team/working-groups/traits/minutes/triage-2019-03-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/traits/minutes/triage-2019-03-11/</guid><description>Triage meeting on 2019-03-11 Info Zulip thread
Help wanted! nikomatsakis is looking for someone to help with investigating lazy normatlization. The task would be to experimentally modify rustc and is best suited to someone already vaguely familiar with the Rust query system etc. See below. Summary We followed up on the goals from last time.
Lazy normalization and const generics Link
Last week, nikomatsakis did more investigation, taking notes in this dropbox paper document.</description></item></channel></rss>
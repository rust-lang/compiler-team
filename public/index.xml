<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Introduction on Rust Lang - Compiler Team</title>
    <link>/</link>
    <description>Recent content in Introduction on Rust Lang - Compiler Team</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>/docs/about/chat-platform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/about/chat-platform/</guid>
      <description>The compiler team hangs out primarily in the rust-lang Zulip these days. The #t-compiler/help stream is a great place to ask questions. In addition, each working group has 1 or more streams where they communicate.
You can also find us on the rust-lang Discord, in the #compiler channel.
The #rustc IRC channel on irc.mozilla.org is in a &amp;ldquo;quasi-deprecated&amp;rdquo; status and is not recommended.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/about/steering-meeting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/about/steering-meeting/</guid>
      <description>Steering Meeting The compiler steering meeting is the place for high-level discussion and planning. The meeting takes place weekly. The topics of the meeting are selected at periodic planning meetings. See the steering meeting procedure for more details. See #58850 for more information.
See the compiler team calendar for the topics of the next scheduled meetings. There is also a dedicated internals thread.
The steering meeting takes place on Zulip.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/about/triage-meeting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/about/triage-meeting/</guid>
      <description>Triage Meeting The compiler triage meeting is the place for tracking regressions, progress on urgent bugs and checking-in with the compiler team&amp;rsquo;s working groups. Each meeting, two working groups (rotating) check-in with their progress and blockers.
The meeting takes place every week. See the compiler team calendar for the next scheduled meeting (normally weekly).
The triage meeting takes place on Zulip. Look for a topic like &amp;ldquo;#54818 weekly meeting YYYY-MM-DD&amp;rdquo; or &amp;ldquo;weekly meeting YYYY-MM-DD&amp;rdquo; (with the proper date, of course).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/minutes/steering-meeting/2018-10-26/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/minutes/steering-meeting/2018-10-26/</guid>
      <description>2018-10-26 We had our first T-compiler steering meeting today! What follows is a summary of the major points raised during the discussion. If you&amp;rsquo;d like to read the detailed minutes, please see the Zulip chat log. I&amp;rsquo;ll insert links here and there into that log where appropriate, if you want to see the original comment.
To start, before the meeting we did a survey asking folks what they thought worked well and what needed improvement in and around with the compiler team.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/minutes/steering-meeting/2018-11-16/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/minutes/steering-meeting/2018-11-16/</guid>
      <description>2018.11.16 The topic of today&amp;rsquo;s steering meeting was future planning. Specifically, we were looking at some of the ideas we&amp;rsquo;ve had for major initiatives and trying to drill into them and make them more concrete. You can read the full thread over on Zulip.
We began by observing that the ultimate decisions we make here will be very influenced by the number of leaders we can find, and what they want to do, and ultimately decided to focus first on the technical angle before thinking about what leaders we have etc.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/minutes/steering-meeting/2018-12-14/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/minutes/steering-meeting/2018-12-14/</guid>
      <description>2018.12.14 The steering meeting was focused on mentoring. Some of the prompting questions:
 How can we help move people from &amp;ldquo;working group participant&amp;rdquo; to &amp;ldquo;full-fledged team member&amp;rdquo;? How can we reduce the &amp;ldquo;bus factor&amp;rdquo; for cricial modules like the type checker, type resolver, etc?  A summary of the major points raised follows. If you prefer, you can read the full transcript on Zulip.
Major points: Mentoring  it seems good to try and list out the parts of the compiler and who is an expert in each one, perhaps in some kind of &amp;ldquo;introduction to the compiler team&amp;rdquo; page on the repository  this can help identify where to direct your questions about code X but also where we need to increase the number of knowledgable people  it would be great if we had an organized off-ramp system for folks who have been active in a working group and are looking to broaden their knowledge  maybe we can pair up such folks with someone more experienced this is a different sort of mentoring, since active people from a WG are already familiar with how the compiler works, and thus able to work at a higher level we need to find a way to make it easier to find &amp;ldquo;intermediate-level mentoring opportunities&amp;rdquo;.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/minutes/steering-meeting/2019-01-04/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/minutes/steering-meeting/2019-01-04/</guid>
      <description>2019.01.04 Zulip topic
We discussed the upcoming Rust All Hands. We have a HackMd document that lists a bunch of ideas for what to talk about, but mostly we talked about how to structure the meeting itself.
We summarized how the All Hands was structured last year: basically meetings focused around particular topics, with the team (and others) mostly in a kind of semi-circle or around a whiteboard.
One of the ideas we had for this year is that we could have some sessions that are just focused on explaining how a particular area of the code works, which could help people unfamiliar with an area get up to speed.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/minutes/steering-meeting/2019-01-17/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/minutes/steering-meeting/2019-01-17/</guid>
      <description>2019.01.17 Zulip topic
We discussed the upcoming Rust All Hands.
One of the first things we focused on is trying to get consensus about what the P1 Problems are that we are aiming to tackle. Our goal is to have this list complete before the all hands. Our initial list looked like this:
 compilation time  better compilation time investigation tools/analysis this should work in cooperation with cargo, so we can see whole story  rls, completions “too hard to do anything” — technical debt “too hard to find people to do things” — organizational debt  hard to learn, monolithic architecture poorly documented long compilation times, memory requirements   Looking at it, we realized a few things:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/minutes/steering-meeting/2019-03-01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/minutes/steering-meeting/2019-03-01/</guid>
      <description>2019.03.01 Zulip topic
Before the meeting started, @nikomatsakis proposed an agenda and linked to a document to collect agenda ideas for future meetings.
Also, @mw asked about discussing the policy for out-of-tree compiler crates (expanding on discussions from the All Hands&amp;rsquo; organizational meeting), a draft for which was already in-progress by @davidtwco.
The meeting commenced with a call for involvement in the RLS 2.0 working group led by @matklad as sharing expertise between the RLS 2.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/minutes/steering-meeting/2019-03-22/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/minutes/steering-meeting/2019-03-22/</guid>
      <description>2019.03.22 Zulip topic.
Announcements  oli-obk mentions that wg-diagnostics is planning to use the annotate-snippets crate within rustc. nikomatsakis is planning, as part of the @WG-meta working group, an RFC that will propose more intermediate levels for the compiler team to recognize committed, regular contributors. Zoxc almost has a series of PRs pushing queries all the way back to parsing. davidtwco has, after numerous attempts, managed to produce a have a working branch that unblocks RFC 2008.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/minutes/steering-meeting/2019-04-12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/minutes/steering-meeting/2019-04-12/</guid>
      <description>2019.04.12 Zulip topic.
Announcements  nikomatsakis has opened a PR with a draft RFC on the compiler-team repository. This RFC describes adding a new level (&amp;ldquo;compiler team contributors&amp;rdquo;) to recognize people who have been contributing regularly. It also tries to document a few things about members etc. Please give it a read! eddyb is nearing completion on their work on the symbol naming revamp. It might even offer some performance improvements.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/minutes/triage-meeting/2019-04-11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/minutes/triage-meeting/2019-04-11/</guid>
      <description>2019-04-11 Volunteers wanted  seeking help on resolving &amp;ldquo;[firefox] error: relocation refers to local symbol &amp;ldquo;&amp;rdquo; [12], which is defined in a discarded section&amp;rdquo;
 seeking help on resolving &amp;ldquo;Compiler panic with generic-typed nested closures&amp;rdquo;
  Backport decisions  No backport decisions were made at this meeting because there were no PRs nominated for backport.  Working group sync wg-mir-opt  The current goal is to make the MIR Place data structure non-recursive (Issue #52708).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/minutes/triage-meeting/2019-04-18/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/minutes/triage-meeting/2019-04-18/</guid>
      <description>2019-04-18 Volunteers wanted  No issues discussed this week.  Backport decisions  There were no beta backport nominations this week.
 &amp;ldquo;Use informational target machine for metadata&amp;rdquo; (#58605) was nominated for backport to stable.
 Nomination was declined   Working group sync wg-llvm  wg-llvm is working on optimizing overflow intrinsics with add and sub instructions.
 A PR (#59546) has also been opened to fix a long standing unsoundness issue.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/minutes/triage-meeting/2019-04-25/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/minutes/triage-meeting/2019-04-25/</guid>
      <description>2019-04-25 Volunteers wanted  Somebody needed to reduce #60136 Somebody needed to write documentation #60059  Backport decisions  &amp;ldquo;Temporarily accept [i|u][32|size] suffixes on a tuple index and warn&amp;rdquo; #60186
 Accepted  &amp;ldquo;Revert &amp;ldquo;compile crates under test w/ -Zemit-stack-sizes&amp;rdquo; #59911
 Accepted   Working group sync wg-rfc-2229  RFC 2229 is a proposal to change how closures capture variables. Instead of capturing the complete variable when a part of it is used (ie foo.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/minutes/triage-meeting/2019-05-02/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/minutes/triage-meeting/2019-05-02/</guid>
      <description>2019-05-02 Volunteers wanted  call for assistance: Does someone have an ARM (and maybe also MUSL?) host they could use to try to replicate &amp;ldquo;Stable rustc always panics on arm/musl&amp;rdquo;  Backport decisions  There were no beta- nor stable-nominations for backport.  Working group sync wg-meta  The compiler contributor RFC is in FCP and should be merged soon.
 They are trying to get some sort of &amp;ldquo;design meeting&amp;rdquo; up and going.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/minutes/triage-meeting/2019-05-09/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/minutes/triage-meeting/2019-05-09/</guid>
      <description>2019-05-09 Volunteers wanted  compiler panic &amp;ldquo;randomly&amp;rdquo; with incremental build (#60629)
 Help is wanted to reproduce the issue   Regression: Typemap type mismatch in 1.34.0+ (#60375)
 Help is wanted to narrow down the problem   Backport decisions  save-analysis: Fix ICE when processing associated constant (#60649)  Backport accepted   Working group sync wg-nll  NLL migration mode is enabled on Rust 2015.
 The next goal is to remove the old AST-based borrow checker.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/minutes/triage-meeting/2019-05-16/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/minutes/triage-meeting/2019-05-16/</guid>
      <description>2019-05-16 Volunteers wanted  request for investigation: &amp;ldquo;Compiler panic with generic-typed nested closures&amp;rdquo; (#59494)
 request for investigation: &amp;ldquo;Exponential compile-time and type_length_limit blowup when nesting closure wrappers&amp;rdquo; (#54540)
 eddyb has excellent notes here on the fundamental problem   request for investigation: &amp;ldquo;llvm lint: &amp;ldquo;Undefined behavior: Call argument type mismatches callee parameter type&amp;rdquo; with mixing debug and release&amp;rdquo; (#48310)
 specifically, we need to resolve whether this is in fact an LLVM bug   request for investigation: &amp;ldquo;ICE with unsized associated type&amp;rdquo; (#60431)</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/minutes/triage-meeting/2019-05-23/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/minutes/triage-meeting/2019-05-23/</guid>
      <description>2019-05-23 Volunteers wanted  No issues discussed this week.  Backport decisions  &amp;ldquo;Fix ICE with inconsistent macro matchers&amp;rdquo; (#61046)
 Backport accepted  &amp;ldquo;debuginfo: Revert to old/more verbose behavior for -Cdebuginfo=1&amp;rdquo; (#61007)
 Backport accepted   Working group sync wg-pgo  PGO stands for Profiler Guided Optimization.
 Code is instrumented and then run. The profilng data gathered at runtime is then used in subsequent compilations to guide optimizations.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/minutes/triage-meeting/2019-06-06/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/minutes/triage-meeting/2019-06-06/</guid>
      <description>2019-06-06 Volunteers wanted  No issues discussed this week.  Backport decisions  Fix regression 61475 #61500  Backport approved  Turn turbo :fish: :ice_cream: into an error #61189  Backport approved  Fix overflowing literal lint in loops #61098  Backport approved  Fix more escaping ReScopes #60765  Backport approved  Constrain all regions in the concrete type for an opaque type #60449  Backport approved   Working group sync wg-mir-opt  const propagation (by Wesley Wiser) on mir opt level 2</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/procedures/call-for-participation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/procedures/call-for-participation/</guid>
      <description>Call for participation One way to get help with a project is to issue a call for participation on the dedicated internals thread.
Such calls should follow this (very simple) template, so as to help clarify what&amp;rsquo;s going on:
- **Title:** Investigate #123141 - **Experience level expected:** (Newcomer | Contributor | Experienced) - **Urgency:** (ASAP | over next few months | whenever) - **Contact:** @your-name-here in [the #your-stream-here stream on Zulip][z] [z]: https://rust-lang.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/procedures/crates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/procedures/crates/</guid>
      <description>Third-party and out-of-tree crates This document describe the guidelines for creating out-of-tree crates for use in the compiler and using third-party crates within the compiler. These guidelines were originally discussed at the Rust All Hands 2019 by the compiler team and others; and then at the 01/03/2019 steering meeting.
Out-of-tree crates One of the primary goals of this policy is to ensure that there is consistency in how out-of-tree crates used in the compiler are set up (at least, those maintained by the compiler team and living in rust-lang) and that the experience is uniform across rust-lang/rust and these crates.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/procedures/form-new-working-group/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/procedures/form-new-working-group/</guid>
      <description>Forming a new working group So, you would like to form a working group?
Step 0. What is a working group? Working groups are the basic way that the compiler team tracks what is going on. If you are doing some sort of task that the compiler team will want to track over time, then it makes sense to form a working group, even if you don&amp;rsquo;t plan to be getting a more people involved.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/procedures/steering-meeting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/procedures/steering-meeting/</guid>
      <description>Steering meeting The &amp;ldquo;steering meeting&amp;rdquo; is a weekly meeting dedicated to planning and high-level discussion. The meeting operates on a repeating schedule:
 Week 1: Planning Week 2: Technical or non-technical discussion Week 3: Technical or non-technical discussion Week 4: Non-technical discussion  The first meeting of the 4-week cycle is used for planning. The primary purpose of this meeting is to select the topics for the next three meetings.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/async-await/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/async-await/faq/</guid>
      <description>Frequently Asked Questions (FAQ) Looks like no questions have been asked yet! If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/async-await/notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/async-await/notes/</guid>
      <description>Async-await Meeting Notes This document contains meeting notes from the async-await working group.
2019-03-12: Triage Meeting Written by: @davidtwco
This week, the members of the async-await working group updated the group on their individual progress on assigned issues from previous meetings. Then, the group triaged all new issues from the week, looking at #59087 and #59001.
In summary, at the end of this meeting, the group is working on:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/diagnostics/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/diagnostics/faq/</guid>
      <description>Frequently Asked Questions (FAQ) If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.
There are no FAQs so far. Please ask us more questions.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/diagnostics/notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/diagnostics/notes/</guid>
      <description> Diagnostics Meeting Notes 2019-05-24  zulip link We triaged all P-medium A-diagnostics issues We figured out a first action for getting annotate-snippets into rustc: https://github.com/rust-lang/rust/issues/59346 We have a plan to reduce the boilerplate needed at the diagnostic emitter site: https://github.com/rust-lang/rust/issues/61132  </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/learning/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/learning/faq/</guid>
      <description>Frequently Asked Questions (FAQ) If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.
There are no FAQs so far. Please ask us more questions.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/learning/minutes/2019.05.14-meeting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/learning/minutes/2019.05.14-meeting/</guid>
      <description>Learning WG 2019-05-14 sync meeting Topics discussed:  Define what’s the walkthrough section we want to add Triage missing rustc-guide chapters How do we want to keep track of who is doing what? Does github Projects works nice for this?  Plan for walkthrough/overview chapter  Goal is to have a chapter which will walk through compilation of simple program Links to other chapters for details This overview differs from the existing queries chapter in that the latter is more focused on how to create your own queries.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/learning/minutes/2019.05.28-meeting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/learning/minutes/2019.05.28-meeting/</guid>
      <description>Learning WG 2019-05-28 sync meeting Triaging rustc-guide repo  Some discussion about how to assign issues on the rust-lang/rustc-guide repo Problem: can&amp;rsquo;t assign issues to non-members Possible solutions:  Add WG-learning members to repo so they can be assigned use triagebot model: bot is assigned the issue and edits the OP to mention the current owner.   Forge  Discussed purpose of the forge and how it differs from rustc-guide Niko feels that most of the content in the forge doesn&amp;rsquo;t obviously belong in the guide and that the stuff currently in the guide feels like it belongs in the guide Forge is for team procedures, infra stuff  would also be good to add craterbot and rustc-timer links to forge (probably link to READMEs of their repos)  link forge from main page   my rule of thumb [for what to put in the guide] is sort of &amp;ldquo;is this something you would do while fixing a compiler bug or implementing a compiler feature&amp;rdquo; -niko</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/learning/minutes/2019.06.11-meeting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/learning/minutes/2019.06.11-meeting/</guid>
      <description>Learning WG 2019-06-11 sync meeting WIP stuff  Write an overview chapter (lokalmatador)
 Steady progress, about to finish up the part on HIR and moving on to MIR Changed the example to bubblesort in the meantime using some mutable borrows Stick to old trait solver for now, according to Niko Draft/WIP: https://paper.dropbox.com/doc/A-first-glance-at-rustc--AexZRkGI1D_0C_eqE5ZBqmgjAQ-Mk45wFbBKBT9C8e9rPaCd  Transcribe the Compiler Lecture Series into chapters
 amanjeev: debugging support  Merge what we have and iterate Needs to be reviewed  juanbono: coherence in chalk  Working with igaray  igaray: representing types in rustc  No progress, but have not dropped it   Add rustc guide to toolstate (mark-i-m)</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/learning/minutes/agenda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/learning/minutes/agenda/</guid>
      <description>WG-Learning future meeting agenda See this doc</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/llvm/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/llvm/faq/</guid>
      <description>Frequently Asked Questions (FAQ) Looks like no questions have been asked yet! If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/llvm/notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/llvm/notes/</guid>
      <description>LLVM Meeting Notes No meetings have been held yet.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/meta/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/meta/faq/</guid>
      <description>Frequently Asked Questions (FAQ) Looks like no questions have been asked yet! If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/meta/notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/meta/notes/</guid>
      <description>Meta Meeting Notes This document contains meeting notes from the Meta working group.
2019-02-28: Meeting Written by: @spastorino
 What problems do we want to solve from a compiler team member perspective and from a contributor perspective?  Help to grow the team by ensuring that we engage people who&amp;rsquo;ve started to get active in rustc? Provide a source of people who can help implement things without needing as much mentoring?</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/meta/rfc-drafts/compiler-team-contributors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/meta/rfc-drafts/compiler-team-contributors/</guid>
      <description>Feature Name: (fill me in with a unique ident, my_awesome_feature) Start Date: (fill me in with today&amp;rsquo;s date, YYYY-MM-DD) RFC PR: rust-lang/rfcs#0000 Rust Issue: rust-lang/rust#0000
Summary Introduce an intermediate level of member for the compiler team, the compiler team contributor.
Motivation This proposal is part of a larger effort to introduce more structure into the compiler team&amp;rsquo;s makeup. This structure should make it easier to become a part of the compiler team, by laying out a clear path to membership and by offering more official roles.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/mir-opt/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/mir-opt/faq/</guid>
      <description>Frequently Asked Questions (FAQ) If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.
Is this working group optimizing the MIR of functions or the MIR-datastructures? Yes
Why is the above answer so short? We&amp;rsquo;re doing both. MIR-datastructures are mostly restructured where necessary to make more optimizations possible.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/mir-opt/notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/mir-opt/notes/</guid>
      <description>Mir Optimizations (mir-opt) Meeting Notes This document will contain meeting notes from the mir-opt working group.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/nll/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/nll/faq/</guid>
      <description>Frequently Asked Questions (FAQ) If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.
What is the relationship to Polonius? Polonius is an experimental, &amp;ldquo;next generation&amp;rdquo; NLL implementation, initially described in [this blog post][polonius]. Enabling the use of Polonius is not in scope for the NLL working group &amp;ndash; see [the polonius working group][../polonius].</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/nll/notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/nll/notes/</guid>
      <description> Non-Lexical Lifetimes (NLL) Meeting Notes This document contains meeting notes from the NLL working group.
2019-02-19:  Agenda:  Meta: What should this meeting be for? Sync-up regarding Place 2.0 (#52708) Status Updates (TBD)   2019-02-13:  Status updates  matthewjasper Opened #58347 to fix issues around closures Got #57609 (match rework) ready for review Opened #58353 spastorino Worked on #52708 pnkfelix Looked a bit at #52708 after assisting spastorino with it lqd: continued on #57374 davidtwco: merged #58161   </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/parallel-rustc/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/parallel-rustc/faq/</guid>
      <description>Frequently Asked Questions (FAQ) Looks like no questions have been asked yet! If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/parallel-rustc/notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/parallel-rustc/notes/</guid>
      <description>This working group hasn&amp;rsquo;t had any meetings yet.
 parallel-rustc Meeting Notes This document contains meeting notes from the parallel-rustc working group.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/pgo/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/pgo/faq/</guid>
      <description>Frequently Asked Questions (FAQ) Looks like no questions have been asked yet! If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/pgo/notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/pgo/notes/</guid>
      <description>Profile-Guided Optimization Meeting Notes This document contains meeting notes from the PGO working group.
WG Status Update - 2019/03/28 https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202019-03-28.20.2354818/near/161957622</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/pipelining/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/pipelining/faq/</guid>
      <description>Frequently Asked Questions (FAQ) Looks like no questions have been asked yet! If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/pipelining/notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/pipelining/notes/</guid>
      <description>pipelining Meeting Notes Video 2019-04-05 @alexcrichton and @nnethercote met on video for ~30m and talked about various aspects of implementing pipelining in the compiler.
What are metadata/rlibs? First we talked a bit about what are rlibs/metadata files and how is this all going to be put together. The recap is:
 Rustc can produce metadata files (--emit metadata). These metadata files are like header files for Rust crates. They&amp;rsquo;re internally a compiler-specific binary format and cannot be inspected.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/polonius/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/polonius/faq/</guid>
      <description>Frequently Asked Questions (FAQ) Looks like no questions have been asked yet! If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/polonius/minutes/2019.03.07-meeting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/polonius/minutes/2019.03.07-meeting/</guid>
      <description>WG-Polonius meeting minutes: 2019/03/07 Relevant links: - The meeting happened in this Zulip thread - A Paper document for the WIP roadmap
The first meeting of the WG Polonius was dedicated to finding concrete next steps, both as part of working on the roadmap, and as onboarding @albins into the group. Since Albin will do a masters related to Polonius, we also worked out other areas they could tackle as time progressed.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/polonius/minutes/2019.04.23-meeting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/polonius/minutes/2019.04.23-meeting/</guid>
      <description>WG-Polonius meeting minutes: 2019/04/23 Relevant links: - The meeting happened in this Zulip thread - A Paper document for the WIP roadmap
In this meeting, we started with a short review of the previous week&amp;rsquo;s work: - Albin continued work on implementing liveness in Polonius, and finalized #105, which is now ready to be merged into a new polonius-engine release. - Niko wrote up notes describing the second part of the liveness effort: modifying rustc to emit var_used and var_defined facts for the previous PR.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/polonius/minutes/2019.04.30-meeting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/polonius/minutes/2019.04.30-meeting/</guid>
      <description>WG-Polonius meeting minutes: 2019/04/30 Relevant links: - The meeting happened in this Zulip thread. - The WIP Roadmap Paper.
In this meeting, we started with a short review of the previous week&amp;rsquo;s work: - Albin continued work on implementing liveness in Polonius, and opened the rustc part of this work: generating the facts needed by the Polonius computation. - Niko wrote up some more notes on continuing the liveness work: the next major part being computing the region_live_at facts in Polonius analyses instead of rustc.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/polonius/minutes/2019.05.07-meeting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/polonius/minutes/2019.05.07-meeting/</guid>
      <description>WG-Polonius meeting minutes: 2019/05/07 Relevant links: - The meeting happened in this Zulip thread. - The WIP Roadmap Paper.
In this shorter meeting, we spent most of the time on the previous week&amp;rsquo;s work: - Niko has written more notes and steps for implementing liveness. With these, most of liveness is described (modulo the specifics of drop) :tada:. - Albin smoothly continued work on computing liveness in Polonius in #105, and rustc&amp;rsquo;s #60266: finishing up last week&amp;rsquo;s steps about the beginning of fact generation, and preparing to emit the ones needed to compute the region_live_at relation.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/polonius/minutes/2019.05.14-meeting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/polonius/minutes/2019.05.14-meeting/</guid>
      <description>WG-Polonius meeting minutes: 2019/05/14 Relevant links: - The meeting happened in this Zulip thread. - The WIP Roadmap Paper.
A recap of last week&amp;rsquo;s work: - Niko and Albin went through a lot of details of liveness, in the dedicated Zulip thread (around this point). - With the previous week&amp;rsquo;s steps, and these conversations, Albin has continued the work on liveness, and is now basically done :tada:. With the 2 PRs, Polonius is able to compute the same region_live_at facts as rustc.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/polonius/minutes/2019.05.28-meeting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/polonius/minutes/2019.05.28-meeting/</guid>
      <description>WG-Polonius meeting minutes: 2019/05/28 Relevant links: - The meeting happened in this Zulip thread. - The WIP Roadmap Paper.
This week, we discussed the following topics:
1. Profiling and fact generation @lokalmatador has made some progress on the profiling tasks: WIP branch is here gathering timing data for parts of NLLs and Polonius using rustc&amp;rsquo;s -Z self-profile API.
The granularity of profiling was discussed, especially regarding fact generation and the separation between NLLs and Polonius.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/polonius/minutes/2019.06.04-meeting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/polonius/minutes/2019.06.04-meeting/</guid>
      <description>WG-Polonius meeting minutes: 2019/06/04 Relevant links: - The meeting happened in this Zulip thread. - The WIP Roadmap Paper.
This week, we discussed the following topics:
1. Liveness To help with reviewing polonius#105, some last minutes changes were discussed: - the older facts recorded in the Polonius dataset (the inputs directory) needed regenerating. This creates a huge diff for review, so separating those out to be &amp;ldquo;rubberstamped&amp;rdquo; would be interesting.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/rfc-2229/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/rfc-2229/faq/</guid>
      <description>Frequently Asked Questions (FAQ) Looks like no questions have been asked yet! If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/rfc-2229/minutes/2019.03.05-roadmap-plan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/rfc-2229/minutes/2019.03.05-roadmap-plan/</guid>
      <description>We chalked out the detailed roadmap for the working group. We also discussed how to addressed the test failures caused by the PRs this and this. The solution for the same can he found under the section Error Message here. The recording for the entire meeting can be found here.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/rls-2.0/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/rls-2.0/faq/</guid>
      <description> Frequently asked questions </description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/rls-2.0/notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/rls-2.0/notes/</guid>
      <description>2019-02-20 Notes from &amp;ldquo;Design of syntax trees&amp;rdquo; meeting Zulip stream
We haven&amp;rsquo;t nailed down the exact design, but we&amp;rsquo;ve covered the design space a bit, and formulated interesting questions to evaluate designs:
 What are the requirements of IDEs? Full-fidelity trees, &amp;ldquo;common super type&amp;rdquo; of nodes for bottom-up traversals. Should queries reach inside of the syntax tree? In general, how incremental computation works with syntax trees? Offsets are bad for incremental (change a lot), parent pointers are bad for incremental (give access to too much context).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/self-profile/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/self-profile/faq/</guid>
      <description>Frequently Asked Questions (FAQ) Looks like no questions have been asked yet! If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/self-profile/notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/self-profile/notes/</guid>
      <description>Self-Profile Meeting Notes This document contains meeting notes from the self-profile working group.
2019-03-05: Meeting Written by: @wesleywiser
Purpose of meeting: Initial meeting to get organized and decide on some next steps.
Agenda: - Current status update - Where to track work? - What does an Minimum Viable Product (MVP) look like? - Next work items?
Current Status After a few rounds of experimentation, we have a -Z self-profile option available in the nightly compliler.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/template/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/template/faq/</guid>
      <description>This page is an example template and not the actual NLL working group.
 Frequently Asked Questions (FAQ) Looks like no questions have been asked yet! If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/template/notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/template/notes/</guid>
      <description>This page is an example template and not the actual NLL working group.
 Feel free to break this out into a directory.
 Non-Lexical Lifetimes (NLL) Meeting Notes This document contains meeting notes from the NLL working group.
2019-02-22: Triage Meeting Written by: @davidtwco
Purpose of meeting: Given slow winding down of the NLL working group, discussed the ongoing purpose of the meeting. @spastorino suggested using the time as an space for open discussion and office hours (as previously suggested by @pnkfelix).</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/traits/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/traits/faq/</guid>
      <description>Frequently asked questions XXX</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/traits/notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/traits/notes/</guid>
      <description>2019.02.19 TL;DR  We are still in the &amp;ldquo;getting organized&amp;rdquo; phase. Some high priority problems related to universes took most of our attention of late. We are discussing focusing first on evaluating whether we can achieve things in current solver before attempting chalk integration. Figuring out how to manage multiple streams of &amp;ldquo;inquiry and work&amp;rdquo; feels like a challenging problem.  Updates (Written by nikomatsakis)
Universe matching video. We recorded a video on how universe matching works.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/traits/minutes/triage-2019-02-24/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/traits/minutes/triage-2019-02-24/</guid>
      <description>Triage meeting on 2019-02-24 Info Zulip thread.
Summary The goal of the meeting was to try and figure out, in somewhat more detail, how we want to organize the traits working group itself. We&amp;rsquo;ve been doing work on enumerating and triaging the set of things we hope to do, but in this meeting we were basically trying to come up with some concrete next steps.
Ultimately we identified the following next steps:</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/traits/minutes/triage-2019-03-04/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/traits/minutes/triage-2019-03-04/</guid>
      <description>Triage meeting on 2019-03-04 Info Zulip thread.
Summary We followed up on the goals from last time.
Lifetime problems around async-await We discussed how we found a way to resolve the async fn complications by changing the async fn desugaring, and hence don&amp;rsquo;t need any deep trait action. We are still interested in trying to find a way to solve the &amp;ldquo;captures problem&amp;rdquo; for impl Trait, however, and alexreg and nikomatsakis may do some follow-up there.</description>
    </item>
    
    <item>
      <title></title>
      <link>/docs/working-groups/traits/minutes/triage-2019-03-11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/working-groups/traits/minutes/triage-2019-03-11/</guid>
      <description>Triage meeting on 2019-03-11 Info Zulip thread
Help wanted!  nikomatsakis is looking for someone to help with investigating lazy normatlization. The task would be to experimentally modify rustc and is best suited to someone already vaguely familiar with the Rust query system etc. See below.  Summary We followed up on the goals from last time.
Lazy normalization and const generics Link
Last week, nikomatsakis did more investigation, taking notes in this dropbox paper document.</description>
    </item>
    
  </channel>
</rss>
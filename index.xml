<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Rust Lang - Compiler Team</title><link>https://rust-lang.github.io/compiler-team/</link><description>Recent content in Introduction on Rust Lang - Compiler Team</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://rust-lang.github.io/compiler-team/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-11-01-streaming-dep-graph-proposal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-11-01-streaming-dep-graph-proposal/</guid><description>&amp;ldquo;Streaming dep graph&amp;rdquo; proposal Summary of the proposal Currently, incremental compilation begins by loading the old dependency graph and then &amp;ndash; as execution proceeds &amp;ndash; building a new dependency graph in memory. At the end of compilation, this new graph is written out.
PR #60035 proposes to change how the new graph is handled. Instead of building the graph in memory and writing it out at the end, we &amp;ldquo;stream&amp;rdquo; out a series of changes to the dep-graph as we go.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-03-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-03-12/</guid><description>T-compiler Meeting Agenda 2020-03-12 Tracking Issue
Announcements Planning meeting tomorrow (March 13th) Rust 1.42 is released today Beta-nominations T-compiler beta noms
Use TypeRelating for instantiating query responses #69591 :back: / :hand: Stable-nominations T-compiler stable noms
No stable nominations this time.
PR&amp;rsquo;s S-waiting-on-team T-compiler S-waiting-on-team
No PR&amp;rsquo;s S-waiting-on-team this time.
Issues of Note 52 P-high issues and 32 of those are unassigned 2 P-medium regression-from-stable-to-beta 3 P-high and 1 P-medium regression-from-stable-to-nightly Nominated Issues T-compiler I-nominated</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-03-19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-03-19/</guid><description>T-compiler Meeting Agenda 2020-03-19 Tracking Issue
Announcements We are in the process of forming a WG-prioritization working group. Focus: mainly on deciding if bugs are critical (potential release blockers) or not. There&amp;rsquo;s a new WG-prioritization stream where pre-triage is going to happen from now on. [Poll] Should we remove I-nominated on toolstate breakage issues?. Beta-nominations T-compiler beta noms
can_begin_literal_or_bool: true on &amp;quot;-&amp;quot;? lit NTs. #70058 :back: / :hand: Already beta accepted &amp;hellip;</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-03-26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-03-26/</guid><description>T-compiler Meeting Agenda 2020-03-26 Tracking Issue
Announcements As per last week discussion, we are going to stop tagging as I-nominated on toolstate breakage #70407 Please check if the conclusion stated on Santiago&amp;rsquo;s comment there is what we want. Beta-nominations T-compiler beta noms
&amp;ldquo;Fix smaller issues with invalid placeholder type errors&amp;rdquo; #70369 :back: / :hand: / :shrug: &amp;ldquo;Account for bad placeholder types in where clauses&amp;rdquo; #70294 :back: / :hand: / :shrug: &amp;ldquo;Fix ICE caused by truncating a negative ZST enum discriminant&amp;rdquo; #70126 :back: / :hand: / :shrug: &amp;ldquo;Ensure HAS_FREE_LOCAL_NAMES is set for ReFree&amp;rdquo; #69956 :back: / :hand: / :shrug: Stable-nominations T-compiler stable noms</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-04-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-04-02/</guid><description>T-compiler Meeting Agenda 2020-04-02 Tracking Issue
Announcements Do we agree on adding an I-prioritize like label? So we can have I-nominated for let&amp;rsquo;s discuss this and I-prioritize as a request for prioritization. Should it be I-prioritize, P-prioritize or maybe WG-prioritization?. Tomorrow: Design meeting: cranelift backend for rustc Beta-nominations T-compiler beta noms
&amp;ldquo;Fix &amp;ldquo;since&amp;rdquo; field for Once::is_complete&amp;rsquo;s #[stable] attribute&amp;rdquo; #70018 :back: / :hand: &amp;ldquo;parse_and_disallow_postfix_after_cast: account for ExprKind::Err.&amp;rdquo; #70556 :back: / :hand: Stable-nominations T-compiler stable noms</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-04-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-04-09/</guid><description>T-compiler Meeting Agenda 2020-04-09 Tracking Issue
Announcements Tomorrow we have our planning meeting WG-prioritization has created two labels I-prioritize so we can ask for prioritization using that label and leave I-nominated to nominate issues for discussion. Read the thread for more info P-critical, this will be critical priority issues. We are in the process of documenting our scheme properly but use your judgement and more or less the idea of a critical bug is one that potentially blocks a release.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-04-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-04-16/</guid><description>T-compiler Meeting Agenda 2020-04-16 Tracking Issue
Announcements Next Thursday, April 23rd we are releasing 1.43 MCP RFC is pending Automate compiler development #272 We have @rustbot seconded support Beta-nominations T-compiler beta noms
&amp;ldquo;Do not reuse post LTO products when exports change&amp;rdquo; #71131 :back: / :hand: Stable-nominations T-compiler stable noms
No stable nominations this time.
PR&amp;rsquo;s S-waiting-on-team T-compiler S-waiting-on-team
&amp;ldquo;Add Option to Force Unwind Tables&amp;rdquo; #69984 In FCP, Disposition to merge. &amp;ldquo;A big options clean-up&amp;rdquo; #70729 In FCP, disposition to merge.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-04-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-04-23/</guid><description>T-compiler Meeting Agenda 2020-04-23 Tracking Issue
Announcements Today we are releasing Rust 1.43.0 Tomorrow (Friday) we will have a compiler team meeting about &amp;ldquo;Standard library implementation ownership&amp;rdquo; #267 There are 5 major changes proposals Decentralize queries #277 Major change proposal: Support collecting all identifiers encountered during compilation #276 Move src/test/run-fail tests to UI #274 Integration of the Cranelift backend with rustc #270 [major change] MIR librarification #233 Beta-nominations T-compiler beta noms</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-04-30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-04-30/</guid><description>T-compiler Meeting Agenda 2020-04-30 Tracking Issue
Announcements There are 3 major changes proposals Implement LLVM-compatible source-based code coverage #278 illumos toolchain builds #279 Inline assembly #280 Beta-nominations T-compiler beta noms
&amp;ldquo;Quick and dirty fix of the unused_braces lint&amp;rdquo; #71517 :back: / :hand: &amp;ldquo;normalize field projection ty to fix broken MIR issue&amp;rdquo; #71488 :back: / :hand: &amp;ldquo;fix error code in E0751.md&amp;rdquo; #71426 :back: / :hand: &amp;ldquo;Remove some Vec allocations to improve performance&amp;rdquo; #71268 :back: / :hand: T-libs ones &amp;hellip;</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-05-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-05-07/</guid><description>T-compiler Meeting Agenda 2020-05-07 Tracking Issue
Announcements Today we are making a point release, 1.43.1 :tada: Remember to fill State of the Compiler Team form by end of today (Thursday). Niko and Felix need time to review before Friday&amp;rsquo;s steering meeting. (You should have links to separate non-anonymous and anonymized feedback forms in your email.) On friday we have our Compiler Team Planning meeting. There is 1 major change proposal &amp;ldquo;intern predicates, introduce forall/implies&amp;rdquo; #285 Beta-acceptances from past week &amp;ldquo;fix error code in E0751.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-05-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-05-14/</guid><description>T-compiler Meeting Agenda 2020-05-14 Tracking Issue
Announcements We have a design meeting tomorrow: &amp;ldquo;survey overview and discussion&amp;rdquo; Major Changes Proposals: Seconded proposals (in FCP) &amp;ldquo;Implement LLVM-compatible source-based code coverage&amp;rdquo; #278 &amp;ldquo;Inline assembly&amp;rdquo; #280 &amp;ldquo;intern predicates, introduce forall/implies&amp;rdquo; #285 &amp;ldquo;Reintegrate chalk into rustc&amp;rdquo; #289 (NEW) New proposals (not seconded) &amp;ldquo;RFC 2229 implementation plan&amp;rdquo; #292 Old proposals (not seconded) &amp;ldquo;Integration of the Cranelift backend with rustc&amp;rdquo; #270 &amp;ldquo;Decentralize queries&amp;rdquo; #277 &amp;ldquo;illumos toolchain builds&amp;rdquo; #279 Beta-nominations T-compiler beta noms</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-05-21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-05-21/</guid><description>T-compiler Meeting Agenda 2020-05-21 Tracking Issue
Announcements We have a design meeting tomorrow: &amp;ldquo;codegen unit partitioning&amp;rdquo; Major Changes Proposals: Seconded proposals (in FCP) &amp;ldquo;Implement LLVM-compatible source-based code coverage&amp;rdquo; #278 &amp;ldquo;Inline assembly&amp;rdquo; #280 &amp;ldquo;intern predicates, introduce forall/implies&amp;rdquo; #285 &amp;ldquo;Reintegrate chalk into rustc&amp;rdquo; #289 (NEW) &amp;ldquo;RFC 2229 implementation plan&amp;rdquo; #292 (NEW) New proposals (not seconded) &amp;ldquo;create windows target group&amp;rdquo; #293 &amp;ldquo;Remove Spans from HIR&amp;rdquo; #294 Old proposals (not seconded) &amp;ldquo;Integration of the Cranelift backend with rustc&amp;rdquo; #270 &amp;ldquo;Decentralize queries&amp;rdquo; #277 &amp;ldquo;illumos toolchain builds&amp;rdquo; #279 Beta-nominations No beta nominations this time for T-compiler and libs-impl.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-05-28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-05-28/</guid><description>T-compiler Meeting Agenda 2020-05-28 Tracking Issue
Announcements Tomorrow (Friday 29th) we have a design meeting: Compiler team 2020-2021 roadmap Major Changes Proposals: Seconded proposals (in FCP) &amp;ldquo;Reintegrate chalk into rustc&amp;rdquo; #289 &amp;ldquo;RFC 2229 implementation plan&amp;rdquo; #292 &amp;ldquo;create windows working group&amp;rdquo; #293 &amp;ldquo;Remove Spans from HIR&amp;rdquo; #294 &amp;ldquo;move leak-check to during coherence, candidate eval&amp;rdquo; #295 &amp;ldquo;Introduce ty_error/ty_error_with_message/ty_error_const to construct error type or const&amp;rdquo; #297 (NEW) New proposals (not seconded) &amp;ldquo;Make CONTRIBUTING.md into a series of tutorials&amp;rdquo; #296 Old proposals (not seconded) &amp;ldquo;Integration of the Cranelift backend with rustc&amp;rdquo; #270 &amp;ldquo;Decentralize queries&amp;rdquo; #277 &amp;ldquo;illumos toolchain builds&amp;rdquo; #279 Beta-nominations No beta nominations this time for T-compiler and libs-impl.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-06-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-06-04/</guid><description>T-compiler Meeting Agenda 2020-06-04 Tracking Issue
Announcements Today: 1.44 will be released :tada: Tomorrow (Friday): We have our planning meeting; you should submit proposals! Major Changes Proposals: Seconded proposals (in FCP) &amp;ldquo;RFC 2229 implementation plan&amp;rdquo; #292 &amp;ldquo;create windows working group&amp;rdquo; #293 &amp;ldquo;Remove Spans from HIR&amp;rdquo; #294 &amp;ldquo;move leak-check to during coherence, candidate eval&amp;rdquo; #295 &amp;ldquo;Introduce ty_error/ty_error_with_message/ty_error_const to construct error type or const&amp;rdquo; #297 &amp;ldquo;mv src/lib{std,core,alloc,test,etc} std/lib{std,core,alloc,test,etc}&amp;rdquo; #298 &amp;ldquo;Preserve PlaceContext through projections&amp;rdquo; #300 New proposals (not seconded) No new not seconded proposals Old proposals (not seconded) &amp;ldquo;Integration of the Cranelift backend with rustc&amp;rdquo; #270 &amp;ldquo;Decentralize queries&amp;rdquo; #277 &amp;ldquo;illumos toolchain builds&amp;rdquo; #279 &amp;ldquo;Make CONTRIBUTING.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-06-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-06-11/</guid><description>T-compiler Meeting Agenda 2020-06-11 Tracking Issue
Announcements Major Changes Proposals: New accepted proposals &amp;ldquo;mv src/lib{std,core,alloc,test,etc} std/lib{std,core,alloc,test,etc}&amp;rdquo; #298 Seconded proposals (in FCP) &amp;ldquo;illumos toolchain builds&amp;rdquo; #279 &amp;ldquo;Make CONTRIBUTING.md into a series of tutorials&amp;rdquo; #296 &amp;ldquo;Preserve PlaceContext through projections&amp;rdquo; #300 &amp;ldquo;Make lang-items private&amp;rdquo; #301 (NEW) &amp;ldquo;#[deny(unsafe_op_in_unsafe_fn)] in liballoc&amp;rdquo; #306 (NEW) New proposals (not seconded) &amp;ldquo;&amp;ndash;extern-location to specify where an &amp;ndash;extern dependency is defined&amp;rdquo; #303 &amp;ldquo;Support const parameters in type dependent paths&amp;rdquo; #304 Old proposals (not seconded) &amp;ldquo;Integration of the Cranelift backend with rustc&amp;rdquo; #270 &amp;ldquo;Decentralize queries&amp;rdquo; #277 This week, and for future Thursday meetings, we will start presenting the WG checkins at the start of the meeting.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-06-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-06-18/</guid><description>T-compiler Meeting Agenda 2020-06-18 Tracking Issue
Announcements Major Changes Proposals:
New accepted proposals &amp;ldquo;Preserve PlaceContext through projections&amp;rdquo; #300 &amp;ldquo;Make lang-items private&amp;rdquo; #301 Seconded proposals (in FCP) &amp;ldquo;illumos toolchain builds&amp;rdquo; #279 &amp;ldquo;Make CONTRIBUTING.md into a series of tutorials&amp;rdquo; #296 &amp;ldquo;Support const parameters in type dependent paths&amp;rdquo; #304 &amp;ldquo;#[deny(unsafe_op_in_unsafe_fn)] in liballoc&amp;rdquo; #306 New proposals (not seconded) &amp;ldquo;Move Rust provided objects, libraries and binaries meant for self-contained linkage to separate directory&amp;rdquo; #310 &amp;ldquo;RISC-V Linux Tier 2 Host support&amp;rdquo; #312 &amp;ldquo;Switch from libbacktrace to gimli&amp;rdquo; #313 Old proposals (not seconded) &amp;ldquo;Integration of the Cranelift backend with rustc&amp;rdquo; #270 &amp;ldquo;Decentralize queries&amp;rdquo; #277 &amp;ldquo;&amp;ndash;extern-location to specify where an &amp;ndash;extern dependency is defined&amp;rdquo; #303 Unilateral beta backport approvals</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-06-25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-06-25/</guid><description>T-compiler Meeting Agenda 2020-06-25 Tracking Issue
Announcements Design meeting tomorrow (Friday): Areas of the compiler compiler-team#288 Major Changes Proposals: New accepted proposals &amp;ldquo;Make CONTRIBUTING.md into a series of tutorials&amp;rdquo; #296 &amp;ldquo;Preserve PlaceContext through projections&amp;rdquo; #300 &amp;ldquo;Make lang-items private&amp;rdquo; #301 &amp;ldquo;#[deny(unsafe_op_in_unsafe_fn)] in liballoc&amp;rdquo; #306 Seconded proposals (in FCP) &amp;ldquo;illumos toolchain builds&amp;rdquo; #279 &amp;ldquo;Support const parameters in type dependent paths&amp;rdquo; #304 &amp;ldquo;#![deny(unsafe_op_in_unsafe_fn)] in libcore and libstd&amp;rdquo; #317 &amp;ldquo;-Zmir-opt-level Reform&amp;rdquo; #319 &amp;ldquo;Move CONTRIBUTING.md to rustc-dev-guide and instead point to Getting Started&amp;rdquo; #320 New proposals (not seconded) &amp;ldquo;Add future-incompat entries to json diagnostic output&amp;rdquo; #315 &amp;ldquo;MCP: Reorganize the rust-lang/rust repo directory structure&amp;rdquo; #316 &amp;ldquo;Portable SIMD project group&amp;rdquo; #321 Old proposals (not seconded) &amp;ldquo;Integration of the Cranelift backend with rustc&amp;rdquo; #270 &amp;ldquo;Decentralize queries&amp;rdquo; #277 &amp;ldquo;&amp;ndash;extern-location to specify where an &amp;ndash;extern dependency is defined&amp;rdquo; #303 &amp;ldquo;Move Rust provided objects, libraries and binaries meant for self-contained linkage to separate directory&amp;rdquo; #310 &amp;ldquo;RISC-V Linux Tier 2 Host support&amp;rdquo; #312 &amp;ldquo;Switch from libbacktrace to gimli&amp;rdquo; #313 WG checkins @WG-rls2.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-07-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-07-02/</guid><description>T-compiler Meeting Agenda 2020-07-02 Tracking Issue
Announcements We have a planning scheduled for tomorrow (friday 3rd), but tomorrow is a US holiday and @nikomatsakis was asking if we are having this meeting or we should skip it New MCPs (take a look, see if you like them!) &amp;ldquo;Change ty::Const to an integer tree representation&amp;rdquo; compiler-team#323 &amp;ldquo;Infer hidden types without replacing with an inference variable&amp;rdquo; compiler-team#325 Old MCPs (not seconded, take a look) &amp;ldquo;Integration of the Cranelift backend with rustc&amp;rdquo; compiler-team#270 &amp;ldquo;Decentralize queries&amp;rdquo; compiler-team#277 &amp;ldquo;&amp;ndash;extern-location to specify where an &amp;ndash;extern dependency is defined&amp;rdquo; compiler-team#303 &amp;ldquo;Move Rust provided objects, libraries and binaries meant for self-contained linkage to separate directory&amp;rdquo; compiler-team#310 &amp;ldquo;Add future-incompat entries to json diagnostic output&amp;rdquo; compiler-team#315 &amp;ldquo;MCP: Reorganize the rust-lang/rust repo directory structure&amp;rdquo; compiler-team#316 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-07-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-07-09/</guid><description>T-compiler Meeting Agenda 2020-07-09 Tracking Issue
Announcements We will be releasing Rust 1.45 next thursday! New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Integration of the Cranelift backend with rustc&amp;rdquo; compiler-team#270 &amp;ldquo;Decentralize queries&amp;rdquo; compiler-team#277 &amp;ldquo;Move Rust provided objects, libraries and binaries meant for self-contained linkage to separate directory&amp;rdquo; compiler-team#310 &amp;ldquo;Add future-incompat entries to json diagnostic output&amp;rdquo; compiler-team#315 &amp;ldquo;MCP: Reorganize the rust-lang/rust repo directory structure&amp;rdquo; compiler-team#316 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-07-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-07-16/</guid><description>T-compiler Meeting Agenda 2020-07-16 Tracking Issue
Announcements Rust 1.45 is being released today! :tada::tada::tada: New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Integration of the Cranelift backend with rustc&amp;rdquo; compiler-team#270 &amp;ldquo;Decentralize queries&amp;rdquo; compiler-team#277 &amp;ldquo;Move Rust provided objects, libraries and binaries meant for self-contained linkage to separate directory&amp;rdquo; compiler-team#310 &amp;ldquo;Add future-incompat entries to json diagnostic output&amp;rdquo; compiler-team#315 &amp;ldquo;MCP: Reorganize the rust-lang/rust repo directory structure&amp;rdquo; compiler-team#316 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-07-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-07-23/</guid><description>T-compiler Meeting Agenda 2020-07-23 Tracking Issue
Announcements New MCPs (take a look, see if you like them!) No new MCPs at this time. Old MCPs (not seconded, take a look) &amp;ldquo;Integration of the Cranelift backend with rustc&amp;rdquo; compiler-team#270 &amp;ldquo;Decentralize queries&amp;rdquo; compiler-team#277 &amp;ldquo;MCP: Reorganize the rust-lang/rust repo directory structure&amp;rdquo; compiler-team#316 Pending FCP requests (check your boxes!) &amp;ldquo;Stabilizable subset of const generics&amp;rdquo; compiler-team#332 Things in FCP (make sure you&amp;rsquo;re good with it) &amp;ldquo;Move Rust provided objects, libraries and binaries meant for self-contained linkage to separate directory&amp;rdquo; compiler-team#310 &amp;ldquo;Add future-incompat entries to json diagnostic output&amp;rdquo; compiler-team#315 &amp;ldquo;Infer hidden types without replacing with an inference variable&amp;rdquo; compiler-team#325 Accepted MCPs &amp;ldquo;Change ty::Const to a &amp;ldquo;value tree&amp;rdquo; representation&amp;rdquo; compiler-team#323 &amp;ldquo;Improve defaults in x.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-07-30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-07-30/</guid><description>T-compiler Meeting Agenda 2020-07-30 Tracking Issue
Announcements Tomorrow (Friday at 2pm UTC) we have our Steering Meeting New MCPs (take a look, see if you like them!) &amp;ldquo;Move the compiler to a new compiler/ directory&amp;rdquo; compiler-team#336 &amp;ldquo;Create a WebAssembly target notification group.&amp;rdquo; compiler-team#337 &amp;ldquo;Form t-compiler/wg-parser-library&amp;rdquo; compiler-team#338 Old MCPs (not seconded, take a look) &amp;ldquo;Integration of the Cranelift backend with rustc&amp;rdquo; compiler-team#270 &amp;ldquo;Decentralize queries&amp;rdquo; compiler-team#277 &amp;ldquo;Infer hidden types without replacing with an inference variable&amp;rdquo; compiler-team#325 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-08-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-08-06/</guid><description>T-compiler Meeting Agenda 2020-08-06 Tracking Issue
Announcements tracing has been added to rustc, @oli is playing with features, comment if you have opinions: https://github.com/rust-lang/rust/pull/75143 New MCPs (take a look, see if you like them!) &amp;ldquo;refactor types to fit the chalk-ty generic plan&amp;rdquo; compiler-team#341 Old MCPs (not seconded, take a look) &amp;ldquo;Integration of the Cranelift backend with rustc&amp;rdquo; compiler-team#270 &amp;ldquo;Decentralize queries&amp;rdquo; compiler-team#277 &amp;ldquo;Infer hidden types without replacing with an inference variable&amp;rdquo; compiler-team#325 &amp;ldquo;Move the compiler to a new compiler/ directory&amp;rdquo; compiler-team#336 &amp;ldquo;Form t-compiler/wg-parser-library&amp;rdquo; compiler-team#338 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-08-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-08-13/</guid><description>T-compiler Meeting Agenda 2020-08-13 Tracking Issue
Announcements Next thursday 20th is RustConf New MCPs (take a look, see if you like them!) &amp;ldquo;Stabilise link-self-contained option&amp;rdquo; compiler-team#343 Old MCPs (not seconded, take a look) &amp;ldquo;Integration of the Cranelift backend with rustc&amp;rdquo; compiler-team#270 &amp;ldquo;Decentralize queries&amp;rdquo; compiler-team#277 &amp;ldquo;Infer hidden types without replacing with an inference variable&amp;rdquo; compiler-team#325 &amp;ldquo;Stabilizable subset of const generics&amp;rdquo; compiler-team#332 &amp;ldquo;Move the compiler to a new compiler/ directory&amp;rdquo; compiler-team#336 &amp;ldquo;Form t-compiler/wg-parser-library&amp;rdquo; compiler-team#338 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-08-20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-08-20/</guid><description>T-compiler Meeting Agenda 2020-08-20 Tracking Issue
Announcements Next Thursday 27th we will be releasing Rust 1.46! Virtual RustConf is starting in 2hs New MCPs (take a look, see if you like them!) &amp;ldquo;Uplift temporary-cstring-as-ptr lint from clippy into rustc&amp;rdquo; compiler-team#346 &amp;ldquo;Uplift drop-bounds lint from clippy into rustc&amp;rdquo; compiler-team#347 Old MCPs (not seconded, take a look) &amp;ldquo;Integration of the Cranelift backend with rustc&amp;rdquo; compiler-team#270 &amp;ldquo;Decentralize queries&amp;rdquo; compiler-team#277 &amp;ldquo;Infer hidden types without replacing with an inference variable&amp;rdquo; compiler-team#325 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-08-27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-08-27/</guid><description>T-compiler Meeting Agenda 2020-08-27 Tracking Issue
Announcements Rust 1.46 is being released today! :tada: :tada: :tada: Crater run for 1.46 rust#75142 came back clear. In particular we wanted to check if rust#75494 was ok. Tomorrow (friday 28th) we have our planning meeting New MCPs (take a look, see if you like them!) &amp;ldquo;Add StatementKind::Call to MIR&amp;rdquo; compiler-team#348 &amp;ldquo;Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it&amp;rdquo; compiler-team#350 Old MCPs (not seconded, take a look) &amp;ldquo;Integration of the Cranelift backend with rustc&amp;rdquo; compiler-team#270 &amp;ldquo;Decentralize queries&amp;rdquo; compiler-team#277 &amp;ldquo;Infer hidden types without replacing with an inference variable&amp;rdquo; compiler-team#325 &amp;ldquo;Uplift temporary-cstring-as-ptr lint from clippy into rustc&amp;rdquo; compiler-team#346 &amp;ldquo;Uplift drop-bounds lint from clippy into rustc&amp;rdquo; compiler-team#347 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-09-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-09-03/</guid><description>T-compiler Meeting Agenda 2020-09-03 Tracking Issue
Announcements Tomorrow (Friday 4th at time:2020-09-04T14:00:00+00:00) we are going to discuss results of 2020 Contributor Survey New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Integration of the Cranelift backend with rustc&amp;rdquo; compiler-team#270 &amp;ldquo;Decentralize queries&amp;rdquo; compiler-team#277 &amp;ldquo;Infer hidden types without replacing with an inference variable&amp;rdquo; compiler-team#325 &amp;ldquo;Uplift temporary-cstring-as-ptr lint from clippy into rustc&amp;rdquo; compiler-team#346 &amp;ldquo;Uplift drop-bounds lint from clippy into rustc&amp;rdquo; compiler-team#347 &amp;ldquo;Add StatementKind::Call to MIR&amp;rdquo; compiler-team#348 &amp;ldquo;Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it&amp;rdquo; compiler-team#350 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-09-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-09-10/</guid><description>T-compiler Meeting Agenda 2020-09-10 Tracking Issue
Announcements Please fill out the MCP retrospective survey; we&amp;rsquo;ll use the results to guide the upcoming design meeting Friday Sep 18. Contributors may want to check out improving bootstrap times for contributor fun and profit Zulip discussion New MCPs (take a look, see if you like them!) &amp;ldquo;Accept RFC 2951 &amp;ldquo;Linking modifiers for native libraries&amp;rdquo;&amp;rdquo; compiler-team#356 Old MCPs (not seconded, take a look) &amp;ldquo;Integration of the Cranelift backend with rustc&amp;rdquo; compiler-team#270 &amp;ldquo;Decentralize queries&amp;rdquo; compiler-team#277 &amp;ldquo;Infer hidden types without replacing with an inference variable&amp;rdquo; compiler-team#325 &amp;ldquo;Uplift temporary-cstring-as-ptr lint from clippy into rustc&amp;rdquo; compiler-team#346 &amp;ldquo;Uplift drop-bounds lint from clippy into rustc&amp;rdquo; compiler-team#347 &amp;ldquo;Add StatementKind::Intrinsic to MIR&amp;rdquo; compiler-team#348 &amp;ldquo;Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it&amp;rdquo; compiler-team#350 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-09-17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-09-17/</guid><description>T-compiler Meeting Agenda 2020-09-17 Tracking Issue
Announcements There was a meeting followup from last weekly meeting where a bunch of T-compiler RFC backlog things were discussed. Tomorrow we will have the MCP retrospective at time:2020-09-18T14:00:00+00:00 wg-incr-comp will have its third meeting next Tuesday at 8am EDT. Ping wesleywiser or pnkfelix if you&amp;rsquo;re interested in helping out. New MCPs (take a look, see if you like them!) &amp;ldquo;MCP: move compiler/ crates to stable Rust&amp;rdquo; compiler-team#358 &amp;ldquo;ty.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-09-24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-09-24/</guid><description>T-compiler Meeting Agenda 2020-09-24 Tracking Issue
Announcements Tomorrow we have our planning meeting at time:2020-09-25T14:00:00+00:00 New MCPs (take a look, see if you like them!) &amp;ldquo;Add 32-bit and 64-bit stderr/stdout files for ui tests&amp;rdquo; compiler-team#365 Old MCPs (not seconded, take a look) &amp;ldquo;Integration of the Cranelift backend with rustc&amp;rdquo; compiler-team#270 &amp;ldquo;Decentralize queries&amp;rdquo; compiler-team#277 &amp;ldquo;Infer hidden types without replacing with an inference variable&amp;rdquo; compiler-team#325 &amp;ldquo;Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it&amp;rdquo; compiler-team#350 &amp;ldquo;MCP: move compiler/ crates to stable Rust&amp;rdquo; compiler-team#358 &amp;ldquo;ty.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-10-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-10-01/</guid><description>T-compiler Meeting Agenda 2020-10-01 Tracking Issue
Announcements Rust 1.47 is going to be released next Thursday, October 8th. New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Integration of the Cranelift backend with rustc&amp;rdquo; compiler-team#270 &amp;ldquo;Decentralize queries&amp;rdquo; compiler-team#277 &amp;ldquo;Infer hidden types without replacing with an inference variable&amp;rdquo; compiler-team#325 &amp;ldquo;Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it&amp;rdquo; compiler-team#350 &amp;ldquo;MCP: move compiler/ crates to stable Rust&amp;rdquo; compiler-team#358 &amp;ldquo;ty.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-10-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-10-08/</guid><description>T-compiler Meeting Agenda 2020-10-08 Tracking Issue
Announcements Today we are releasing Rust 1.47! :tada::tada::tada: New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Decentralize queries&amp;rdquo; compiler-team#277 &amp;ldquo;Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it&amp;rdquo; compiler-team#350 &amp;ldquo;MCP: move compiler/ crates to stable Rust&amp;rdquo; compiler-team#358 &amp;ldquo;Add 32-bit and 64-bit stderr/stdout files for ui tests&amp;rdquo; compiler-team#365 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-10-15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-10-15/</guid><description>T-compiler Meeting Agenda 2020-10-15 Tracking Issue
Announcements New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Decentralize queries&amp;rdquo; compiler-team#277 &amp;ldquo;Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it&amp;rdquo; compiler-team#350 &amp;ldquo;MCP: move compiler/ crates to stable Rust&amp;rdquo; compiler-team#358 &amp;ldquo;Add 32-bit and 64-bit stderr/stdout files for ui tests&amp;rdquo; compiler-team#365 Pending FCP requests (check your boxes!) &amp;ldquo;Accept RFC 2951 &amp;ldquo;Linking modifiers for native libraries&amp;rdquo;&amp;rdquo; compiler-team#356 Things in FCP (make sure you&amp;rsquo;re good with it) &amp;ldquo;ty.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-10-22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-10-22/</guid><description>T-compiler Meeting Agenda 2020-10-22 Tracking Issue
Announcements Rust Compiler + Dev Tools Jobs Microsoft has a Senior Software Engineer role: &amp;ldquo;We are looking for engineers to work on Rust compilers and tools to support the usage of the Rust programming language.&amp;rdquo; Facebook is also hiring compiler and library engineers (US only), according to Nadav Rotem tweet; (if anyone finds an actual job listing, feel free to share it) Tomorrow Friday 23rd at time:2020-10-23T14:00:00+00:00 we have a Compiler Team Planning meeting New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-10-29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-10-29/</guid><description>T-compiler Meeting Agenda 2020-10-29 Tracking Issue
Announcements New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Decentralize queries&amp;rdquo; compiler-team#277 &amp;ldquo;Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it&amp;rdquo; compiler-team#350 &amp;ldquo;MCP: move compiler/ crates to stable Rust&amp;rdquo; compiler-team#358 &amp;ldquo;Add 32-bit and 64-bit stderr/stdout files for ui tests&amp;rdquo; compiler-team#365 &amp;ldquo;Add a NOOP_METHOD_CALL lint for methods which should never be directly called&amp;rdquo; compiler-team#375 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-11-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-11-05/</guid><description>T-compiler Meeting Agenda 2020-11-05 Tracking Issue
Announcements Tomorrow, friday 6th at time:2020-11-06T15:00:00+00:00 we will have rustc regression review day. Due to daylight saving time in US the meeting may be 1 hour later than the usual slot for you. see also compiler-team#382, and the proposed agenda New MCPs (take a look, see if you like them!) &amp;ldquo;Accept RFC 2951 &amp;ldquo;Linking modifiers for native libraries&amp;rdquo;&amp;rdquo; compiler-team#356 &amp;ldquo;inherit stable annotations in enum variants and field items&amp;rdquo; compiler-team#370 &amp;ldquo;MCP: More Cranelift-friendly portable SIMD intrinsics&amp;rdquo; compiler-team#381 Old MCPs (not seconded, take a look) &amp;ldquo;Decentralize queries&amp;rdquo; compiler-team#277 &amp;ldquo;Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it&amp;rdquo; compiler-team#350 &amp;ldquo;MCP: move compiler/ crates to stable Rust&amp;rdquo; compiler-team#358 &amp;ldquo;Add 32-bit and 64-bit stderr/stdout files for ui tests&amp;rdquo; compiler-team#365 &amp;ldquo;Add a NOOP_METHOD_CALL lint for methods which should never be directly called&amp;rdquo; compiler-team#375 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-11-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-11-12/</guid><description>T-compiler Meeting Agenda 2020-11-12 Tracking Issue
Announcements Tomorrow friday 13th is rustc RFC backlog day Next Thursday 19th we are releasing Rust 1.48 New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Decentralize queries&amp;rdquo; compiler-team#277 &amp;ldquo;Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it&amp;rdquo; compiler-team#350 &amp;ldquo;Accept RFC 2951 &amp;ldquo;Linking modifiers for native libraries&amp;rdquo;&amp;rdquo; compiler-team#356 &amp;ldquo;MCP: move compiler/ crates to stable Rust&amp;rdquo; compiler-team#358 &amp;ldquo;Add 32-bit and 64-bit stderr/stdout files for ui tests&amp;rdquo; compiler-team#365 &amp;ldquo;Add a NOOP_METHOD_CALL lint for methods which should never be directly called&amp;rdquo; compiler-team#375 &amp;ldquo;MCP: More Cranelift-friendly portable SIMD intrinsics&amp;rdquo; compiler-team#381 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-11-19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-11-19/</guid><description>T-compiler Meeting Agenda 2020-11-19 Tracking Issue
Announcements Rust 1.48 is going to be released today!!! :tada: Tomorrow we have our planning meeting at time:2020-11-20T15:00:00-00:00 New MCPs (take a look, see if you like them!) &amp;ldquo;Debuggable Macro Expansions&amp;rdquo; compiler-team#386 &amp;ldquo;Rename rustc_ty&amp;rdquo; compiler-team#387 &amp;ldquo;Move query implementation outside rustc_middle&amp;rdquo; compiler-team#388 Old MCPs (not seconded, take a look) &amp;ldquo;Decentralize queries&amp;rdquo; compiler-team#277 &amp;ldquo;Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it&amp;rdquo; compiler-team#350 &amp;ldquo;Accept RFC 2951 &amp;ldquo;Linking modifiers for native libraries&amp;rdquo;&amp;rdquo; compiler-team#356 &amp;ldquo;MCP: move compiler/ crates to stable Rust&amp;rdquo; compiler-team#358 &amp;ldquo;Add 32-bit and 64-bit stderr/stdout files for ui tests&amp;rdquo; compiler-team#365 &amp;ldquo;Add a NOOP_METHOD_CALL lint for methods which should never be directly called&amp;rdquo; compiler-team#375 &amp;ldquo;MCP: More Cranelift-friendly portable SIMD intrinsics&amp;rdquo; compiler-team#381 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-12-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-12-03/</guid><description>T-compiler Meeting Agenda 2020-12-03 Tracking Issue
Announcements Members of the compiler team and the compiler contributors team received a mail and a github ping this morning about the foundation, please check it out! Rustc Steering Mtg Friday Dec 4: Performance Goals for 2021 New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it&amp;rdquo; compiler-team#350 &amp;ldquo;MCP: move compiler/ crates to stable Rust&amp;rdquo; compiler-team#358 &amp;ldquo;Add 32-bit and 64-bit stderr/stdout files for ui tests&amp;rdquo; compiler-team#365 &amp;ldquo;Add a NOOP_METHOD_CALL lint for methods which should never be directly called&amp;rdquo; compiler-team#375 &amp;ldquo;MCP: More Cranelift-friendly portable SIMD intrinsics&amp;rdquo; compiler-team#381 &amp;ldquo;Debuggable Macro Expansions&amp;rdquo; compiler-team#386 &amp;ldquo;Move query implementation outside rustc_middle&amp;rdquo; compiler-team#388 &amp;ldquo;Uplift the invalid_atomic_ordering lint from clippy to rustc&amp;rdquo; compiler-team#390 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-12-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-12-10/</guid><description>T-compiler Meeting Agenda 2020-12-10 Tracking Issue
Announcements New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it&amp;rdquo; compiler-team#350 &amp;ldquo;MCP: move compiler/ crates to stable Rust&amp;rdquo; compiler-team#358 &amp;ldquo;Add 32-bit and 64-bit stderr/stdout files for ui tests&amp;rdquo; compiler-team#365 &amp;ldquo;Add a NOOP_METHOD_CALL lint for methods which should never be directly called&amp;rdquo; compiler-team#375 &amp;ldquo;MCP: More Cranelift-friendly portable SIMD intrinsics&amp;rdquo; compiler-team#381 &amp;ldquo;Debuggable Macro Expansions&amp;rdquo; compiler-team#386 &amp;ldquo;Move query implementation outside rustc_middle&amp;rdquo; compiler-team#388 &amp;ldquo;Uplift the invalid_atomic_ordering lint from clippy to rustc&amp;rdquo; compiler-team#390 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-12-17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-12-17/</guid><description>T-compiler Meeting Agenda 2020-12-17 Tracking Issue
Announcements Tomorrow (friday 18th) at the same time as this meeting, we have the &amp;ldquo;Compiler Team Foundation Q&amp;amp;A&amp;rdquo; Following meetings are on 24th and 31st (note for @pnkfelix: unsure if we will have these meetings and who will be around) We will be releasing 1.49 on December 31st New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it&amp;rdquo; compiler-team#350 &amp;ldquo;MCP: move compiler/ crates to stable Rust&amp;rdquo; compiler-team#358 &amp;ldquo;Add 32-bit and 64-bit stderr/stdout files for ui tests&amp;rdquo; compiler-team#365 &amp;ldquo;Add a NOOP_METHOD_CALL lint for methods which should never be directly called&amp;rdquo; compiler-team#375 &amp;ldquo;MCP: More Cranelift-friendly portable SIMD intrinsics&amp;rdquo; compiler-team#381 &amp;ldquo;Debuggable Macro Expansions&amp;rdquo; compiler-team#386 &amp;ldquo;Move query implementation outside rustc_middle&amp;rdquo; compiler-team#388 &amp;ldquo;Uplift the invalid_atomic_ordering lint from clippy to rustc&amp;rdquo; compiler-team#390 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-12-24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-12-24/</guid><description>T-compiler Meeting Agenda 2020-12-24 Tracking Issue
Announcements We will be releasing 1.49 next Thursday, on December 31st New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Require users to confirm they know RUSTC_BOOTSTRAP is unsupported before using it&amp;rdquo; compiler-team#350 &amp;ldquo;MCP: move compiler/ crates to stable Rust&amp;rdquo; compiler-team#358 &amp;ldquo;Add 32-bit and 64-bit stderr/stdout files for ui tests&amp;rdquo; compiler-team#365 &amp;ldquo;Add a NOOP_METHOD_CALL lint for methods which should never be directly called&amp;rdquo; compiler-team#375 &amp;ldquo;MCP: More Cranelift-friendly portable SIMD intrinsics&amp;rdquo; compiler-team#381 &amp;ldquo;Debuggable Macro Expansions&amp;rdquo; compiler-team#386 &amp;ldquo;Move query implementation outside rustc_middle&amp;rdquo; compiler-team#388 &amp;ldquo;Uplift the invalid_atomic_ordering lint from clippy to rustc&amp;rdquo; compiler-team#390 &amp;ldquo;Staged queries&amp;rdquo; compiler-team#391 &amp;ldquo;Do not traverse the HIR to generate metadata&amp;rdquo; compiler-team#392 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-12-31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2020-12-31/</guid><description>T-compiler Meeting Agenda 2020-12-31 Tracking Issue
Announcements Rust 1.49 has been released!!! :tada: :tada: :tada: Make sure that all ideas for 2021 are in the HackMD; see zulip discussion New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;MCP: move compiler/ crates to stable Rust&amp;rdquo; compiler-team#358 &amp;ldquo;Add 32-bit and 64-bit stderr/stdout files for ui tests&amp;rdquo; compiler-team#365 &amp;ldquo;Add a NOOP_METHOD_CALL lint for methods which should never be directly called&amp;rdquo; compiler-team#375 &amp;ldquo;MCP: More Cranelift-friendly portable SIMD intrinsics&amp;rdquo; compiler-team#381 &amp;ldquo;Debuggable Macro Expansions&amp;rdquo; compiler-team#386 &amp;ldquo;Move query implementation outside rustc_middle&amp;rdquo; compiler-team#388 &amp;ldquo;Uplift the invalid_atomic_ordering lint from clippy to rustc&amp;rdquo; compiler-team#390 &amp;ldquo;Staged queries&amp;rdquo; compiler-team#391 &amp;ldquo;Do not traverse the HIR to generate metadata&amp;rdquo; compiler-team#392 &amp;ldquo;Embed version numbers in backport nominations and regression labels&amp;rdquo; compiler-team#393 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-01-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-01-07/</guid><description>T-compiler Meeting Agenda 2021-01-07 Tracking Issue
Announcements Welcome into 2021 :) New MCPs (take a look, see if you like them!) &amp;ldquo;Add different entry points for x.py&amp;rdquo; compiler-team#396 &amp;ldquo;Remove PredicateKind in favor of only Binder&amp;rdquo; compiler-team#397 Old MCPs (not seconded, take a look) &amp;ldquo;MCP: move compiler/ crates to stable Rust&amp;rdquo; compiler-team#358 &amp;ldquo;Add 32-bit and 64-bit stderr/stdout files for ui tests&amp;rdquo; compiler-team#365 &amp;ldquo;Add a NOOP_METHOD_CALL lint for methods which should never be directly called&amp;rdquo; compiler-team#375 &amp;ldquo;Drop official support for Windows XP&amp;rdquo; compiler-team#378 &amp;ldquo;MCP: More Cranelift-friendly portable SIMD intrinsics&amp;rdquo; compiler-team#381 &amp;ldquo;Debuggable Macro Expansions&amp;rdquo; compiler-team#386 &amp;ldquo;Move query implementation outside rustc_middle&amp;rdquo; compiler-team#388 &amp;ldquo;Uplift the invalid_atomic_ordering lint from clippy to rustc&amp;rdquo; compiler-team#390 &amp;ldquo;Staged queries&amp;rdquo; compiler-team#391 &amp;ldquo;Do not traverse the HIR to generate metadata&amp;rdquo; compiler-team#392 &amp;ldquo;Embed version numbers in backport nominations and regression labels&amp;rdquo; compiler-team#393 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-01-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-01-14/</guid><description>T-compiler Meeting Agenda 2021-01-14 Tracking Issue
Announcements New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;MCP: move compiler/ crates to stable Rust&amp;rdquo; compiler-team#358 &amp;ldquo;Add 32-bit and 64-bit stderr/stdout files for ui tests&amp;rdquo; compiler-team#365 &amp;ldquo;Add a NOOP_METHOD_CALL lint for methods which should never be directly called&amp;rdquo; compiler-team#375 &amp;ldquo;MCP: More Cranelift-friendly portable SIMD intrinsics&amp;rdquo; compiler-team#381 &amp;ldquo;Debuggable Macro Expansions&amp;rdquo; compiler-team#386 &amp;ldquo;Move query implementation outside rustc_middle&amp;rdquo; compiler-team#388 &amp;ldquo;Uplift the invalid_atomic_ordering lint from clippy to rustc&amp;rdquo; compiler-team#390 &amp;ldquo;Staged queries&amp;rdquo; compiler-team#391 &amp;ldquo;Do not traverse the HIR to generate metadata&amp;rdquo; compiler-team#392 &amp;ldquo;Embed version numbers in backport nominations and regression labels&amp;rdquo; compiler-team#393 &amp;ldquo;Add different entry points for x.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-01-21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-01-21/</guid><description>T-compiler Meeting Agenda 2021-01-21 Tracking Issue
Announcements New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;MCP: move compiler/ crates to stable Rust&amp;rdquo; compiler-team#358 &amp;ldquo;Add 32-bit and 64-bit stderr/stdout files for ui tests&amp;rdquo; compiler-team#365 &amp;ldquo;Add a NOOP_METHOD_CALL lint for methods which should never be directly called&amp;rdquo; compiler-team#375 &amp;ldquo;MCP: More Cranelift-friendly portable SIMD intrinsics&amp;rdquo; compiler-team#381 &amp;ldquo;Debuggable Macro Expansions&amp;rdquo; compiler-team#386 &amp;ldquo;Move query implementation outside rustc_middle&amp;rdquo; compiler-team#388 &amp;ldquo;Uplift the invalid_atomic_ordering lint from clippy to rustc&amp;rdquo; compiler-team#390 &amp;ldquo;Staged queries&amp;rdquo; compiler-team#391 &amp;ldquo;Do not traverse the HIR to generate metadata&amp;rdquo; compiler-team#392 &amp;ldquo;Embed version numbers in backport nominations and regression labels&amp;rdquo; compiler-team#393 &amp;ldquo;Add different entry points for x.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-01-28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-01-28/</guid><description>T-compiler Meeting Agenda 2021-01-28 Tracking Issue
Announcements New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Add 32-bit and 64-bit stderr/stdout files for ui tests&amp;rdquo; compiler-team#365 &amp;ldquo;MCP: More Cranelift-friendly portable SIMD intrinsics&amp;rdquo; compiler-team#381 &amp;ldquo;Debuggable Macro Expansions&amp;rdquo; compiler-team#386 &amp;ldquo;Move query implementation outside rustc_middle&amp;rdquo; compiler-team#388 &amp;ldquo;Uplift the invalid_atomic_ordering lint from clippy to rustc&amp;rdquo; compiler-team#390 &amp;ldquo;Staged queries&amp;rdquo; compiler-team#391 &amp;ldquo;Do not traverse the HIR to generate metadata&amp;rdquo; compiler-team#392 &amp;ldquo;Embed version numbers in backport nominations and regression labels&amp;rdquo; compiler-team#393 &amp;ldquo;Add different entry points for x.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-02-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-02-04/</guid><description>T-compiler Meeting Agenda 2021-02-04 Tracking Issue
Announcements Tomorrow at time:2021-02-05T12:00:00-03:00 Compiler Team Design Meeting: perf.lo site review Next Thursday February, the 11th: release of next stable 1.50 🎉 David Wood and Jack Huey are now compiler team members 🎉 New MCPs (take a look, see if you like them!) &amp;ldquo;rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat &amp;ldquo;stable&amp;rdquo;?&amp;rdquo; compiler-team#403 Old MCPs (not seconded, take a look) &amp;ldquo;MCP: More Cranelift-friendly portable SIMD intrinsics&amp;rdquo; compiler-team#381 &amp;ldquo;Debuggable Macro Expansions&amp;rdquo; compiler-team#386 &amp;ldquo;Move query implementation outside rustc_middle&amp;rdquo; compiler-team#388 &amp;ldquo;Uplift the invalid_atomic_ordering lint from clippy to rustc&amp;rdquo; compiler-team#390 &amp;ldquo;Staged queries&amp;rdquo; compiler-team#391 &amp;ldquo;Do not traverse the HIR to generate metadata&amp;rdquo; compiler-team#392 &amp;ldquo;Embed version numbers in backport nominations and regression labels&amp;rdquo; compiler-team#393 &amp;ldquo;Add different entry points for x.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-02-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-02-11/</guid><description>T-compiler Meeting Agenda 2021-02-11 Tracking Issue
Announcements 🎉 Today, release stable 1.50 🎉 blog link @rylev and @pnkfelix met regarding perf triage and perf.rust-lang.org. @pnkfelix wants to suggest that for any PR that touches something under compiler/, have rustbot post comment suggesting that they consider a rust-timer run (and include the syntax for the invocation). Feedback? MCP status New MCPs (take a look, see if you like them!) No new proposals this time.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-02-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-02-18/</guid><description>T-compiler Meeting Agenda 2021-02-18 Tracking Issue
Announcements We have no steering meeting tomorrow (Friday). We spent last week&amp;rsquo;s planning meeting doing ad-hoc planning for the March sprint. pnkfelix drafted a blog post announcing the March sprint. He hopes to publish tonight; if you want to chime in, throw a comment up on linked draft. MCP/FCP status New MCPs (take a look, see if you like them!) &amp;ldquo;Never Rollup When Changing the compiler Directory&amp;rdquo; compiler-team#407 Old MCPs (not seconded, take a look) &amp;ldquo;MCP: More Cranelift-friendly portable SIMD intrinsics&amp;rdquo; compiler-team#381 &amp;ldquo;Debuggable Macro Expansions&amp;rdquo; compiler-team#386 &amp;ldquo;Move query implementation outside rustc_middle&amp;rdquo; compiler-team#388 &amp;ldquo;Uplift the invalid_atomic_ordering lint from clippy to rustc&amp;rdquo; compiler-team#390 &amp;ldquo;Staged queries&amp;rdquo; compiler-team#391 &amp;ldquo;Do not traverse the HIR to generate metadata&amp;rdquo; compiler-team#392 &amp;ldquo;Embed version numbers in backport nominations and regression labels&amp;rdquo; compiler-team#393 &amp;ldquo;Add different entry points for x.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-02-25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-02-25/</guid><description>T-compiler Meeting Agenda 2021-02-25 Tracking Issue
Announcements MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;MCP: More Cranelift-friendly portable SIMD intrinsics&amp;rdquo; compiler-team#381 &amp;ldquo;Debuggable Macro Expansions&amp;rdquo; compiler-team#386 &amp;ldquo;Move query implementation outside rustc_middle&amp;rdquo; compiler-team#388 &amp;ldquo;Uplift the invalid_atomic_ordering lint from clippy to rustc&amp;rdquo; compiler-team#390 &amp;ldquo;Staged queries&amp;rdquo; compiler-team#391 &amp;ldquo;Do not traverse the HIR to generate metadata&amp;rdquo; compiler-team#392 &amp;ldquo;Embed version numbers in backport nominations and regression labels&amp;rdquo; compiler-team#393 &amp;ldquo;Add different entry points for x.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-03-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-03-04/</guid><description>T-compiler Meeting Agenda 2021-03-04 Tracking Issue
Announcements New MCPs (take a look, see if you like them!) &amp;ldquo;Filter out query machinery from compiler backtraces by default&amp;rdquo; compiler-team#410 Old MCPs (not seconded, take a look) &amp;ldquo;MCP: More Cranelift-friendly portable SIMD intrinsics&amp;rdquo; compiler-team#381 &amp;ldquo;Debuggable Macro Expansions&amp;rdquo; compiler-team#386 &amp;ldquo;Uplift the invalid_atomic_ordering lint from clippy to rustc&amp;rdquo; compiler-team#390 &amp;ldquo;Staged queries&amp;rdquo; compiler-team#391 &amp;ldquo;Do not traverse the HIR to generate metadata&amp;rdquo; compiler-team#392 &amp;ldquo;Embed version numbers in backport nominations and regression labels&amp;rdquo; compiler-team#393 &amp;ldquo;Add different entry points for x.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-03-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-03-11/</guid><description>T-compiler Meeting Agenda 2021-03-11 Tracking Issue
Announcements Tomorrow, at 10 AM EST, is the T-compiler planning meeting for the upcoming cycle MCPs/FCPs status New MCPs (take a look, see if you like them!) &amp;ldquo;Lang Item for Transmutability&amp;rdquo; compiler-team#411 Old MCPs (not seconded, take a look) &amp;ldquo;MCP: More Cranelift-friendly portable SIMD intrinsics&amp;rdquo; compiler-team#381 &amp;ldquo;Debuggable Macro Expansions&amp;rdquo; compiler-team#386 &amp;ldquo;Uplift the invalid_atomic_ordering lint from clippy to rustc&amp;rdquo; compiler-team#390 &amp;ldquo;Staged queries&amp;rdquo; compiler-team#391 &amp;ldquo;Do not traverse the HIR to generate metadata&amp;rdquo; compiler-team#392 &amp;ldquo;Embed version numbers in backport nominations and regression labels&amp;rdquo; compiler-team#393 &amp;ldquo;Add different entry points for x.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-03-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-03-18/</guid><description>T-compiler Meeting Agenda 2021-03-18 Tracking Issue
Announcements Tomorrow (Friday 18 March) we will have a retrospective on the March memshrink sprint. see compiler-team#412 Next week 25.03 the new stable release 1.51 is out MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;LLVM plugin support in Rust&amp;rdquo; compiler-team#419 Old MCPs (not seconded, take a look) &amp;ldquo;MCP: More Cranelift-friendly portable SIMD intrinsics&amp;rdquo; compiler-team#381 &amp;ldquo;Debuggable Macro Expansions&amp;rdquo; compiler-team#386 &amp;ldquo;Uplift the invalid_atomic_ordering lint from clippy to rustc&amp;rdquo; compiler-team#390 &amp;ldquo;Staged queries&amp;rdquo; compiler-team#391 &amp;ldquo;Do not traverse the HIR to generate metadata&amp;rdquo; compiler-team#392 &amp;ldquo;Embed version numbers in backport nominations and regression labels&amp;rdquo; compiler-team#393 &amp;ldquo;Add different entry points for x.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-03-25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-03-25/</guid><description>T-compiler Meeting Agenda 2021-03-25 Tracking Issue
Announcements :tada: Today the new stable release 1.51 is out :tada:
Tomorrow March 26 10am EDT (14:00 UTC) compiler team meeting to decide on the behaviour of musl- targets compiling
current background doc for design meeting: https://hackmd.io/YoAGSxUsRWumVvbRiHddrg MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Lint large assignments and locals&amp;rdquo; compiler-team#420 Old MCPs (not seconded, take a look) &amp;ldquo;MCP: More Cranelift-friendly portable SIMD intrinsics&amp;rdquo; compiler-team#381 &amp;ldquo;Debuggable Macro Expansions&amp;rdquo; compiler-team#386 &amp;ldquo;Uplift the invalid_atomic_ordering lint from clippy to rustc&amp;rdquo; compiler-team#390 &amp;ldquo;Staged queries&amp;rdquo; compiler-team#391 &amp;ldquo;Do not traverse the HIR to generate metadata&amp;rdquo; compiler-team#392 &amp;ldquo;Embed version numbers in backport nominations and regression labels&amp;rdquo; compiler-team#393 &amp;ldquo;Add different entry points for x.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-04-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-04-01/</guid><description>T-compiler Meeting Agenda 2021-04-01 Tracking Issue
Announcements No Steering Meeting tomorrow (2021-04-02), as it is holiday in many countries. MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Update the existing musl targets to be dynamically linked.&amp;rdquo; compiler-team#422 &amp;ldquo;Rename -Cllvm-args to something backend agnostic&amp;rdquo; compiler-team#421 Old MCPs (not seconded, take a look) &amp;ldquo;MCP: More Cranelift-friendly portable SIMD intrinsics&amp;rdquo; compiler-team#381 &amp;ldquo;Debuggable Macro Expansions&amp;rdquo; compiler-team#386 &amp;ldquo;Uplift the invalid_atomic_ordering lint from clippy to rustc&amp;rdquo; compiler-team#390 &amp;ldquo;Staged queries&amp;rdquo; compiler-team#391 &amp;ldquo;Do not traverse the HIR to generate metadata&amp;rdquo; compiler-team#392 &amp;ldquo;Embed version numbers in backport nominations and regression labels&amp;rdquo; compiler-team#393 &amp;ldquo;Add different entry points for x.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-04-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-04-08/</guid><description>T-compiler Meeting Agenda 2021-04-08 Tracking Issue
Announcements Tomorrow, at 10 AM EST, is the T-compiler planning meeting for the upcoming cycle
New MCPs (take a look, see if you like them!)
&amp;ldquo;A &amp;ndash;temps-dir option for specifying where the intermediate files are written&amp;rdquo; compiler-team#423 Old MCPs (not seconded, take a look)
&amp;ldquo;Debuggable Macro Expansions&amp;rdquo; compiler-team#386 &amp;ldquo;Staged queries&amp;rdquo; compiler-team#391 &amp;ldquo;Do not traverse the HIR to generate metadata&amp;rdquo; compiler-team#392 &amp;ldquo;Embed version numbers in backport nominations and regression labels&amp;rdquo; compiler-team#393 &amp;ldquo;Add different entry points for x.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-04-15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-04-15/</guid><description>T-compiler Meeting Agenda 2021-04-15 Tracking Issue
Announcements Heads-up: meeting for perf triage report construction is pushed to April, 30th at 10am EST (14:00 UTC) (originally scheduled for tomorrow April, 16th).
New MCPs (take a look, see if you like them!)
No new proposals this time. Old MCPs (not seconded, take a look)
&amp;ldquo;Debuggable Macro Expansions&amp;rdquo; compiler-team#386 &amp;ldquo;Staged queries&amp;rdquo; compiler-team#391 &amp;ldquo;Do not traverse the HIR to generate metadata&amp;rdquo; compiler-team#392 &amp;ldquo;Embed version numbers in backport nominations and regression labels&amp;rdquo; compiler-team#393 &amp;ldquo;Add different entry points for x.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-04-22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-04-22/</guid><description>T-compiler Meeting Agenda 2021-04-22 Tracking Issue
Reminder: meeting rustc steering: &amp;ldquo;guiding principles&amp;rdquo; doc tomorrow April, 23rd at 10am EST (14:00 UTC)
Announcements New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Add different entry points for x.py&amp;rdquo; compiler-team#396 &amp;ldquo;rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat &amp;ldquo;stable&amp;rdquo;?&amp;rdquo; compiler-team#403 &amp;ldquo;Eagerly construct bodies of THIR&amp;rdquo; compiler-team#409 &amp;ldquo;LLVM plugin support in Rust&amp;rdquo; compiler-team#419 &amp;ldquo;A &amp;ndash;temps-dir option for specifying where the intermediate files are written&amp;rdquo; compiler-team#423 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-04-29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-04-29/</guid><description>T-compiler Meeting Agenda 2021-04-29 Tracking Issue
Tomorrow (Friday April, 30th) rustc steering: perf triage report construction at 10:00 ET (14:00 UTC) Next week May, 6th the new stable release 1.52 will be out Announcements New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Add different entry points for x.py&amp;rdquo; compiler-team#396 &amp;ldquo;rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat &amp;ldquo;stable&amp;rdquo;?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-05-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-05-06/</guid><description>T-compiler Meeting Agenda 2021-05-06 Tracking Issue
:tada: Today the new stable release 1.52 is out :tada: Tomorrow May, 7th 2021 10:00 ET (14:00 UTC) monthly Compiler Team planning meeting Announcements New MCPs (take a look, see if you like them!) &amp;ldquo;Promote aarch64-apple-ios-sim to Tier 2&amp;rdquo; compiler-team#428 Old MCPs (not seconded, take a look) &amp;ldquo;Add different entry points for x.py&amp;rdquo; compiler-team#396 &amp;ldquo;rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat &amp;ldquo;stable&amp;rdquo;?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-05-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-05-13/</guid><description>T-compiler Meeting Agenda 2021-05-13 Tracking Issue
Announcements New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Add different entry points for x.py&amp;rdquo; compiler-team#396 &amp;ldquo;rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat &amp;ldquo;stable&amp;rdquo;?&amp;rdquo; compiler-team#403 &amp;ldquo;LLVM plugin support in Rust&amp;rdquo; compiler-team#419 &amp;ldquo;Promote aarch64-apple-ios-sim to Tier 2&amp;rdquo; compiler-team#428 Pending FCP requests (check your boxes!) No pending FCP requests this time.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-05-20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-05-20/</guid><description>T-compiler Meeting Agenda 2021-05-20 Tracking Issue
Announcements New MCPs (take a look, see if you like them!) &amp;ldquo;Write text output files to stdout if options like -o - or --emit asm=- are provided&amp;rdquo; compiler-team#431 &amp;ldquo;Introduce ty::WhereClause to align chalk and rustc dyn representation&amp;rdquo; compiler-team#433 Old MCPs (not seconded, take a look) &amp;ldquo;Add different entry points for x.py&amp;rdquo; compiler-team#396 &amp;ldquo;rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat &amp;ldquo;stable&amp;rdquo;?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-05-27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-05-27/</guid><description>T-compiler Meeting Agenda 2021-05-27 Tracking Issue
Announcements MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Add different entry points for x.py&amp;rdquo; compiler-team#396 &amp;ldquo;rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat &amp;ldquo;stable&amp;rdquo;?&amp;rdquo; compiler-team#403 &amp;ldquo;LLVM plugin support in Rust&amp;rdquo; compiler-team#419 &amp;ldquo;Promote aarch64-apple-ios-sim to Tier 2&amp;rdquo; compiler-team#428 &amp;ldquo;Write text output files to stdout if options like -o - or --emit asm=- are provided&amp;rdquo; compiler-team#431 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-06-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-06-03/</guid><description>T-compiler Meeting Agenda 2021-06-03 Tracking Issue
Announcements Friday June, 4th 2021 at 10:00 ET / 14:00 UTC is planning meeting. Get your proposals in at proposal site MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Add different entry points for x.py&amp;rdquo; compiler-team#396 &amp;ldquo;rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat &amp;ldquo;stable&amp;rdquo;?&amp;rdquo; compiler-team#403 &amp;ldquo;LLVM plugin support in Rust&amp;rdquo; compiler-team#419 &amp;ldquo;Promote aarch64-apple-ios-sim to Tier 2&amp;rdquo; compiler-team#428 &amp;ldquo;Write text output files to stdout if options like -o - or --emit asm=- are provided&amp;rdquo; compiler-team#431 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-06-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-06-10/</guid><description>T-compiler Meeting Agenda 2021-06-10 Tracking Issue
Announcements :warning: next week June, 17th, release of Rust stable 1.53 pnkfelix seeking review with quick turnaround (in time for cutting 1.54-beta tomorrow) on PR 85193 MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Don&amp;rsquo;t steal the resolver when lowering HIR; instead store an immutable resolver in TyCtxt&amp;rdquo; compiler-team#437 Old MCPs (not seconded, take a look) &amp;ldquo;Add different entry points for x.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-06-17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-06-17/</guid><description>T-compiler Meeting Agenda 2021-06-17 Tracking Issue
Announcements :tada: today release of Rust stable 1.53 :tada: MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Add different entry points for x.py&amp;rdquo; compiler-team#396 &amp;ldquo;rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat &amp;ldquo;stable&amp;rdquo;?&amp;rdquo; compiler-team#403 &amp;ldquo;LLVM plugin support in Rust&amp;rdquo; compiler-team#419 &amp;ldquo;Promote aarch64-apple-ios-sim to Tier 2&amp;rdquo; compiler-team#428 &amp;ldquo;Write text output files to stdout if options like -o - or --emit asm=- are provided&amp;rdquo; compiler-team#431 &amp;ldquo;Don&amp;rsquo;t steal the resolver when lowering HIR; instead store an immutable resolver in TyCtxt&amp;rdquo; compiler-team#437 Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-06-24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-06-24/</guid><description>T-compiler Meeting Agenda 2021-06-24 Tracking Issue
Announcements June 25th, at time:2021-06-25T10:00:00-04:00 1.52 Fingerprint retrospective compiler-team#435 MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;CI should exercise (subset of) tests under &amp;ndash;stage 1&amp;rdquo; compiler-team#439 &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?86 targets&amp;rdquo; compiler-team#441 Old MCPs (not seconded, take a look) &amp;ldquo;Add different entry points for x.py&amp;rdquo; compiler-team#396 &amp;ldquo;rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat &amp;ldquo;stable&amp;rdquo;?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-07-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-07-01/</guid><description>T-compiler Meeting Agenda 2021-07-01 Tracking Issue
Announcements Tomorrow time:2021-07-02T10:00:00-04:00, montly Compiler Team Planning meeting MCPs/FCP New MCPs (take a look, see if you like them!) &amp;ldquo;CI should exercise (subset of) tests under &amp;ndash;stage 1&amp;rdquo; compiler-team#439 &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?86 targets&amp;rdquo; compiler-team#441 &amp;ldquo;Encode spans relative to the enclosing item&amp;rdquo; compiler-team#443 Old MCPs (not seconded, take a look :point_right: NEW: testing age timestamps) &amp;ldquo;Add different entry points for x.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-07-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-07-08/</guid><description>T-compiler Meeting Agenda 2021-07-08 Tracking Issue
Announcements Friday meeting: Tomorrow at time:2021-07-09T10:00:00-04:00 we will be having part III of our series of meetings on the fingerprint bug write-up, compiler-team#435 (doc under discussion). MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Add different entry points for x.py&amp;rdquo; compiler-team#396 (last comment: 6 months ago) &amp;ldquo;rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat &amp;ldquo;stable&amp;rdquo;?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-07-15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-07-15/</guid><description>T-compiler Meeting Agenda 2021-07-15 Tracking Issue
Announcements Tomorrow July 16th at 10:00 ET steering meeting to discuss extensions to the review policy for Rust Compiler Pull Requests (policy) MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Non exhaustive reachable patterns lint&amp;rdquo; compiler-team#445 Old MCPs (not seconded, take a look) &amp;ldquo;Add different entry points for x.py&amp;rdquo; compiler-team#396 (last comment: 6 months ago) &amp;ldquo;rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat &amp;ldquo;stable&amp;rdquo;?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-07-22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-07-22/</guid><description>T-compiler Meeting Agenda 2021-07-22 Tracking Issue
Announcements :loudspeaker: Next week, July, 29th release Rust stable 1.54 :loudspeaker: MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Add different entry points for x.py&amp;rdquo; compiler-team#396 (last comment: 6 months ago) &amp;ldquo;rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat &amp;ldquo;stable&amp;rdquo;?&amp;rdquo; compiler-team#403 (last comment: 5 months ago) &amp;ldquo;Don&amp;rsquo;t steal the resolver when lowering HIR; instead store an immutable resolver in TyCtxt&amp;rdquo; compiler-team#437 (last comment: about 41 days ago) &amp;ldquo;CI should exercise (subset of) tests under &amp;ndash;stage 1&amp;rdquo; compiler-team#439 (last comment: about 20 days ago) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-07-29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-07-29/</guid><description>T-compiler Meeting Agenda 2021-07-29 Tracking Issue
Announcements Tomorrow time:2021-07-30T10:00:00-04:00: We have our planning meeting for the August steering meeting cycle. There is currently one proposal, perhaps more ideas. :confetti: Today July, 29th release Rust stable 1.54 :confetti: MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Make resolve_instance fallible&amp;rdquo; compiler-team#449 &amp;ldquo;Reproducible command line + determinism&amp;rdquo; compiler-team#450 Old MCPs (not seconded, take a look) &amp;ldquo;Add different entry points for x.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-08-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-08-05/</guid><description>T-compiler Meeting Agenda 2021-08-05 Tracking Issue
Announcements MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Make AST-&amp;gt;HIR lowering incremental&amp;rdquo; compiler-team#452 Old MCPs (not seconded, take a look) &amp;ldquo;Add different entry points for x.py&amp;rdquo; compiler-team#396 (last comments: GH 6m ago, Zulip 20d ago) &amp;ldquo;rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat &amp;ldquo;stable&amp;rdquo;?&amp;rdquo; compiler-team#403 (last comments: GH 6m ago, Zulip 25d ago) &amp;ldquo;Don&amp;rsquo;t steal the resolver when lowering HIR; instead store an immutable resolver in TyCtxt&amp;rdquo; compiler-team#437 (last comments: GH 55d ago, Zulip 41d ago) &amp;ldquo;CI should exercise (subset of) tests under &amp;ndash;stage 1&amp;rdquo; compiler-team#439 (last comments: GH 49d ago, Zulip none) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-08-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-08-12/</guid><description>T-compiler Meeting Agenda 2021-08-12 Tracking Issue
Announcements New MCPs (take a look, see if you like them!) &amp;ldquo;Add TyKind::Const and remove GenericArgKind::Const&amp;rdquo; compiler-team#453 Old MCPs (not seconded, take a look) &amp;ldquo;Add different entry points for x.py&amp;rdquo; compiler-team#396 (last comments: GH 7m ago, Zulip 4d ago) &amp;ldquo;rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat &amp;ldquo;stable&amp;rdquo;?&amp;rdquo; compiler-team#403 (last comments: GH 6m ago, Zulip 43d ago) &amp;ldquo;Don&amp;rsquo;t steal the resolver when lowering HIR; instead store an immutable resolver in TyCtxt&amp;rdquo; compiler-team#437 (last comments: GH 2m ago, Zulip 49d ago) &amp;ldquo;CI should exercise (subset of) tests under &amp;ndash;stage 1&amp;rdquo; compiler-team#439 (last comments: GH 49d ago, Zulip none) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-08-19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-08-19/</guid><description>T-compiler Meeting Agenda 2021-08-19 Tracking Issue
Announcements Steering meeting on time:2021-08-20T10:00:00-04:00 to discuss how to increase the number of reviewers available to handle the review queue load. (Zulip topic) MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;prefer-dynamic=subset&amp;rdquo; compiler-team#455 Old MCPs (not seconded, take a look) &amp;ldquo;Add different entry points for x.py&amp;rdquo; compiler-team#396 (last comments: GH 7m ago, Zulip 12d ago) &amp;ldquo;rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat &amp;ldquo;stable&amp;rdquo;?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-08-26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-08-26/</guid><description>T-compiler Meeting Agenda 2021-08-26 Tracking Issue
Announcements Tomorrow at time:2021-08-27T10:00:00-04:00 Compiler Team Planning meeting (link) Tomorrow from time:2021-08-27T10:00:00-04:00 until time:2021-08-27T14:00:00-04:00 Polonius Hackathon on #t-compiler/wg-polonius, google meet link T-compiler agenda now has a new section: the 5 most recently updated PRs waiting for review (thanks @Santiago Pastorino for contributing the patch and @inquisitivecrystal for assigning the team label to most of them. Zulip discussion. MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-09-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-09-02/</guid><description>T-compiler Meeting Agenda 2021-09-02 Tracking Issue
Announcements :loudspeaker: Next week, September, 9th release Rust stable 1.55 :loudspeaker: MCPs/FCPs Note: 2021-08-27 MCP review
New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat &amp;ldquo;stable&amp;rdquo;?&amp;rdquo; compiler-team#403 (last comment: GH none, Zulip 2m ago) &amp;ldquo;CI should exercise (subset of) tests under &amp;ndash;stage 1&amp;rdquo; compiler-team#439 (last comment: GH +2m ago, Zulip yesterday) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-09-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-09-09/</guid><description>T-compiler Meeting Agenda 2021-09-09 Tracking Issue
Announcements :tada: Today 9/9th, release Rust stable 1.55 :tada: MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat &amp;ldquo;stable&amp;rdquo;?&amp;rdquo; compiler-team#403 (last comment: GH none, Zulip: none) &amp;ldquo;CI should exercise (subset of) tests under &amp;ndash;stage 1&amp;rdquo; compiler-team#439 (last comment: GH 20d ago, Zulip: 1w ago) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-09-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-09-16/</guid><description>T-compiler Meeting Agenda 2021-09-16 Tracking Issue
MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat &amp;ldquo;stable&amp;rdquo;?&amp;rdquo; compiler-team#403 (last review activity: GH none, Zulip: none) &amp;ldquo;CI should exercise (subset of) tests under &amp;ndash;stage 1&amp;rdquo; compiler-team#439 (last review activity: GH none, Zulip: about 2w ago) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-09-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-09-23/</guid><description>T-compiler Meeting Agenda 2021-09-23 Tracking Issue
Announcements Tomorrow time:2021-09-24T10:00:00-04:00, Compiler Team Planning meeting Tomorrow time:2021-09-24T10:00:00-04:00, Polonius Hackaton (is there a link for this topic?) MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Tier 3 target proposal: x86_64-unknown-none (freestanding/bare-metal x86-64)&amp;rdquo; compiler-team#462 Old MCPs (not seconded, take a look) &amp;ldquo;rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat &amp;ldquo;stable&amp;rdquo;?&amp;rdquo; compiler-team#403 (last review activity: GH none, Zulip: +2months ago) &amp;ldquo;CI should exercise (subset of) tests under &amp;ndash;stage 1&amp;rdquo; compiler-team#439 (last review activity: GH none, Zulip: about 1 month ago) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-09-30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-09-30/</guid><description>T-compiler Meeting Agenda 2021-09-30 Tracking Issue
Announcements (TIP) add here non-recurrent scheduled meetings, check the schedule calendar (TIP) mention upcoming Rust stable releases, check the release calendar (TIP) remove this section if none are needed MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) No old proposals this time. Pending FCP requests (check your boxes!) No pending FCP requests this time.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-10-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-10-07/</guid><description>T-compiler Meeting Agenda 2021-10-07 Tracking Issue
Announcements / MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat &amp;ldquo;stable&amp;rdquo;?&amp;rdquo; compiler-team#403 (last review activity: GH none, Zulip +3 months ago) &amp;ldquo;CI should exercise (subset of) tests under &amp;ndash;stage 1&amp;rdquo; compiler-team#439 (last review activity: GH none, Zulip about 1 month ago) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-10-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-10-14/</guid><description>T-compiler Meeting Agenda 2021-10-14 Tracking Issue
Announcements :loudspeaker: Next Thursday Oct, 21st release Rust stable 1.56 :loudspeaker: Tomorrow time:2021-10-15T10:00:00-04:00, Polonius Hackaton We are now asking for feedback on the annual community survey rough draft. Please take a look and add issues for anything you find! T-compiler Planning meeting is a week from tomorrow. Get proposals in if you have stuff that would be good for a steering meeting during the October/November cycle.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-10-21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-10-21/</guid><description>T-compiler Meeting Agenda 2021-10-21 Tracking Issue
Announcements :confetti: Today Thursday Oct, 21st release Rust stable 1.56 :confetti: Tomorrow time:2021-10-15T10:00:00-04:00 monthly Compiler team meeting Any legal questions about compiler copyright support? MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;rustdoc is using rustc_ast_pretty, would it be possible to make it somewhat &amp;ldquo;stable&amp;rdquo;?&amp;rdquo; compiler-team#403 (last review activity: GH none, Zulip +3 months ago) &amp;ldquo;CI should exercise (subset of) tests under &amp;ndash;stage 1&amp;rdquo; compiler-team#439 (last review activity: GH none, Zulip about 1 week ago) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-10-28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-10-28/</guid><description>T-compiler Meeting Agenda 2021-10-28 Tracking Issue
Announcements If you see a PR/issue that seems like there might be legal implications due to copywrite/IP/etc, please let the Core team know (or at least message Felix or Wesley so we can pass it along). &amp;ldquo;If you see something, say something&amp;rdquo; MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;CI should exercise (subset of) tests under &amp;ndash;stage 1&amp;rdquo; compiler-team#439 (last review activity: GH none, Zulip about 10 days ago) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-11-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-11-04/</guid><description>T-compiler Meeting Agenda 2021-11-04 Tracking Issue
Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copywrite/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;CI should exercise (subset of) tests under &amp;ndash;stage 1&amp;rdquo; compiler-team#439 (last review activity: 2 months ago) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-11-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-11-11/</guid><description>T-compiler Meeting Agenda 2021-11-11 Tracking Issue
Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copywrite/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). A new PR has been filed to include the Playstation Vita as tier 3 target. This comment suggests the situation could be similar to other end-of-life proprietary platforms.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-11-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-11-18/</guid><description>T-compiler Meeting Agenda 2021-11-18 Tracking Issue
Announcements Tomorrow we have our monthly planning meeting at time:2021-11-19T15:00:00-00:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copywrite/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;CI should exercise (subset of) tests under &amp;ndash;stage 1&amp;rdquo; compiler-team#439 (last review activity: 3 months ago) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-11-24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-11-24/</guid><description>T-compiler Meeting Agenda 2021-11-24 Tracking Issue
Announcements :loudspeaker: next week December, 2nd, release of Rust stable 1.57 Reminder: if you see a PR/issue that seems like there might be legal implications due to copywrite/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Tier 3 target proposal: riscv64gc-linux-android (Android target for riscv64gc)&amp;rdquo; compiler-team#472 Old MCPs (not seconded, take a look) &amp;ldquo;CI should exercise (subset of) tests under &amp;ndash;stage 1&amp;rdquo; compiler-team#439 (last review activity: 3 months ago) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-12-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-12-02/</guid><description>T-compiler Meeting Agenda 2021-12-02 Tracking Issue
Announcements :loudspeaker: today release of Rust stable 1.57 (the last for 2021 :)) Reminder: if you see a PR/issue that seems like there might be legal implications due to copywrite/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Tier 3 target proposal: riscv64gc-linux-android (Android target for riscv64gc)&amp;rdquo; compiler-team#472 &amp;ldquo;-Dwarnings to cover all warnings&amp;rdquo; compiler-team#473 Old MCPs (not seconded, take a look) &amp;ldquo;CI should exercise (subset of) tests under &amp;ndash;stage 1&amp;rdquo; compiler-team#439 (last review activity: 3 months ago) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-12-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-12-09/</guid><description>T-compiler Meeting Agenda 2021-12-09 Tracking Issue
Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Tier 3 target proposal: riscv64gc-linux-android (Android target for riscv64gc)&amp;rdquo; compiler-team#472 &amp;ldquo;-Dwarnings to cover all warnings&amp;rdquo; compiler-team#473 Old MCPs (not seconded, take a look) &amp;ldquo;CI should exercise (subset of) tests under &amp;ndash;stage 1&amp;rdquo; compiler-team#439 (last review activity: 3 months ago) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-12-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-12-16/</guid><description>T-compiler Meeting Agenda 2021-12-16 Tracking Issue
Announcements Tomorrow time:2021-12-17T15:00:00+01:00, monthly Compiler Team Planning meeting Reminder: if you see a PR/issue that seems like there might be legal implications due to copywrite/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;CI should exercise (subset of) tests under &amp;ndash;stage 1&amp;rdquo; compiler-team#439 (last review activity: 3 months ago) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-12-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-12-23/</guid><description>T-compiler Meeting Agenda 2021-12-23 Tracking Issue
Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Build-time execution sandboxing&amp;rdquo; compiler-team#475 Old MCPs (not seconded, take a look) &amp;ldquo;CI should exercise (subset of) tests under &amp;ndash;stage 1&amp;rdquo; compiler-team#439 (last review activity: 4 months ago) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-12-30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2021-12-30/</guid><description>T-compiler Meeting Agenda 2021-12-30 Tracking Issue
Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-01-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-01-06/</guid><description>T-compiler Meeting Agenda 2022-01-06 Tracking Issue
Announcements Next week, Jan. the 13rd, the new stable release 1.58 is out Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Introduce a new linter for diagnostic meesages&amp;rdquo; compiler-team#478 Old MCPs (not seconded, take a look) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-01-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-01-13/</guid><description>T-compiler Meeting Agenda 2022-01-13 Tracking Issue
Announcements Today new stable release 1.58 is out :loudspeaker: :tada: Tomorrow at time:2022-01-14T10:00:00-05:00 Planning meeting Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-01-20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-01-20/</guid><description>T-compiler Meeting Agenda 2022-01-20 Tracking Issue
Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). New template for rustc targets (see rust#90498), new targets should use this to document their requirements. MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-01-27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-01-27/</guid><description>T-compiler Meeting Agenda 2022-01-27 Tracking Issue
Announcements Tomorrow (Friday at time:2022-01-28T10:00:00-05:00) we have our Steering Meeting Meeting proposal: Run down P-high issues list Related blog post: https://blog.rust-lang.org/inside-rust/2022/01/18/jan-steering-cycle.html Document prepared by Felix: https://hackmd.io/YY3u0dkURtiQHDVX0hEImA?view Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). (TIP) strive to include a reason when you do @bors retry, even if you think its obvious from context.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-02-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-02-03/</guid><description>T-compiler Meeting Agenda 2022-02-03 Tracking Issue
Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-02-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-02-10/</guid><description>T-compiler Meeting Agenda 2022-02-10 Tracking Issue
Announcements Tomorrow time:2022-02-11T15:00:00+01:00, monthly Compiler Team Planning meeting Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-02-17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-02-17/</guid><description>T-compiler Meeting Agenda 2022-02-17 Tracking Issue
Announcements :loudspeaker: Next Thursday, February 24th, release Rust stable 1.59 :loudspeaker: Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-02-24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-02-24/</guid><description>T-compiler Meeting Agenda 2022-02-24 Tracking Issue
Announcements :tada: Today, February 24th, release Rust stable 1.59 :tada: (blog post) Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). pnkfelix note: the bootstrap process is probably the biggest tester of incremental compilation on beta channel (because beta otherwise is not commonly used for incremental development).</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-03-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-03-03/</guid><description>T-compiler Meeting Agenda 2022-03-03 Tracking Issue
Announcements Tomorrow we have our monthly planning meeting at time:2022-03-04T15:00:00+01:00 (Zulip topic) Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Signal boost: Niko&amp;rsquo;s proposal to create a team for traits, polonius, etc. (see Zulip Topic) MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-03-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-03-10/</guid><description>T-compiler Meeting Agenda 2022-03-10 Tracking Issue
Announcements Tomorrow time:2022-03-10T10:00:00-05:00 monthly Compiler Team Planning meeting ( link) Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Implement Clone for generators&amp;rdquo; compiler-team#494 &amp;ldquo;Add import_name_type parameter to #[link]&amp;rdquo; compiler-team#495 &amp;ldquo;Removing codegen logic for nvptx-nvidia-cuda (32-bit target)&amp;rdquo; compiler-team#496 Old MCPs (not seconded, take a look) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-03-17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-03-17/</guid><description>T-compiler Meeting Agenda 2022-03-17 Tracking Issue
Announcements Tomorrow time:2022-03-18T10:00:00-04:00 Meeting &amp;ldquo;backlog bonanza&amp;rdquo;, link Zulip chat from previous meeting Backlog Bonanza 2022-03-16 HackMD live document Tomorrow time:2022-03-18T14:00:00+01:00 Types Team: Planning/Deep-Dive meeting (calendar link) Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-03-24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-03-24/</guid><description>T-compiler Meeting Agenda 2022-03-24 Announcements Tomorrow time:2022-03-25T10:00:00-04:00 Meeting formal methods + stable MIR meeting link See issues compiler-team#488 and compiler-team#498 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-03-31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-03-31/</guid><description>T-compiler Meeting Agenda 2022-03-31 Tracking Issue
Announcements Tomorrow time:2022-04-01T12:00:00-04:00 (non-standard time) meeting robust incr-comp calendar link compiler-team#490 Tomorrow time:2022-04-01T09:00:00-04:00 Types Team: Planning/Deep-Dive meeting calendar link :loudspeaker: Next Thursday, April 7th, New Rust Release: 1.60 stable is out :loudspeaker: (blog post) Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along).</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-04-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-04-07/</guid><description>T-compiler Meeting Agenda 2022-04-07 Tracking Issue
Announcements Tomorrow time:2022-04-08T13:00:00+02:00 Types Team: Planning/Deep-Dive meeting calendar link Tomorrow time:2022-04-08T14:00:00+02:00 Compiler Team Planning meeting calendar link :tada: Today new Rust Release: 1.60 (blog post) Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-04-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-04-14/</guid><description>T-compiler Meeting Agenda 2022-04-14 Announcements Tomorrow time:2022-04-15T13:00:00+02:00 Types Team: Deep-dive on Lazy TAIT calendar link Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). pnkfelix unilaterally approved PR 94461: Create (unstable) 2024 edition. However, if any of you think that step should instead go through an MCP, let me know.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-04-21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-04-21/</guid><description>T-compiler Meeting Agenda 2022-04-21 Announcements Tomorrow time:2022-04-22T13:00:00+02:00 Types Team: Deep-dive on Formality subtyping rules calendar link Topic of the meeting: wg-traits#39 Tomorrow time:2022-04-22T16:00:00+02:00 Compiler Team: Compiler Leadership and Succession (calendar link) Topic of the meeting compiler-team#506 and (if time allows) compiler-team#484 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along).</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-04-28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-04-28/</guid><description>T-compiler Meeting Agenda 2022-04-28 Announcements Tomorrow time:2022-04-29T13:00:00+02:00 Types Team: Chalkify roadmap calendar link Topic of the meeting: wg-traits#32 Tomorrow time:2022-04-29T15:00:00+02:00 Compiler Team: Incremental Compilation&amp;rsquo;s Future calendar link Topic of the meeting: compiler-team#491 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-05-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-05-05/</guid><description>T-compiler Meeting Agenda 2022-05-05 Announcements Tomorrow time:2022-05-06T15:00:00+02:00 Chalkification planning calendar link Tomorrow time:2022-05-06T15:00:00+02:00 Types team: Planning/Deep-Dive calendar link Tomorrow time:2022-05-06T16:00:00+02:00 monthly Compiler Team Planning calendar link Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-05-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-05-12/</guid><description>T-compiler Meeting Agenda 2022-05-12 Announcements Next week: release of Rust stable 1.61 Tomorrow time:2022-05-13T13:00:00+02:00 Types Team: Chalkification calendar link, issue Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Replace generic parameter list with separate lists per param kind&amp;rdquo; compiler-team#515 Old MCPs (not seconded, take a look) &amp;ldquo;Accept pc in place of unknown and unknown in place of pc for x86_64 and i?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-05-19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-05-19/</guid><description>T-compiler Meeting Agenda 2022-05-19 Announcements Today release of Rust stable 1.61 (blog post) :tada: Tomorrow time:2022-05-20T15:00:00+02:00 Types Team: Finalize TAITs recommendations calendar link and issue Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-05-26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-05-26/</guid><description>T-compiler Meeting Agenda 2022-05-26 Announcements Tomorrow time:2022-05-27T13:00:00+02:00 Types Team: Formality roadmap calendar link and issue Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other upcoming WG meetings (calendar link) time:2022-05-23T15:00:00+02:00 wg-rls-2.0 weekly sync-up (calendar link) time:2022-05-30T20:00:00+02:00 [wg-traits] GATs Sync (calendar link) time:2022-06-01T13:00:00+02:00 [Types team] Hack session: Advanced subtyping (calendar link) time:2022-06-03T15:00:00+02:00 Types Team: Planning/Deep-Dive meeting (calendar link) MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-06-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-06-02/</guid><description>T-compiler Meeting Agenda 2022-06-02 Announcements Tomorrow &amp;lt;time:2022-06-03T10:00:00-04:00 Types Team: Planning/Deep-Dive calendar link Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Stable MIR MVP: https://github.com/rust-lang/rust/pull/97385 basically just a single entry point for all external users of MIR expected to evolve to wrap common APIs with less-frequently changing ones.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-06-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-06-09/</guid><description>T-compiler Meeting Agenda 2022-06-09 Announcements Tomorrow time:2022-06-10T15:00:00+02:00 Types Team: Planning/Deep-Dive, calendar link Tomorrow time:2022-06-10T16:00:00+02:00 T-compiler steering: path sanitisation changes rfc#3127 2022 Q2 P-high review compiler-team#517 , calendar link The steering meeting regarding rfc#3127 will now be a week later; see Zulip message for why dates were swapped. Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along).</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-06-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-06-16/</guid><description>T-compiler Meeting Agenda 2022-06-16 Announcements T-compiler steering: path sanitisation changes rfc#3127 at time:2022-06-17T10:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) Async WG triage meeting at time:2022-06-20T11:30:00-04:00 Types Team: Planning/Deep-Dive meeting at time:2022-06-17T09:00:00-04:00 wg-debugging triage meeting at time:2022-06-20T10:00:00-04:00 Types team Hack session: Advanced subtyping at time:2022-06-22T09:00:00-04:00 wg-traits GATs Sync at time:2022-06-20T16:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-06-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-06-23/</guid><description>T-compiler Meeting Agenda 2022-06-23 Announcements Types Team: Planning/Deep-Dive meeting at time:2022-06-24T09:00:00-04:00 T-compiler steering: Compiler Feature Backlog Bonanza at time:2022-06-24T10:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) MIR Formality Walkthroughs at time:2022-06-29T12:00:00-04:00 Types team Hack session: Advanced subtyping at time:2022-06-29T09:00:00-04:00 wg-traits GATs Sync at time:2022-06-27T16:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-06-30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-06-30/</guid><description>T-compiler Meeting Agenda 2022-06-30 Announcements Types Team: Planning/Deep-Dive meeting at time:2022-07-01T09:00:00-04:00 Compiler Team Planning meeting at time:2022-07-01T10:00:00-04:00 Rust stable 1.62 is out: (wip) blog post Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings Async WG triage meeting at time:2022-07-04T11:30:00-04:00 [Types team] Hack session: Advanced subtyping at time:2022-07-06T09:00:00-04:00 [wg-traits] GATs Sync at time:2022-07-04T16:00:00-04:00 wg-debugging status &amp;amp; design meeting at time:2022-07-05T12:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-07-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-07-07/</guid><description>T-compiler Meeting Agenda 2022-07-07 Announcements Types Team: WF and implied bounds in a-mir-formality #48 at time:2022-07-08T09:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). NLL stabilization and bugs timeline cc @Jack Huey Other WG meetings [wg-traits] GATs Sync at time:2022-07-11T16:00:00-04:00 [Types team] Hack session: Advanced subtyping at time:2022-07-13T09:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-07-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-07-14/</guid><description>T-compiler Meeting Agenda 2022-07-14 Announcements Types Team: Backlog Bonanza at time:2022-07-15T09:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings wg-debugging triage meeting at time:2022-07-18T10:00:00-04:00 wg-rls-2.0 steering meeting at time:2022-07-18T11:00:00-04:00 Async WG triage meeting at time:2022-07-18T11:30:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-07-21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-07-21/</guid><description>T-compiler Meeting Agenda 2022-07-21 Announcements Types Team: Planning/Deep-Dive meeting at time:2022-07-22T09:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings next weeks&amp;rsquo; meetings from google calendar MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Add import_name_type parameter to #[link]&amp;rdquo; compiler-team#525 &amp;ldquo;Add #[alias] attribute to allow symbol aliasing&amp;rdquo; compiler-team#526 &amp;ldquo;move hir typeck into separate crate&amp;rdquo; compiler-team#529 Old MCPs (not seconded, take a look) &amp;ldquo;Arbitrary annotations in compiletest&amp;rdquo; compiler-team#513 (last review activity: 2 months ago) &amp;ldquo;Add support for the LoongArch architecture&amp;rdquo; compiler-team#518 (last review activity: about 33 days ago) Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-07-28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-07-28/</guid><description>T-compiler Meeting Agenda 2022-07-28 Announcements Types Team: Planning/Deep-Dive meeting at time:2022-07-29T09:00:00-04:00 Compiler Team Planning meeting at time:2022-07-29T10:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings wg-debugging status &amp;amp; design meeting at time:2022-08-01T10:00:00-04:00 wg-rls-2.0 weekly sync-up at time:2022-08-01T11:00:00-04:00 Async WG triage meeting at time:2022-08-01T11:30:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-08-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-08-04/</guid><description>T-compiler Meeting Agenda 2022-08-04 Announcements Types Team: Planning/Deep-Dive meeting at time:2022-08-05T09:00:00-04:00 Next Thursday August, 11th release of Rust stable 1.63 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings wg-rls-2.0 weekly sync-up at time:2022-08-08T11:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-08-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-08-11/</guid><description>T-compiler Meeting Agenda 2022-08-11 Announcements Today release of Rust stable 1.63 Types Team: Planning/Deep-Dive meeting at time:2022-08-12T09:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings wg-debugging triage meeting at time:2022-08-15T10:00:00-04:00 Async WG triage meeting at time:2022-08-15T11:30:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-08-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-08-18/</guid><description>T-compiler Meeting Agenda 2022-08-18 Announcements T-compiler backlog bonanza steering meeting at time:2022-08-19T10:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: Planning/Deep-Dive meeting at time:2022-08-19T09:00:00-04:00 [wg-traits] GATs Sync at time:2022-08-22T16:00:00-04:00 [Types team] Hack session: Advanced subtyping at time:2022-08-24T09:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-08-25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-08-25/</guid><description>T-compiler Meeting Agenda 2022-08-25 Announcements Compiler Team Planning meeting at time:2022-08-26T10:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: Planning/Deep-Dive meeting at time:2022-08-26T09:00:00-04:00 wg-rls-2.0 steering meeting at time:2022-08-29T11:00:00-04:00 Async WG triage meeting at time:2022-08-29T11:30:00-04:00 [wg-traits] GATs Sync at time:2022-08-29T16:00:00-04:00 [Types team] Hack session: Advanced subtyping at time:2022-08-31T09:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-09-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-09-01/</guid><description>T-compiler Meeting Agenda 2022-09-01 Announcements Types Team: Planning/Deep-Dive meeting at time:2022-09-02T09:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings wg-rls-2.0 weekly sync-up at time:2022-09-05T11:00:00-04:00 [wg-traits] GATs Sync at time:2022-09-05T16:00:00-04:00 wg-debugging status &amp;amp; design meeting at time:2022-09-06T12:00:00-04:00 [Types team] Hack session: Advanced subtyping at time:2022-09-07T09:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-09-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-09-08/</guid><description>T-compiler Meeting Agenda 2022-09-08 Announcements wg-async weekly at time:2022-09-08T12:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: Projection Equality Deep Dive at time:2022-09-09T09:00:00-04:00 wg-rls-2.0 weekly sync-up at time:2022-09-12T11:00:00-04:00 Async WG triage meeting at time:2022-09-12T11:30:00-04:00 [wg-traits] GATs Sync at time:2022-09-12T16:00:00-04:00 [Types team] Hack session: Advanced subtyping at time:2022-09-14T09:00:00-04:00 wg-async weekly at time:2022-09-15T12:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-09-15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-09-15/</guid><description>T-compiler Meeting Agenda 2022-09-15 Announcements Types Team: Finalize TAITs recommendations at time:2022-09-16T09:00:00-04:00 wg-async weekly at time:2022-09-15T12:00:00-04:00 Next week Sept. 22nd release of Rust stable 1.64! Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). added PR #90584 to list of oldest PR waiting for review Other WG meetings wg-debugging triage meeting at time:2022-09-19T10:00:00-04:00 [wg-traits] GATs Sync at time:2022-09-19T16:00:00-04:00 Performance Triage at time:2022-09-20T11:00:00-04:00 [Types team] Hack session: Advanced subtyping at time:2022-09-21T09:00:00-04:00 MIR Formality Walkthroughs at time:2022-09-21T12:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-09-22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-09-22/</guid><description>T-compiler Meeting Agenda 2022-09-22 Announcements Today we release Rust stable 1.64! yay :tada: Compiler Team Planning meeting at time:2022-09-23T10:00:00-04:00 Types Team: RPIT Refactor review at time:2022-09-23T09:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings wg-rls-2.0 weekly sync-up at time:2022-09-26T11:00:00-04:00 Async WG triage meeting at time:2022-09-26T11:30:00-04:00 [wg-traits] GATs Sync at time:2022-09-26T16:00:00-04:00 [Types team] Hack session: Advanced subtyping at time:2022-09-28T09:00:00-04:00 MIR Formality Walkthroughs at time:2022-09-28T12:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-09-29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-09-29/</guid><description>T-compiler Meeting Agenda 2022-09-29 Announcements wg-async weekly at time:2022-09-29T12:00:00-04:00 Types Team: Chalk integration plan at time:2022-09-30T09:00:00-04:00 steering: 2022 Q3 P-high review at time:2022-09-30T10:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Maybe related PR #100685 (mentioned in section oldest PR S-waiting-for-review) Other WG meetings wg-debugging status &amp;amp; design meeting at time:2022-10-03T10:00:00-04:00 wg-rls-2.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-10-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-10-06/</guid><description>T-compiler Meeting Agenda 2022-10-06 Announcements Types Team: Planning/Deep-Dive meeting at time:2022-10-07T09:00:00-04:00 steering: survey retrospective at time:2022-10-07T10:00:00-04:00 RustcContributor::explore @lcnr session: rustc trait solver at time:2022-10-07T10:30:00-04:00 Zulip thread Open to rustc contributors Topic: &amp;ldquo;rustc trait solver: exploring how evaluate, fulfill, and select fit together&amp;rdquo; Zoom link: TBA Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along).</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-10-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-10-13/</guid><description>T-compiler Meeting Agenda 2022-10-13 Announcements Types Team: Planning/Deep-Dive meeting at time:2022-10-14T09:00:00-04:00 steering: dealing with disabled tests at time:2022-10-14T10:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). the apfloat library, ported from LLVM with a different license @_pnkfelix provides updates about the licensing (see comment), also a meeting with a Rust Foundation lawyer conversation is happening in this Zulip stream Other WG meetings wg-debugging triage meeting at time:2022-10-17T10:00:00-04:00 [Types team] Shallow subtyping weekly meeting at time:2022-10-17T10:00:00-04:00 wg-rls-2.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-10-20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-10-20/</guid><description>T-compiler Meeting Agenda 2022-10-20 Announcements Types Team: Planning/Deep-Dive meeting at time:2022-10-21T09:00:00-04:00 Compiler Team Planning meeting at time:2022-10-21T10:00:00-04:00 RustcContributor::explore @compiler-errors session: Return-position impl Trait in traits deep dive at time:2022-10-20T16:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings [Types team] Shallow subtyping weekly meeting at time:2022-10-24T10:00:00-04:00 Async WG triage meeting at time:2022-10-24T11:30:00-04:00 [wg-traits] GATs Sync at time:2022-10-24T16:00:00-04:00 Polonius Deep Dive at time:2022-10-26T09:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-10-27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-10-27/</guid><description>T-compiler Meeting Agenda 2022-10-27 Announcements Types Team: Planning/Deep-Dive meeting at time:2022-10-28T09:00:00-04:00 Next week Nov, 3rd -&amp;gt; new stable release 1.65 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings [Types team] Shallow subtyping weekly meeting at time:2022-10-31T10:00:00-04:00 [wg-traits] GATs Sync at time:2022-10-31T16:00:00-04:00 Polonius Deep Dive at time:2022-11-02T09:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-11-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-11-03/</guid><description>T-compiler Meeting Agenda 2022-11-03 Announcements Types Team: Planning/Deep-Dive meeting at time:2022-11-04T09:00:00-04:00 Today: new stable release 1.65! Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings [Types team] Shallow subtyping weekly meeting at time:2022-11-07T10:00:00-05:00 [wg-traits] GATs Sync at time:2022-11-07T16:00:00-05:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-11-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-11-10/</guid><description>T-compiler Meeting Agenda 2022-11-10 Announcements Types Team: Review #103491 at time:2022-11-11T11:00:00-05:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings [Types team] Shallow subtyping weekly meeting at time:2022-11-14T10:00:00-05:00 [wg-traits] GATs Sync at time:2022-11-14T16:00:00-05:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-11-17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-11-17/</guid><description>T-compiler Meeting Agenda 2022-11-17 Announcements Compiler Team Planning meeting at time:2022-11-18T10:00:00-05:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings wg-debugging triage meeting at time:2022-11-21T10:00:00-05:00 wg-rls-2.0 steering meeting at time:2022-11-21T10:00:00-05:00 [Types team] Shallow subtyping weekly meeting at time:2022-11-21T10:00:00-05:00 Async WG triage meeting at time:2022-11-21T11:30:00-05:00 [wg-traits] GATs Sync at time:2022-11-21T16:00:00-05:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-11-24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-11-24/</guid><description>T-compiler Meeting Agenda 2022-11-24 Announcements [Types team] Shallow subtyping weekly meeting at time:2022-11-28T10:00:00-05:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings wg-async weekly at time:2022-11-24T12:00:00-05:00 [wg-traits] GATs Sync at time:2022-11-28T16:00:00-05:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-12-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-12-01/</guid><description>T-compiler Meeting Agenda 2022-12-01 Announcements Compiler P-high review slot at time:2022-12-02T10:00:00-05:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) wg-debugging status &amp;amp; design meeting at time:2022-12-05T10:00:00-05:00 [Types team] Shallow subtyping weekly meeting at time:2022-12-05T10:00:00-05:00 Async WG triage meeting at time:2022-12-05T11:30:00-05:00 [wg-traits] GATs Sync at time:2022-12-05T16:00:00-05:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-12-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-12-08/</guid><description>T-compiler Meeting Agenda 2022-12-08 Announcements Next week December 15th, release of Rust stable 1.66 Compiler P-high review slot at time:2022-12-09T10:00:00-05:00 RustcContributor::explore @compiler-errors session: method selection at time:2022-12-08T15:00:00-05:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) [Types team] Shallow subtyping weekly meeting at time:2022-12-12T10:00:00-05:00 [wg-traits] GATs Sync at time:2022-12-12T16:00:00-05:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-12-15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-12-15/</guid><description>T-compiler Meeting Agenda 2022-12-15 Announcements Today release of Rust stable 1.66 Compiler Team Planning meeting at time:2022-12-16T10:00:00-05:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) [Types team] Shallow subtyping weekly meeting at time:2022-12-19T10:00:00-05:00 Async WG triage meeting at time:2022-12-19T11:30:00-05:00 [wg-traits] GATs Sync at time:2022-12-19T16:00:00-05:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-12-22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2022-12-22/</guid><description>T-compiler Meeting Agenda 2022-12-22 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) [Types team] Shallow subtyping weekly meeting at time:2022-12-26T10:00:00-05:00 [wg-traits] GATs Sync at time:2022-12-26T16:00:00-05:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-01-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-01-05/</guid><description>T-compiler Meeting Agenda 2023-01-05 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) wg-async weekly at time:2023-01-05T12:00:00-05:00 wg-rls-2.0 weekly sync-up at time:2023-01-09T10:00:00-05:00 [Types team] Shallow subtyping weekly meeting at time:2023-01-09T10:00:00-05:00 [wg-traits] GATs Sync at time:2023-01-09T16:00:00-05:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-01-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-01-12/</guid><description>T-compiler Meeting Agenda 2023-01-12 Announcements Compiler Team Planning meeting at time:2023-01-13T10:00:00-05:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) wg-async weekly at time:2023-01-12T12:00:00-05:00 wg-rls-2.0 weekly sync-up at time:2023-01-16T10:00:00-05:00 wg-debugging triage meeting at time:2023-01-16T10:00:00-05:00 [Types team] Shallow subtyping weekly meeting at time:2023-01-16T10:00:00-05:00 Async WG triage meeting at time:2023-01-16T11:30:00-05:00 [wg-traits] GATs Sync at time:2023-01-16T16:00:00-05:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-01-19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-01-19/</guid><description>T-compiler Meeting Agenda 2023-01-19 Announcements Next week, Jan, 26th - release of Rust stable 1.67 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) [Types team] Shallow subtyping weekly meeting at time:2023-01-23T10:00:00-05:00 wg-async weekly at time:2023-01-19T12:00:00-05:00 wg-rls-2.0 weekly sync-up at time:2023-01-23T10:00:00-05:00 [wg-traits] GATs Sync at time:2023-01-23T16:00:00-05:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-01-26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-01-26/</guid><description>T-compiler Meeting Agenda 2023-01-26 Announcements Today - release of Rust stable 1.67! [Types team] Shallow subtyping weekly meeting at time:2023-01-30T10:00:00-05:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). @jyn : Does T-compiler want to be on the review rotation for PRs modifying compiletest?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-02-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-02-02/</guid><description>T-compiler Meeting Agenda 2023-02-02 Announcements [Types team] Shallow subtyping weekly meeting at time:2023-02-06T10:00:00-05:00 [wg-traits] GATs Sync at time:2023-02-06T16:00:00-05:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) wg-async weekly at time:2023-02-02T12:00:00-05:00 wg-rls-2.0 weekly sync-up at time:2023-02-06T10:00:00-05:00 Types team meeting at time:2023-02-08T10:00:00-05:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-02-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-02-09/</guid><description>T-compiler Meeting Agenda 2023-02-09 Announcements Compiler Team Planning meeting at time:2023-02-10T10:00:00-05:00 pnkfelix unilaterally approved the stable-backport of #105624, &amp;ldquo;Fix unsoundness in bootstrap cache code&amp;rdquo;, to Rust 1.67.1-stable. Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) wg-async weekly at time:2023-02-09T12:00:00-05:00 wg-rls-2.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-02-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-02-16/</guid><description>T-compiler Meeting Agenda 2023-02-16 Announcements T-compiler: dealing with PR review latency (compiler-team#589) at time:2023-02-17T10:00:00-05:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Question from @jyn: Does T-compiler want to be on the review rotation for PRs modifying compiletest? (this fell through the cracks, sorry!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-02-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-02-23/</guid><description>T-compiler Meeting Agenda 2023-02-23 Announcements T-compiler: scope and goals of rust-lang/rust optimizations at time:2023-02-24T10:00:00-05:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) wg-async weekly at time:2023-02-23T12:00:00-05:00 Types team meeting at time:2023-02-27T10:00:00-05:00 wg-rls-2.0 weekly sync-up at time:2023-02-27T10:00:00-05:00 Async WG triage meeting at time:2023-02-27T11:30:00-05:00 [wg-traits] GATs Sync at time:2023-02-27T16:00:00-05:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-03-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-03-02/</guid><description>T-compiler Meeting Agenda 2023-03-02 Announcements T-compiler: P-high Q1 review at time:2023-03-03T10:00:00-05:00 Next week Thursday, 9th next Rust stable (1.68) release Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). The Governance RFC has been posted Other WG meetings (calendar link) wg-async weekly at time:2023-03-02T12:00:00-05:00 Types team: extended updates at time:2023-03-06T10:00:00-05:00 wg-rls-2.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-03-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-03-09/</guid><description>T-compiler Meeting Agenda 2023-03-09 Announcements Today Rust stable (1.68) release! :tada: Compiler Team Planning meeting at time:2023-03-10T10:00:00-05:00 Rust Foundation will be putting out a call for Grant/Fellowship proposals in the near future, and has asked T-compiler for the following (by April 1st at latest): 1. a list of suggested compiler-related projects we would like grantees to take on, and 2. a statement as to whether we have bandwidth to take on &amp;ldquo;a fellow&amp;rdquo; this year.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-03-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-03-16/</guid><description>T-compiler Meeting Agenda 2023-03-16 Announcements Types team: Review types-team#62 or types-team-#57 at time:2023-03-20T10:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) wg-async weekly at time:2023-03-16T12:00:00-04:00 wg-debugging triage meeting at time:2023-03-20T10:00:00-04:00 wg-rls-2.0 weekly sync-up at time:2023-03-20T11:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-03-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-03-23/</guid><description>T-compiler Meeting Agenda 2023-03-23 Announcements Types team: Roadmap update at time:2023-03-27T10:00:00-04:00 Rust 1.68.1 will be released today (Zulip discussion) Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) wg-rls-2.0 steering meeting at time:2023-03-23T14:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-03-30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-03-30/</guid><description>T-compiler Meeting Agenda 2023-03-30 Announcements Types team: Planning meeting at time:2023-04-03T10:00:00-04:00 Rust 1.68.2 released last Tuesday (Blog post) Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Heads-up: we will be testing Zulip polls to vote {beta|stable} backports. Please report if something looks funny on mobile devices!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-04-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-04-06/</guid><description>T-compiler Meeting Agenda 2023-04-06 Announcements Compiler Team Planning meeting at time:2023-04-07T10:00:00-04:00 Types team meeting at time:2023-04-10T10:00:00-04:00 Signal boost this request for contributors for Diagnostics Translation from @Michael Goulet (compiler-errors) (Zulip comment) Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). (from @apiraino) in PR &amp;ldquo;Fix off-by-one error in X87DoubleExtended::from_bits&amp;rdquo; rust#100685 @eddyb mentions licensing issues in comment cc: @Wesley Wiser (assigned reviewer) Other WG meetings (calendar link) wg-async weekly at time:2023-04-06T14:00:00-04:00 wg-rls-2.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-04-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-04-13/</guid><description>T-compiler Meeting Agenda 2023-04-13 Announcements Next week Thu April, 20th - Rust stable release 1.69.0! Types team meeting at time:2023-04-17T10:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) wg-async weekly at time:2023-04-13T12:00:00-04:00 wg-debugging triage meeting at time:2023-04-17T10:00:00-04:00 wg-rls-2.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-04-20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-04-20/</guid><description>T-compiler Meeting Agenda 2023-04-20 Announcements Types team meeting at time:2023-04-24T10:00:00-04:00 Today Rust stable 1.69.0 release :tada: :rocket: Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) wg-rls-2.0 weekly sync-up at time:2023-04-24T11:00:00-04:00 Async WG triage meeting at time:2023-04-24T11:30:00-04:00 wg-async weekly at time:2023-04-27T12:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-04-27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-04-27/</guid><description>T-compiler Meeting Agenda 2023-04-27 Announcements Steering: v0 mangling discussion at time:2023-04-28T10:00:00-04:00 Types team meeting at time:2023-05-01T10:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) wg-async weekly at time:2023-04-27T12:00:00-04:00 wg-rls-2.0 weekly sync-up at time:2023-05-01T11:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-05-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-05-04/</guid><description>T-compiler Meeting Agenda 2023-05-04 Announcements Compiler Team Planning meeting at time:2023-05-05T10:00:00-04:00 Types team meeting at time:2023-05-08T10:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) wg-rls-2.0 weekly sync-up at time:2023-05-08T11:00:00-04:00 wg-rls-2.0 steering meeting at time:2023-05-08T11:00:00-04:00 Async WG triage meeting at time:2023-05-08T11:30:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-05-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-05-11/</guid><description>T-compiler Meeting Agenda 2023-05-11 Announcements steering: deny-by-default lints in unreachable code (bug vs QoL) at time:2023-05-12T10:00:00-04:00 Types team meeting at time:2023-05-15T10:00:00-04:00 Reminder: T-compiler and compiler-contributors are asked to check their emails and make sure they got their ballot for the council representative. Reach out to Felix or Wesley if you need assistance. Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along).</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-05-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-05-18/</guid><description>T-compiler Meeting Agenda 2023-05-18 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Types team meeting: polonius deep dive at time:2023-05-22T10:00:00-04:00 Other WG meetings (calendar link) wg-async weekly at time:2023-05-18T16:30:00-04:00 wg-rls-2.0 weekly sync-up at time:2023-05-22T11:00:00-04:00 Async WG triage meeting at time:2023-05-22T11:30:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-05-25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-05-25/</guid><description>T-compiler Meeting Agenda 2023-05-25 Announcements Types team meeting: mir formality deep dive at time:2023-05-29T10:00:00-04:00 Next week June 1st, Rust 1.70 will be unleashed :loudspeaker: Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) wg-rls-2.0 weekly sync-up at time:2023-05-29T11:00:00-04:00 wg-async weekly at time:2023-06-01T16:30:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-06-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-06-01/</guid><description>T-compiler Meeting Agenda 2023-06-01 Announcements Today Rust stable 1.70 release! Compiler Team Planning meeting at time:2023-06-02T10:00:00-04:00 Types team meeting at time:2023-06-05T10:00:00-04:00 Last minute backport to 1.70-stable (and 1.71-beta): https://github.com/rust-lang/rust/pull/112070 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). T-compiler members: check your emails for a message from Felix.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-06-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-06-08/</guid><description>T-compiler Meeting Agenda 2023-06-08 Announcements wg-async reading club: Iterator, Generator at time:2023-06-08T12:00:00-04:00 Types team meeting at time:2023-06-12T10:00:00-04:00 Types Team retro survey: https://forms.gle/tyiquzq7Kwnz4H2G7 (cc: @Jack Huey) Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). PR #112235 nominated for T-compiler meeting Other WG meetings (calendar link) wg-rls-2.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-06-15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-06-15/</guid><description>T-compiler Meeting Agenda 2023-06-15 Announcements Input from @apiraino (echoing a comment from @Jack Huey): rethinking WGs checkins in t-compiler meetings. Is the current rotation reflecting the reality? Suggests opening a topic under #t-compiler and discuss with the leads Types team meeting at time:2023-06-19T10:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along).</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-06-22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-06-22/</guid><description>T-compiler Meeting Agenda 2023-06-22 Announcements Types team meeting at time:2023-06-26T10:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) wg-async: Open discussion at time:2023-06-22T12:00:00-04:00 [Types] Rotating new solver / formality / polonius deep dive at time:2023-06-26T11:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-06-29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-06-29/</guid><description>T-compiler Meeting Agenda 2023-06-29 Announcements AFIT/RPITIT Impl Triage at time:2023-06-29T15:00:00-04:00 wg-async: Open discussion at time:2023-06-29T16:30:00-04:00 Compiler Team Planning meeting at time:2023-06-30T10:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) Types team meeting at time:2023-07-03T10:00:00-04:00 [Types] Rotating new solver / formality / polonius deep dive at time:2023-07-03T11:00:00-04:00 [Types team] Formality testing sync at time:2023-07-05T09:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-07-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-07-06/</guid><description>T-compiler Meeting Agenda 2023-07-06 Announcements Next week July, 13th release of stable 1.71 :loudspeaker: [Types team] Formality testing sync at time:2023-07-05T09:00:00-04:00 wg-async: Sprint planning at time:2023-07-06T12:00:00-04:00 AFIT/RPITIT Impl Triage at time:2023-07-06T16:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) Types team meeting: early vs late regions at time:2023-07-10T10:00:00-04:00 [Types] Rotating new solver / formality / polonius deep dive at time:2023-07-10T11:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-07-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-07-13/</guid><description>T-compiler Meeting Agenda 2023-07-13 Announcements Today release of stable 1.71 :loudspeaker: [Types team] Formality testing sync at time:2023-07-12T09:00:00-04:00 Should wg-async be a team? at time:2023-07-13T12:00:00-04:00 AFIT/RPITIT Impl Triage at time:2023-07-13T16:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) Types team meeting: dropck at time:2023-07-17T10:00:00-04:00 [Types] Rotating new solver / formality / polonius deep dive at time:2023-07-17T11:00:00-04:00 Async WG triage meeting at time:2023-07-17T11:30:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-07-20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-07-20/</guid><description>T-compiler Meeting Agenda 2023-07-20 Announcements Proposal from @apiraino: removing T-rustdoc backport nominations from T-compiler meeting&amp;rsquo;s agenda, T-rustdoc now has their own meetings and can take on that. Is everybody happy with that? Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) wg-async reading club: Tree-Structured Concurrency at time:2023-07-20T13:00:00-04:00 AFIT/RPITIT Impl Triage at time:2023-07-20T16:00:00-04:00 Types team meeting: generator locals at time:2023-07-24T10:00:00-04:00 [Types] Rotating new solver / formality / polonius deep dive at time:2023-07-24T11:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-07-27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-07-27/</guid><description>T-compiler Meeting Agenda 2023-07-27 Announcements A Rust release 1.71.1 is scheduled for August, 3rd (comment) stable backports this week are targeting this point release for reference, next stable 1.72.0 is planned for time:2023-08-24T14:00:00+02:00 Compiler Team Planning meeting at time:2023-07-28T10:00:00-04:00 An interesting Zulip thread about a possible date for a 2024 edition Spoiler: could be around Nov, 28th 2024 (Rust ~1.83.0) Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the Core team know (or at least message @pnkfelix or @Wesley Wiser so we can pass it along).</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-08-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-08-03/</guid><description>T-compiler Meeting Agenda 2023-08-03 Announcements Today release of rust stable 1.71.1 We&amp;rsquo;re rolling the T-compiler leads!. Congrats @davidtwco ! @apiraino signal boot for Zulip topic at #t-compiler&amp;gt;Refreshing WG checkins in T-compiler triage meeting about refreshing the WG checkins rotation list, thanks! Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along).</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-08-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-08-09/</guid><description>T-compiler Meeting Agenda 2023-08-09 Add notes asynchronously here Please feel free to add notes for the next meeting
Autogenerated agenda will be added below</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-08-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-08-10/</guid><description>T-compiler Meeting Agenda 2023-08-10 Announcements wg-async deep dive: 2024 Prelude + Future::map at time:2023-08-10T12:00:00-04:00 AFIT/RPITIT Impl Triage at time:2023-08-10T16:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) Types team meeting at time:2023-08-14T10:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-08-17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-08-17/</guid><description>T-compiler Meeting Agenda 2023-08-17 Announcements One week to the 1.72 stable release wg-async deep dive: IntoFuture autoderef + #42940 at time:2023-08-17T12:00:00-04:00 AFIT/RPITIT Impl Triage at time:2023-08-17T16:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) Types team meeting at time:2023-08-21T10:00:00-04:00 wg-debugging triage meeting at time:2023-08-21T10:00:00-04:00 wg-rls-2.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-08-24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-08-24/</guid><description>T-compiler Meeting Agenda 2023-08-24 Announcements Today 1.72 stable release (blog post draft) Compiler Team Planning meeting at time:2023-08-25T10:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) wg-async open discussion at time:2023-08-24T12:00:00-04:00 AFIT/RPITIT Impl Triage at time:2023-08-24T16:00:00-04:00 Types team meeting at time:2023-08-28T10:00:00-04:00 [Types] Rotating new solver / formality / polonius deep dive at time:2023-08-28T11:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-08-31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-08-31/</guid><description>T-compiler Meeting Agenda 2023-08-31 Announcements Compiler Team Steering Meeting - External Dependency Timelines at time:2023-09-01T10:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) wg-async sprint planning at time:2023-08-31T12:00:00-04:00 AFIT/RPITIT Impl Triage at time:2023-08-31T16:00:00-04:00 Types team meeting at time:2023-09-04T10:00:00-04:00 [Types] Rotating new solver / formality / polonius deep dive at time:2023-09-04T11:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-09-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-09-07/</guid><description>T-compiler Meeting Agenda 2023-09-07 Announcements Rust stable 1.72.1 is planned for Sept. 14th (Zulip thread) Compiler Team Steering Meeting - Review of open T-compiler RFCs (issue) at time:2023-09-08T10:00:00-04:00 Types team meeting at time:2023-09-11T10:00:00-04:00 [Types] Rotating new solver / formality / polonius deep dive at time:2023-09-11T11:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along).</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-09-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-09-14/</guid><description>T-compiler Meeting Agenda 2023-09-14 Announcements Rust stable dot release 1.72.1 will likely be postponed to next week (Zulip comment in #t-release) Types team meeting: backlog bonanza at time:2023-09-18T10:00:00-04:00 Types team meeting: Rotating new solver / formality / polonius deep dive at time:2023-09-18T11:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let the council know (or at least message @davidtwco or @Wesley Wiser so we can pass it along).</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-09-21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-09-21/</guid><description>T-compiler Meeting Agenda 2023-09-21 Announcements Compiler Team Planning meeting at time:2023-09-22T10:00:00-04:00 Types team meeting: backlog bonanza at time:2023-09-25T10:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) wg-async reading club at time:2023-09-21T12:00:00-04:00 AFIT/RPITIT Impl Triage at time:2023-09-21T16:00:00-04:00 Stable MIR Weekly Meeting at time:2023-09-22T11:00:00-04:00 wg-rls-2.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-09-28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-09-28/</guid><description>T-compiler Meeting Agenda 2023-09-28 Announcements :loudspeaker: Next week Oct, 5th release of Rust stable 1.73 :loudspeaker: Rust survey 2023 works are starting again: the questionnaire is open to feedback from T-*! (Zulip thread) AFIT/RPITIT Impl Triage at time:2023-09-28T16:00:00-04:00 Compiler Team Steering Meeting - RFC Review at time:2023-09-29T10:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along).</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-10-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-10-05/</guid><description>T-compiler Meeting Agenda 2023-10-05 Announcements :loudspeaker: Today Oct, 5th release of Rust stable 1.73 Compiler Team Steering Meeting - P-high review at time:2023-10-06T10:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) wg-async weekly at time:2023-10-05T12:00:00-04:00 AFIT/RPITIT Impl Triage at time:2023-10-05T16:00:00-04:00 Stable MIR Weekly Meeting at time:2023-10-06T11:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-10-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-10-12/</guid><description>T-compiler Meeting Agenda 2023-10-12 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) Types team meeting: review meetup outcomes at time:2023-10-16T10:00:00-04:00 [Types] Rotating new solver / formality / polonius deep dive at time:2023-10-16T11:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-10-19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-10-19/</guid><description>T-compiler Meeting Agenda 2023-10-19 Announcements Compiler Team Planning meeting at time:2023-10-20T10:00:00-04:00 @apiraino proposal to rename the WG-prioritization to T-compiler/ops team (Zulip thread). Happy to receive feedback! Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) AFIT/RPITIT Impl Triage at time:2023-10-19T16:00:00-04:00 Types team meeting at time:2023-10-23T10:00:00-04:00 wg-rls-2.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-10-26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-10-26/</guid><description>T-compiler Meeting Agenda 2023-10-26 Announcements Compiler Team Steering Meeting - P-high review at time:2023-10-27T10:00:00-04:00 Types team meeting: roadmap draft review [jackh726] at time:2023-10-30T10:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) AFIT/RPITIT Impl Triage at time:2023-10-26T16:00:00-04:00 [Types] Rotating new solver / formality / polonius deep dive at time:2023-10-30T11:00:00-04:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-11-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-11-02/</guid><description>T-compiler Meeting Agenda 2023-11-02 Announcements Compiler Team Steering Meeting - P-high review at time:2023-11-03T10:00:00-04:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) wg-async weekly at time:2023-11-02T12:00:00-04:00 AFIT/RPITIT Impl Triage at time:2023-11-02T16:00:00-04:00 wg-macros triage meeting at time:2023-11-03T11:00:00-04:00 Types team meeting at time:2023-11-06T10:00:00-05:00 Types Rotating new solver / formality / polonius deep dive at time:2023-11-06T11:00:00-05:00 Async WG triage meeting at time:2023-11-06T11:30:00-05:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-11-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-11-09/</guid><description>T-compiler Meeting Agenda 2023-11-09 Announcements Next week Rust stable 1.74 release Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) No meetings scheduled for next week MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;quot; Add $message_type field to distinguish json diagnostic outputs&amp;quot; compiler-team#673 (Zulip) Old MCPs (stale MCP might be closed as per MCP procedure) None at this time Old MCPs (not seconded, take a look) No old proposals this time.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-11-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-11-16/</guid><description>T-compiler Meeting Agenda 2023-11-16 Announcements Today Rust stable 1.74 release (blog post) Compiler Team Planning meeting at time:2023-11-17T10:00:00-05:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along) Other WG meetings (calendar link) AFIT/RPITIT Impl Triage at time:2023-11-16T16:00:00-05:00 Stable MIR Weekly Meeting at time:2023-11-17T10:00:00-05:00 Types team meeting at time:2023-11-20T10:00:00-05:00 [Types] Rotating new solver / formality / polonius deep dive at time:2023-11-20T11:00:00-05:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-11-30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-11-30/</guid><description>T-compiler Meeting Agenda 2023-11-30 Announcements RFC: improve the onboarding experience of t-compiler + t-compiler-contributor (Zulip thread): HackMD document: https://hackmd.io/Cp0Ktm2KQeS4TNmFn2UwWQ @Santiago Pastorino @lqd and @apiraino are planning to work a bit on the rustc-dev + forge documentation as well 👉 Feedback and wishlists around this topic are welcome! Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along).</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-12-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-12-07/</guid><description>T-compiler Meeting Agenda 2023-12-07 Announcements 1.74.1 is released (Zulip) and blog post With some P-high/critical regression were fixed (a big thanks to those that helped debugging and fixing) Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) AFIT/RPITIT Impl Triage at time:2023-12-07T16:00:00-05:00 Types team meeting at time:2023-12-11T10:00:00-05:00 [Types] Rotating new solver / formality / polonius deep dive at time:2023-12-11T11:00:00-05:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-12-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-12-14/</guid><description>T-compiler Meeting Agenda 2023-12-14 Announcements Compiler Team Planning meeting at time:2023-12-15T10:00:00-05:00 Google Summer of Code 2024: brainstorming ideas in (Zulip thread) Do top teams have a wish for projects to be submitted? Do top teams have capacity to mentor GSoC participants? GSoC details at this link, time window for submissions Jan, 22nd 2024 until Feb. 6th, 2024 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along).</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-12-21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-12-21/</guid><description>T-compiler Meeting Agenda 2023-12-21 Announcements Next week Rust stable release 1.75 Compiler Team Steering: P-high review at time:2023-12-22T10:00:00-05:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) AFIT/RPITIT Impl Triage at time:2023-12-21T16:00:00-05:00 Types team meeting at time:2023-12-25T10:00:00-05:00 AFIT/RPITIT Impl Triage at time:2023-12-28T16:00:00-05:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-12-28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2023-12-28/</guid><description>T-compiler Meeting Agenda 2023-12-28 Announcements Today release of Rust 1.75.0 (blog post draft) Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) Stable MIR Weekly Meeting at time:2023-12-29T10:00:00-05:00 Types team meeting at time:2024-01-01T10:00:00-05:00 [Types] Rotating new solver / formality / polonius deep dive at time:2024-01-01T11:00:00-05:00 @Jack Huey are these T-type meetings happening on New Year&amp;rsquo;s Eve or it&amp;rsquo;s just calendar repetition?</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-01-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-01-04/</guid><description>T-compiler Meeting Agenda 2024-01-04 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) No meetings scheduled for next week MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Start using clippy on rustc&amp;rdquo; compiler-team#709 &amp;ldquo;Promote tier 3 *-pc-windows-gnullvm targets to tier 2&amp;rdquo; compiler-team#710 WG checkins No checkins this week</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-01-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-01-11/</guid><description>T-compiler Meeting Agenda 2024-01-11 Announcements Big rework of the meetings calendar, thanks @davidtwco (Zulip topic)! Compiler Team Planning meeting time:2024-01-12T16:00:00+01:00 ? Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) Stable MIR Weekly time:2024-01-12T16:00:00+01:00 wg-macros Triage time:2024-01-11T17:00:00+01:00 Types Team Meeting time:2024-01-14T16:00:00+01:00 Types Team: Rotating Solver/Formality/Polonius Deep Dive time:2024-01-14T17:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-01-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-01-18/</guid><description>T-compiler Meeting Agenda 2024-01-18 Announcements Compiler team P-high issues review time:2024-01-19T14:00:00+01:00 Types Team: ITE (Impl Trait Everywhere) Triage time:2024-01-19T:00:00+01:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Stable MIR weekly meeting time:2024-01-19T16:00:00+01:00 WG-rust-analyzer weekly meeting time:2024-01-19T16:00:00+01:00 WG-macros triage weekly meeting time:2024-01-19T17:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-01-25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-01-25/</guid><description>T-compiler Meeting Agenda 2024-01-25 Announcements Steering meeting: Tracking Issue Review time:2024-01-25T16:00:00+01:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-01-24T22:00:00+01:00 Stable MIR Weekly Meeting time:2024-01-25T16:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-02-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-02-01/</guid><description>T-compiler Meeting Agenda 2024-02-01 Announcements No T-compiler meeting according to the calendar file Feb 8th, Rust 1.76 stable release There&amp;rsquo;s Rustc Dev Guide reading club initiative in case you want to join, more info here Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) Types Team: ITE (Impl Trait Everywhere) Triage time:2024-02-01T22:00:00+01:00 Stable MIR Weekly Meeting time:2024-02-01T16:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-02-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-02-08/</guid><description>T-compiler Meeting Agenda 2024-02-08 Announcements Today Rust stable 1.76 is out :top_hat: :rabbit: Blog post Announcement: experts/interested in C++/Rust interop might be interested to take part to the new initiative meant to work on long term goals in this area (Zulip thread). Funding provided by Google, blog post of the Foundation. Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along).</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-02-15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-02-15/</guid><description>T-compiler Meeting Agenda 2024-02-15 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage Types Team: ITE (Impl Trait Everywhere) Triage time:2024-02-15T22:00:00+01:00 Types Team: Rotating Solver/Formality/Polonius Deep dive time:2024-02-19T17:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-02-22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-02-22/</guid><description>T-compiler Meeting Agenda 2024-02-22 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage Types Team: ITE (Impl Trait Everywhere) Triage time:2024-02-22T22:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Dist rustc with overflow checks&amp;rdquo; compiler-team#724 (Zulip) MCPs blocked on unresolved concerns &amp;ldquo;Add hygiene attributes to compile expanded source code&amp;rdquo; compiler-team#692 (Zulip) (last review activity: about 36 days ago) concern: added-complexity-to-frontend (Zulip) concern: option-name concern: other-existing-options &amp;ldquo;Retire the mailing list and make all decisions on zulip&amp;rdquo; compiler-team#649 (Zulip) concern: automatic-sync concern: single-point-of-failure-via-stream-archival Old MCPs (not seconded, take a look) &amp;ldquo;Introduce perma-unstable wasm-c-abi flag&amp;rdquo; compiler-team#703 (Zulip) (last review activity: 2 months ago) &amp;ldquo;Support patchable-function-entry&amp;rdquo; compiler-team#704 (Zulip) (last review activity: 2 months ago) &amp;ldquo;Target families for executable format&amp;rdquo; compiler-team#716 (Zulip) (last review activity: about 20 days ago) &amp;ldquo;Promote tier 3 arm64e-apple-darwin target to tier 2&amp;rdquo; compiler-team#717 (Zulip) (last review activity: about 20 days ago) &amp;ldquo;Add --emit= to emit nothing&amp;rdquo; compiler-team#718 (Zulip) (last review activity: about 20 days ago) Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-02-29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-02-29/</guid><description>T-compiler Meeting Agenda 2024-02-29 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) Types Team: ITE (Impl Trait Everywhere) Triage time:2024-02-29T22:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. MCPs blocked on unresolved concerns &amp;ldquo;Add hygiene attributes to compile expanded source code&amp;rdquo; compiler-team#692 (Zulip) (last review activity: about 43 days ago) concern: added-complexity-to-frontend &amp;ldquo;Add a new --build-id flag to rustc&amp;rdquo; compiler-team#635 (Zulip) concern: other-existing-options concern: option-name &amp;ldquo;Retire the mailing list and make all decisions on zulip&amp;rdquo; compiler-team#649 (Zulip) concern: single-point-of-failure-via-stream-archival concern: automatic-sync Old MCPs (not seconded, take a look) &amp;ldquo;Support patchable-function-entry&amp;rdquo; compiler-team#704 (Zulip) (last review activity: 2 months ago) &amp;ldquo;Target families for executable format&amp;rdquo; compiler-team#716 (Zulip) (last review activity: about 27 days ago) &amp;ldquo;Promote tier 3 arm64e-apple-darwin target to tier 2&amp;rdquo; compiler-team#717 (Zulip) (last review activity: about 27 days ago) &amp;ldquo;Add --emit= to emit nothing&amp;rdquo; compiler-team#718 (Zulip) (last review activity: about 27 days ago) &amp;ldquo;Dist rustc with overflow checks&amp;rdquo; compiler-team#724 (Zulip) (last review activity: about 6 days ago) Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-03-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-03-07/</guid><description>T-compiler Meeting Agenda 2024-03-07 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-03-07T22:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Promote riscv64gc-unknown-linux-musl to tier 2&amp;rdquo; compiler-team#728 (Zulip) MCPs (not seconded, take a look) &amp;ldquo;Support patchable-function-entry&amp;rdquo; compiler-team#704 (Zulip) (last review activity: 2 months ago) &amp;ldquo;Target families for executable format&amp;rdquo; compiler-team#716 (Zulip) (last review activity: about 34 days ago) &amp;ldquo;Add --emit= to emit nothing&amp;rdquo; compiler-team#718 (Zulip) (last review activity: about 34 days ago) &amp;ldquo;Dist rustc with overflow checks&amp;rdquo; compiler-team#724 (Zulip) (last review activity: about 13 days ago) Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-03-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-03-14/</guid><description>T-compiler Meeting Agenda 2024-03-14 Announcements :loudspeaker: Next week release of stable 1.77 rustc :loudspeaker: Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-03-14T22:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-03-21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-03-21/</guid><description>T-compiler Meeting Agenda 2024-03-21 Announcements Today release of rustc 1.77 stable &amp;ldquo;Enable frame pointers for the standard library&amp;rdquo; rust#122646 suggested by @_nils (Nilstrieb) (comment): FIY to T-compiler as it&amp;rsquo;s a perhaps impacting change Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) Types Team: ITE (Impl Trait Everywhere) Triage time:2024-03-21T22:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-03-28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-03-28/</guid><description>T-compiler Meeting Agenda 2024-03-28 Announcements A dot release 1.77.1 is out today to fix #122857 (Zulip discussion) Immediate fix provided by cargo, rustc fix will take a bit longer (comment) Will also backport #122693 (less critical) blog post. Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along).</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-04-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-04-04/</guid><description>T-compiler Meeting Agenda 2024-04-04 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-03-28T22:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Skip virtual drop for !needs_drop types&amp;rdquo; compiler-team#730 (Zulip) &amp;ldquo;Add -Zemit-thin-lto-index=&amp;lt;path&amp;gt; to enable distributed ThinLTO users&amp;rdquo; compiler-team#735 (Zulip) Old MCPs (not seconded, take a look) &amp;ldquo;Target families for executable format&amp;rdquo; compiler-team#716 (Zulip) (last review activity: 2 months ago) &amp;ldquo;Add --emit= to emit nothing&amp;rdquo; compiler-team#718 (Zulip) (last review activity: 2 months ago) &amp;ldquo;Promote riscv64gc-unknown-linux-musl to tier 2&amp;rdquo; compiler-team#728 (Zulip) (last review activity: about 27 days ago) Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-04-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-04-11/</guid><description>T-compiler Meeting Agenda 2024-04-11 Announcements Release of Rust stable 1.77.2 (blog post) (fixes the CVE on Windows platforms that is around now: args parsing for Windows scripts) Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) Types Team: ITE (Impl Trait Everywhere) Triage time:2024-04-11T22:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-04-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-04-18/</guid><description>T-compiler Meeting Agenda 2024-04-18 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-04-18T22:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (stale MCP might be closed as per MCP procedure) None at this time Old MCPs (not seconded, take a look) &amp;ldquo;Add hygiene attributes to compile expanded source code&amp;rdquo; compiler-team#692 (Zulip) (last review activity: 3 months ago) concern: added-complexity-to-frontend &amp;ldquo;Target families for executable format&amp;rdquo; compiler-team#716 (Zulip) (last review activity: 2 months ago) &amp;ldquo;Promote riscv64gc-unknown-linux-musl to tier 2&amp;rdquo; compiler-team#728 (Zulip) (last review activity: about 41 days ago) &amp;ldquo;Skip virtual drop for !</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-04-25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-04-25/</guid><description>T-compiler Meeting Agenda 2024-04-25 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) No meetings scheduled for next week MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Build LLVM using CI image&amp;rsquo;s Clang on Win + MacOS, instead of installing a copy&amp;rdquo; compiler-team#742 (Zulip) &amp;ldquo;Add &amp;ndash;print=check-cfg&amp;rdquo; compiler-team#743 (Zulip) Old MCPs (not seconded, take a look) &amp;ldquo;Target families for executable format&amp;rdquo; compiler-team#716 (Zulip) (last review activity: 2 months ago) &amp;ldquo;Promote riscv64gc-unknown-linux-musl to tier 2&amp;rdquo; compiler-team#728 (Zulip) (last review activity: about 48 days ago) &amp;ldquo;Add -Zemit-thin-lto-index=&amp;lt;path&amp;gt; to enable distributed ThinLTO users&amp;rdquo; compiler-team#735 (Zulip) (last review activity: about 20 days ago) &amp;ldquo;Only emit forward compatible v0 symbol names with graceful degradation&amp;rdquo; compiler-team#737 (Zulip) (last review activity: about 20 days ago) &amp;ldquo;Partial compilation using MIR-only rlibs&amp;rdquo; compiler-team#738 (Zulip) (last review activity: about 13 days ago) Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-05-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-05-02/</guid><description>T-compiler Meeting Agenda 2024-05-02 Announcements Today release of stable Rust 1.78 (blog post) Next week it&amp;rsquo;s RustNL week: some? many? of us will be there. Should we skip next week&amp;rsquo;s meeting? Or maybe just a quick look if there&amp;rsquo;s anything urgent? Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along).</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-05-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-05-09/</guid><description>T-compiler Meeting Agenda 2024-05-09 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-05-09T22:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (not seconded, take a look) &amp;ldquo;Target families for executable format&amp;rdquo; compiler-team#716 (Zulip) (last review activity: 3 months ago) &amp;ldquo;Promote riscv64gc-unknown-linux-musl to tier 2&amp;rdquo; compiler-team#728 (Zulip) (last review activity: 2 months ago) &amp;ldquo;Only emit forward compatible v0 symbol names with graceful degradation&amp;rdquo; compiler-team#737 (Zulip) (last review activity: about 34 days ago) &amp;ldquo;Partial compilation using MIR-only rlibs&amp;rdquo; compiler-team#738 (Zulip) (last review activity: about 27 days ago) &amp;ldquo;Add &amp;ndash;print=check-cfg&amp;rdquo; compiler-team#743 (Zulip) (last review activity: about 5 days ago) Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-05-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-05-16/</guid><description>T-compiler Meeting Agenda 2024-05-16 Announcements Special reminder for rfcs#3599: needs just one more vote :thank_you: cc: @cjgillot @Esteban Küber and @Aaron Hill Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-05-16T22:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-05-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-05-23/</guid><description>T-compiler Meeting Agenda 2024-05-23 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (calendar link) Types Team: ITE (Impl Trait Everywhere) Triage time:2024-05-23T22:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Add a --emit=nameres for IDEs&amp;rdquo; compiler-team#749 (Zulip) &amp;ldquo;Fully rustfmt use declarations&amp;rdquo; compiler-team#750 (Zulip) Old MCPs (stale MCP might be closed as per MCP procedure) None at this time Old MCPs (not seconded, take a look) &amp;ldquo;Add hygiene attributes to compile expanded source code&amp;rdquo; compiler-team#692 (Zulip) (last review activity: 4 months ago) concern: added-complexity-to-frontend &amp;ldquo;Target families for executable format&amp;rdquo; compiler-team#716 (Zulip) (last review activity: 3 months ago) &amp;ldquo;Promote riscv64gc-unknown-linux-musl to tier 2&amp;rdquo; compiler-team#728 (Zulip) (last review activity: 2 months ago) &amp;ldquo;Only emit forward compatible v0 symbol names with graceful degradation&amp;rdquo; compiler-team#737 (Zulip) (last review activity: about 48 days ago) &amp;ldquo;Partial compilation using MIR-only rlibs&amp;rdquo; compiler-team#738 (Zulip) (last review activity: about 41 days ago) &amp;ldquo;Add Hotpatch flag&amp;rdquo; compiler-team#745 (Zulip) (last review activity: about 6 days ago) Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-05-30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-05-30/</guid><description>T-compiler Meeting Agenda 2024-05-30 Announcements Friday [steering meeting]: Project Goals by @_nikomatsakis Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (stale MCP might be closed as per MCP procedure) None at this time Old MCPs (not seconded, take a look) &amp;ldquo;Add hygiene attributes to compile expanded source code&amp;rdquo; compiler-team#692 (Zulip) (last review activity: 4 months ago) concern: added-complexity-to-frontend &amp;ldquo;Target families for executable format&amp;rdquo; compiler-team#716 (Zulip) (last review activity: 3 months ago) &amp;ldquo;Promote riscv64gc-unknown-linux-musl to tier 2&amp;rdquo; compiler-team#728 (Zulip) (last review activity: 2 months ago) &amp;ldquo;Only emit forward compatible v0 symbol names with graceful degradation&amp;rdquo; compiler-team#737 (Zulip) (last review activity: about 54 days ago) &amp;ldquo;Partial compilation using MIR-only rlibs&amp;rdquo; compiler-team#738 (Zulip) (last review activity: about 47 days ago) &amp;ldquo;Add Hotpatch flag&amp;rdquo; compiler-team#745 (Zulip) (last review activity: about 13 days ago) &amp;ldquo;Add a --emit=nameres for IDEs&amp;rdquo; compiler-team#749 (Zulip) (last review activity: about 5 days ago) &amp;ldquo;Fully rustfmt use declarations&amp;rdquo; compiler-team#750 (Zulip) (last review activity: about 5 days ago) Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-06-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-06-06/</guid><description>T-compiler Meeting Agenda 2024-06-06 Announcements Rust stable release 1.79 in a week! Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-06-06T22:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-06-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-06-13/</guid><description>T-compiler Meeting Agenda 2024-06-13 Announcements Today release of Rust stable 1.79! Blog post PR Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-06-13T22:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-06-20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-06-20/</guid><description>T-compiler Meeting Agenda 2024-06-20 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Tomorrow time:2024-06-21T16:00:00+02:00 Bonanza backlog meeting (see comment) Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-06-20T22:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-07-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-07-18/</guid><description>T-compiler Meeting Agenda 2024-07-18 Announcements Next week release of next stable Rust 1.80 Is there interest/capacity to pick a topic from this list and schedule a meeting? by the way, 40 P-high unassigned isues Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-07-18T22:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-08-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-08-01/</guid><description>T-compiler Meeting Agenda 2024-08-01 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (TIP) get them from https://github.com/rust-lang/calendar MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (stale MCP might be closed as per MCP procedure) None at this time Old MCPs (not seconded, take a look) &amp;ldquo;Add hygiene attributes to compile expanded source code&amp;rdquo; compiler-team#692 (Zulip) (last review activity: 6 months ago) concern: added-complexity-to-frontend &amp;ldquo;Target families for executable format&amp;rdquo; compiler-team#716 (Zulip) (last review activity: 6 months ago) &amp;ldquo;Partial compilation using MIR-only rlibs&amp;rdquo; compiler-team#738 (Zulip) (last review activity: 3 months ago) &amp;ldquo;Add Hotpatch flag&amp;rdquo; compiler-team#745 (Zulip) (last review activity: 2 months ago) Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-08-15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-08-15/</guid><description>T-compiler Meeting Agenda 2024-08-15 Announcements Today released dot release 1.80.1: https://blog.rust-lang.org/2024/08/08/Rust-1.80.1.html Also published list of Project Goals 2024! https://blog.rust-lang.org/2024/08/12/Project-goals.html Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-08-15T22:00:00+01:00 wg-rust-analyzer steering meeting on Zulip (https://rust-lang.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-08-22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-08-22/</guid><description>T-compiler Meeting Agenda 2024-08-22 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-08-22T22:00:00+01:00 wg-rust-analyzer steering meeting on Zulip (https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Steering.20meeting) time:2024-08-23T17:00:00+01:00 wg-macros triage meeting Zulip (https://rust-lang.zulipchat.com/#narrow/stream/410876-wg-macros.2Ftriage) time:2024-08-23T18:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-08-29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-08-29/</guid><description>T-compiler Meeting Agenda 2024-08-29 Announcements Next week stable Rust 1.81 is out Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings None MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time. Old MCPs (stale MCP might be closed as per MCP procedure) None at this time Old MCPs (not seconded, take a look) &amp;ldquo;Target families for executable format&amp;rdquo; compiler-team#716 (Zulip) (last review activity: 6 months ago) &amp;ldquo;Partial compilation using MIR-only rlibs&amp;rdquo; compiler-team#738 (Zulip) (last review activity: 4 months ago) &amp;ldquo;Add Hotpatch flag&amp;rdquo; compiler-team#745 (Zulip) (last review activity: 3 months ago) &amp;ldquo;Don&amp;rsquo;t track --emit= options as part of crate SVH&amp;rdquo; compiler-team#769 (Zulip) (last review activity: about 13 days ago) &amp;ldquo;Opt-in flag for absolute paths in diagnostics&amp;rdquo; compiler-team#770 (Zulip) (last review activity: about 13 days ago) Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-09-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-09-05/</guid><description>T-compiler Meeting Agenda 2024-09-05 Announcements Today Rust stable release 1.81. Blog post Draft blog post for the election of the Project Directors (PDs): https://github.com/rust-lang/blog.rust-lang.org/blob/fb8299d3dd4d42eb928442115a8a730889c466bb/posts/inside-rust/2024-09-04-electing-new-project-directors.md Draft blog post about upcoming changes in WASM targets : https://github.com/rust-lang/blog.rust-lang.org/pull/1385 Context: https://github.com/rust-lang/rust/pull/128511 after a cursory review from t-compiler (thanks!), we can set a date for publishing Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along).</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-09-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-09-12/</guid><description>T-compiler Meeting Agenda 2024-09-12 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-09-12T22:00:00+01:00 wg-rust-analyzer steering meeting on Zulip (https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Steering.20meeting) time:2024-09-13T17:00:00+01:00 wg-macros triage meeting Zulip (https://rust-lang.zulipchat.com/#narrow/stream/410876-wg-macros.2Ftriage) time:2024-09-13T18:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-09-19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-09-19/</guid><description>T-compiler Meeting Agenda 2024-09-19 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-09-19T22:00:00+01:00 wg-rust-analyzer steering meeting on Zulip (https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Steering.20meeting) time:2024-09-20T17:00:00+01:00 wg-macros triage meeting Zulip (https://rust-lang.zulipchat.com/#narrow/stream/410876-wg-macros.2Ftriage) time:2024-09-20T18:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-09-26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-09-26/</guid><description>T-compiler Meeting Agenda 2024-09-26 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-09-26T22:00:00+01:00 wg-rust-analyzer steering meeting on Zulip (https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Steering.20meeting) time:2024-09-27T17:00:00+01:00 wg-macros triage meeting Zulip (https://rust-lang.zulipchat.com/#narrow/stream/410876-wg-macros.2Ftriage) time:2024-09-27T18:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-10-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-10-03/</guid><description>T-compiler Meeting Agenda 2024-10-03 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings None
MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Make the test cfg a userspace check-cfg&amp;rdquo; compiler-team#785 (Zulip) &amp;ldquo;Policy change around adding new unstable flags&amp;rdquo; compiler-team#787 (Zulip) &amp;ldquo;Normalize FileCheck directives&amp;rdquo; compiler-team#789 (Zulip) &amp;ldquo;Relink, don&amp;rsquo;t rebuild&amp;rdquo; compiler-team#790 (Zulip) Old MCPs (stale MCP might be closed as per MCP procedure) None at this time Old MCPs (not seconded, take a look) &amp;ldquo;Add hygiene attributes to compile expanded source code&amp;rdquo; compiler-team#692 (Zulip) (last review activity: about 13 days ago) &amp;ldquo;Add Hotpatch flag&amp;rdquo; compiler-team#745 (Zulip) (last review activity: about 1 days ago) &amp;ldquo;Add evex512 target feature for AVX10&amp;rdquo; compiler-team#778 (Zulip) (last review activity: about 26 days ago) Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-10-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-10-10/</guid><description>T-compiler Meeting Agenda 2024-10-10 Announcements Next week Rust 1.82 is out Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-10-10T22:00:00+01:00 wg-rust-analyzer steering meeting on Zulip (https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Steering.20meeting) time:2024-10-11T17:00:00+01:00 wg-macros triage meeting Zulip (https://rust-lang.zulipchat.com/#narrow/stream/410876-wg-macros.2Ftriage) time:2024-10-11T18:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-10-17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-10-17/</guid><description>T-compiler Meeting Agenda 2024-10-17 Announcements Today, Rust 1.82 stable is out (blog post) Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-10-17T22:00:00+01:00 wg-rust-analyzer steering meeting on Zulip (https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Steering.20meeting) time:2024-10-18T17:00:00+01:00 wg-macros triage meeting Zulip (https://rust-lang.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-10-24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-10-24/</guid><description>T-compiler Meeting Agenda 2024-10-24 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings (TIP) get them from https://github.com/rust-lang/calendar MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Create an avr-unknown-unknown target&amp;rdquo; compiler-team#800 (Zulip) Old MCPs (stale MCP might be closed as per MCP procedure) None at this time Old MCPs (not seconded, take a look) &amp;ldquo;Add hygiene attributes to compile expanded source code&amp;rdquo; compiler-team#692 (Zulip) (last review activity: about 34 days ago) &amp;ldquo;Add Hotpatch flag&amp;rdquo; compiler-team#745 (Zulip) (last review activity: about 12 days ago) &amp;ldquo;Add evex512 target feature for AVX10&amp;rdquo; compiler-team#778 (Zulip) (last review activity: about 47 days ago) &amp;ldquo;Make the test cfg a userspace check-cfg&amp;rdquo; compiler-team#785 (Zulip) (last review activity: about 0 days ago) &amp;ldquo;Policy change around adding new unstable flags&amp;rdquo; compiler-team#787 (Zulip) (last review activity: about 5 days ago) &amp;ldquo;Normalize FileCheck directives&amp;rdquo; compiler-team#789 (Zulip) (last review activity: about 5 days ago) &amp;ldquo;Relink, don&amp;rsquo;t rebuild&amp;rdquo; compiler-team#790 (Zulip) (last review activity: about 5 days ago) &amp;ldquo;Support for a new wasm32-linux-musl Tier-3 target&amp;rdquo; compiler-team#797 (Zulip) (last review activity: about 5 days ago) Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-10-31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-10-31/</guid><description>T-compiler Meeting Agenda 2024-10-31 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings None MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Create an avr-unknown-unknown target&amp;rdquo; compiler-team#800 (Zulip) Old MCPs (stale MCP might be closed as per MCP procedure) None at this time Old MCPs (not seconded, take a look) &amp;ldquo;Add hygiene attributes to compile expanded source code&amp;rdquo; compiler-team#692 (Zulip) (last review activity: about 41 days ago) &amp;ldquo;Add Hotpatch flag&amp;rdquo; compiler-team#745 (Zulip) (last review activity: about 20 days ago) &amp;ldquo;Add evex512 target feature for AVX10&amp;rdquo; compiler-team#778 (Zulip) (last review activity: about 55 days ago) &amp;ldquo;Make the test cfg a userspace check-cfg&amp;rdquo; compiler-team#785 (Zulip) (last review activity: about 6 days ago) &amp;ldquo;Policy change around adding new unstable flags&amp;rdquo; compiler-team#787 (Zulip) (last review activity: about 13 days ago) &amp;ldquo;Normalize FileCheck directives&amp;rdquo; compiler-team#789 (Zulip) (last review activity: about 13 days ago) &amp;ldquo;Relink, don&amp;rsquo;t rebuild&amp;rdquo; compiler-team#790 (Zulip) (last review activity: about 13 days ago) &amp;ldquo;Support for a new wasm32-linux-musl Tier-3 target&amp;rdquo; compiler-team#797 (Zulip) (last review activity: about 13 days ago) Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-11-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-11-07/</guid><description>T-compiler Meeting Agenda 2024-11-07 Announcements Steering meeting: planning tomorrow at time:2024-11-08T09:00:00-06:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-11-07T22:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Unstable flag to choose Emscripten unwinding abi&amp;rdquo; compiler-team#801 (Zulip) &amp;ldquo;Allow users to specify the TLS dialect (Traditional TLS vs.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-11-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-11-14/</guid><description>T-compiler Meeting Agenda 2024-11-14 Announcements Rustc Dev Guide reading club session, chapters 40 to 42 on time:2024-11-20T14:30:00-03:00. More information #t-compiler/wg-rustc-dev-guide&amp;gt;Rustc dev guide reading club. Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: Types Team High Bandwidth Discussions time:2024-11-18T16:00:00+01:00 Compiler Team: P-high review time:2024-11-15T09:00:00-06:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-11-21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-11-21/</guid><description>T-compiler Meeting Agenda 2024-11-21 Announcements Next week stable 1.83 is out :loudspeaker: Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings WG-async Design Meeting time:2024-11-21T19:00:00+01:00 Types Team: ITE (Impl Trait Everywhere) Triage time:2024-11-21T22:00:00+01:00 Stable MIR Weekly Meeting time:2024-11-22T17:00:00+01:00 @_davidtwco office hours time:2024-11-22T17:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-11-28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-11-28/</guid><description>T-compiler Meeting Agenda 2024-11-28 Announcements Today, stable 1.83 is out! :tada: 1.83 release notes 1.83 blog post Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings WG-async Design Meeting time:2024-11-28T19:00:00+01:00 Types Team: ITE (Impl Trait Everywhere) Triage time:2024-11-28T22:00:00+01:00 @_davidtwco office hours time:2024-11-29T17:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-12-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-12-05/</guid><description>T-compiler Meeting Agenda 2024-12-05 Announcements The annual State of Rust survey has just been published (blog post): please share, boost, toot, tweet, and don&amp;rsquo;t forget to fill it up :-) Tomorrow design meeting about type_id collisions (compiler-team#774) time:2024-12-06T09:00:00-06:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along).</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-12-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-12-12/</guid><description>T-compiler Meeting Agenda 2024-12-12 Announcements Team compiler is looking for someone taking on a 4-weekly rotation shift on the rustc performance triaging (details on Zulip thread) The review policy for contributors has been published: https://forge.rust-lang.org/compiler/reviews.html Comments and amendments are welcome. Discuss on Zulip (contrib-private) or on rust-forge#790 Design meeting: LLVM optional target-cpu features enabled by default (compiler-team#752) Continue discussion of rust-lang/rust#125033 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along).</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-12-19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-12-19/</guid><description>T-compiler Meeting Agenda 2024-12-19 Announcements Steering meeting: Rust Project Goal Review time:2024-12-20T16:00:00+01:00 T-compiler planning meeting time:2024-12-20T16:00:00+01:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Stable MIR Weekly Meeting time:2024-12-20T17:00:00+01:00 @_davidtwco office hours time:2024-12-20T17:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-12-26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-12-26/</guid><description>T-compiler Meeting Agenda 2024-12-26 Backport nominations T-compiler beta / T-compiler stable
:beta:&amp;ldquo;Do not call extern_crate on current trait on crate mismatch errors&amp;rdquo; rust#133585 Authored by estebank Fixes a recent crater run regression #133585 p-high/p-critical (and #133563, reported on nightly) :beta:&amp;ldquo;Handle DropKind::ForLint in coroutines correctly&amp;rdquo; rust#134575 Authored by compiler-errors Fixes 2 recent ICEs (#134566 and #134541) No stable nominations for T-compiler this time. Performance logs triage logs for 2024-12-23
We missed triage last week due to some process issues, so this triage includes two weeks of data.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2025-01-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2025-01-02/</guid><description>T-compiler Meeting Agenda 2025-01-02 Announcements Next week release of rustc stable 1.84 P-high regressions P-high beta regressions
&amp;ldquo;regression: ICE: tcx.extern_crate(LocalCrate) is not supported for this key&amp;rdquo; rust#134705 Regression found in latest beta crater run, solved by #133585 (beta-backport approved) Unassigned P-high nightly regressions
No unassigned P-high nightly regressions this time. Performance logs triage logs for 2024-12-30
A pretty quiet week, with the exception of a significant improvement due to landing LTO for C / C++ programs compiled as part of the build.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2025-01-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2025-01-09/</guid><description>T-compiler Meeting Agenda 2025-01-09 Announcements T-lang have scheduled a C++ interop design meeting on time:2025-02-26T17:30:00Z and they want anyone interested/with opinions from compiler to attend Today release of Rust stable 1.84 :tada: and blog post Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings @_davidtwco office hours time:2025-01-10T17:00:00+01:00 MCPs/FCPs Note: there are a few MCP in FCP status that technically can be closed as accepted.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2025-01-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2025-01-16/</guid><description>T-compiler Meeting Agenda 2025-01-16 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings @_davidtwco office hours time:2025-01-17T17:00:00+01:00 Stable MIR Weekly Meeting time:2025-01-17T17:00:00+01:00 WG-async design meeting time:2025-01-16T19:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time.</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2025-01-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2025-01-23/</guid><description>T-compiler Meeting Agenda 2025-01-23 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings @_davidtwco office hours time:2025-01-24T17:00:00+01:00 WG-async design meeting time:2025-01-23T19:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Add -C hint-mostly-unused option&amp;rdquo; compiler-team#829 (Zulip) Ongoing discussion, some things to be cleared up (see mominated issues) Old MCPs (not seconded, take a look) &amp;ldquo;Add hygiene attributes to compile expanded source code&amp;rdquo; compiler-team#692 (Zulip) (last review activity: 4 months ago) &amp;ldquo;Add Hotpatch flag&amp;rdquo; compiler-team#745 (Zulip) (last review activity: 3 months ago) &amp;ldquo;Policy change around adding new unstable flags&amp;rdquo; compiler-team#787 (Zulip) (last review activity: 3 months ago) &amp;ldquo;Normalize FileCheck directives&amp;rdquo; compiler-team#789 (Zulip) (last review activity: 3 months ago) &amp;ldquo;Create an avr-unknown-none target&amp;rdquo; compiler-team#800 (Zulip) (last review activity: 2 months ago) &amp;ldquo;Demote i686-pc-windows-gnu&amp;rdquo; compiler-team#822 (Zulip) (last review activity: about 27 days ago) &amp;ldquo;Rename &amp;ldquo;dylib&amp;rdquo; crate type to &amp;ldquo;rdylib&amp;rdquo; (keep old name but deprecate it), and maybe do the same for &amp;ldquo;staticlib&amp;rdquo; → &amp;ldquo;cstaticlib&amp;rdquo;&amp;rdquo; compiler-team#825 (Zulip) (last review activity: about 13 days ago) Pending FCP requests (check your boxes!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2025-01-30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2025-01-30/</guid><description>T-compiler Meeting Agenda 2025-01-30 Announcements Today dot release 1.84.1 is out (blog post) Compiler Team Planning meeting at time:2025-01-31T16:00:00+01:00 List of open meeting proposals If we could schedule this one compiler-team#813 would unblock work by @jdonszelmann and @Celina Val Work is happening at rust#128045 (originally started by Felix) which is T-lang nominated but this comment from @oli indicates that &amp;hellip; it&amp;rsquo;s not blocked on T-lang? Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along).</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2025-02-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2025-02-06/</guid><description>T-compiler Meeting Agenda 2025-02-06 Announcements FIY: a discussion on Zulip about bootstrap running all tests of rust-analyzer. If anyone has opinions, please join the discussion. Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings WG-async design meeting time:2025-02-06T19:00:00+01:00 Stable MIR Weekly Meeting time:2025-02-07T17:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2025-02-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2025-02-13/</guid><description>T-compiler Meeting Agenda 2025-02-13 Announcements Next week release of stable 1.85 check the schedule calendar Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings WG-async design meeting time:2025-02-13T19:00:00+01:00 Stable MIR Weekly Meeting time:2025-02-14T17:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2025-02-20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2025-02-20/</guid><description>T-compiler Meeting Agenda 2025-02-20 Announcements Today release of Rust stable 1.85 blog post with also announcement of Rust 2024 :tada: Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings WG-async design meeting time:2025-02-20T19:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title/><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2025-02-27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2025-02-27/</guid><description>T-compiler Meeting Agenda 2025-02-27 Announcements T-compiler steering meeting at time:2025-02-27T16:00:00+01:00 Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings WG-async design meeting time:2025-02-27T19:00:00+01:00 Stable MIR Weekly Meeting time:2025-02-28T17:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Compile UI tests as libraries by default&amp;rdquo; compiler-team#842 (Zulip) Old MCPs (not seconded, take a look) &amp;ldquo;Add hygiene attributes to compile expanded source code&amp;rdquo; compiler-team#692 (Zulip) (last review activity: 5 months ago) &amp;ldquo;Add Hotpatch flag&amp;rdquo; compiler-team#745 (Zulip) (last review activity: 4 months ago) &amp;ldquo;Policy change around adding new unstable flags&amp;rdquo; compiler-team#787 (Zulip) (last review activity: 4 months ago) &amp;ldquo;Normalize FileCheck directives&amp;rdquo; compiler-team#789 (Zulip) (last review activity: 4 months ago) &amp;ldquo;Rename &amp;ldquo;dylib&amp;rdquo; crate type to &amp;ldquo;rdylib&amp;rdquo; (keep old name but deprecate it), and maybe do the same for &amp;ldquo;staticlib&amp;rdquo; → &amp;ldquo;cstaticlib&amp;rdquo;&amp;rdquo; compiler-team#825 (Zulip) (last review activity: about 48 days ago) &amp;ldquo;rustc_target for rust-analyzer&amp;rdquo; compiler-team#839 (Zulip) (last review activity: about 5 days ago) Pending FCP requests (check your boxes!</description></item><item><title>2018-10-26</title><link>https://rust-lang.github.io/compiler-team/minutes/steering-meeting/2018-10-26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/steering-meeting/2018-10-26/</guid><description>2018-10-26 We had our first T-compiler steering meeting today! What follows is a summary of the major points raised during the discussion. If you&amp;rsquo;d like to read the detailed minutes, please see the Zulip chat log. I&amp;rsquo;ll insert links here and there into that log where appropriate, if you want to see the original comment.
To start, before the meeting we did a survey asking folks what they thought worked well and what needed improvement in and around with the compiler team.</description></item><item><title>2018.11.16</title><link>https://rust-lang.github.io/compiler-team/minutes/steering-meeting/2018-11-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/steering-meeting/2018-11-16/</guid><description>2018.11.16 The topic of today&amp;rsquo;s steering meeting was future planning. Specifically, we were looking at some of the ideas we&amp;rsquo;ve had for major initiatives and trying to drill into them and make them more concrete. You can read the full thread over on Zulip.
We began by observing that the ultimate decisions we make here will be very influenced by the number of leaders we can find, and what they want to do, and ultimately decided to focus first on the technical angle before thinking about what leaders we have etc.</description></item><item><title>2018.12.14</title><link>https://rust-lang.github.io/compiler-team/minutes/steering-meeting/2018-12-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/steering-meeting/2018-12-14/</guid><description>2018.12.14 The steering meeting was focused on mentoring. Some of the prompting questions:
How can we help move people from &amp;ldquo;working group participant&amp;rdquo; to &amp;ldquo;full-fledged team member&amp;rdquo;? How can we reduce the &amp;ldquo;bus factor&amp;rdquo; for cricial modules like the type checker, type resolver, etc? A summary of the major points raised follows. If you prefer, you can read the full transcript on Zulip.
Major points: Mentoring it seems good to try and list out the parts of the compiler and who is an expert in each one, perhaps in some kind of &amp;ldquo;introduction to the compiler team&amp;rdquo; page on the repository this can help identify where to direct your questions about code X but also where we need to increase the number of knowledgable people it would be great if we had an organized off-ramp system for folks who have been active in a working group and are looking to broaden their knowledge maybe we can pair up such folks with someone more experienced this is a different sort of mentoring, since active people from a WG are already familiar with how the compiler works, and thus able to work at a higher level we need to find a way to make it easier to find &amp;ldquo;intermediate-level mentoring opportunities&amp;rdquo;.</description></item><item><title>2019-12-06 end-to-end query PRs</title><link>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-12-06-end-to-end-query-PRs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-12-06-end-to-end-query-PRs/</guid><description>Design Meeting 2019-12-06 &amp;ndash; librustc_interface queries Links Zulip topic of the discussion Compiler team issue Pre-design meeting Zulip topic Internals thread with descriptions of PRs Background Goal is end-to-end queries Benefits: Simpler overall model Incremental extending back to parsing mw has done measurements suggesting that on larger crates some 40% of the compilation time comes from Parallel compilation would be more effective, if done on the basis of queries Agenda Tough to frame:) Most important question to settle is what overall stategy we plan to take Do we want to try and land / rebase these PRs?</description></item><item><title>2019-12-20 major changes process</title><link>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-12-20-major-change-process/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-12-20-major-change-process/</guid><description>Major Change Process Zulip thread Summary We want some kind of system where people advertise changes that they are making or plan to make and the team can give high-level feedback early and &amp;ndash; if we decide to go with the change &amp;ndash; we can ensure there is a reviewer beforehand This document describes motivations and a specific &amp;ldquo;early draft&amp;rdquo; proposal Motivations Proposal is to add some sort of notification / lightweight process before making major changes.</description></item><item><title>2019.01.04</title><link>https://rust-lang.github.io/compiler-team/minutes/steering-meeting/2019-01-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/steering-meeting/2019-01-04/</guid><description>2019.01.04 Zulip topic
We discussed the upcoming Rust All Hands. We have a HackMd document that lists a bunch of ideas for what to talk about, but mostly we talked about how to structure the meeting itself.
We summarized how the All Hands was structured last year: basically meetings focused around particular topics, with the team (and others) mostly in a kind of semi-circle or around a whiteboard.
One of the ideas we had for this year is that we could have some sessions that are just focused on explaining how a particular area of the code works, which could help people unfamiliar with an area get up to speed.</description></item><item><title>2019.01.17</title><link>https://rust-lang.github.io/compiler-team/minutes/steering-meeting/2019-01-17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/steering-meeting/2019-01-17/</guid><description>2019.01.17 Zulip topic
We discussed the upcoming Rust All Hands.
One of the first things we focused on is trying to get consensus about what the P1 Problems are that we are aiming to tackle. Our goal is to have this list complete before the all hands. Our initial list looked like this:
compilation time better compilation time investigation tools/analysis this should work in cooperation with cargo, so we can see whole story rls, completions “too hard to do anything” — technical debt “too hard to find people to do things” — organizational debt hard to learn, monolithic architecture poorly documented long compilation times, memory requirements Looking at it, we realized a few things:</description></item><item><title>2019.03.01</title><link>https://rust-lang.github.io/compiler-team/minutes/steering-meeting/2019-03-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/steering-meeting/2019-03-01/</guid><description>2019.03.01 Zulip topic
Before the meeting started, @nikomatsakis proposed an agenda and linked to a document to collect agenda ideas for future meetings.
Also, @mw asked about discussing the policy for out-of-tree compiler crates (expanding on discussions from the All Hands&amp;rsquo; organizational meeting), a draft for which was already in-progress by @davidtwco.
The meeting commenced with a call for involvement in the RLS 2.0 working group led by @matklad as sharing expertise between the RLS 2.</description></item><item><title>2019.03.05 - Roadmap plan</title><link>https://rust-lang.github.io/compiler-team/working-groups/rfc-2229/minutes/2019.03.05-roadmap-plan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/rfc-2229/minutes/2019.03.05-roadmap-plan/</guid><description> We chalked out the detailed roadmap for the working group. We also discussed how to addressed the test failures caused by the PRs this and this. The solution for the same can he found under the section Error Message here. The recording for the entire meeting can be found here.</description></item><item><title>2019.03.22</title><link>https://rust-lang.github.io/compiler-team/minutes/steering-meeting/2019-03-22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/steering-meeting/2019-03-22/</guid><description>2019.03.22 Zulip topic.
Announcements oli-obk mentions that wg-diagnostics is planning to use the annotate-snippets crate within rustc. nikomatsakis is planning, as part of the @WG-meta working group, an RFC that will propose more intermediate levels for the compiler team to recognize committed, regular contributors. Zoxc almost has a series of PRs pushing queries all the way back to parsing. davidtwco has, after numerous attempts, managed to produce a have a working branch that unblocks RFC 2008.</description></item><item><title>2019.04.11</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-04-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-04-11/</guid><description>2019-04-11 Volunteers wanted seeking help on resolving &amp;quot;[firefox] error: relocation refers to local symbol &amp;quot;&amp;quot; [12], which is defined in a discarded section&amp;quot;
seeking help on resolving &amp;ldquo;Compiler panic with generic-typed nested closures&amp;rdquo;
Backport decisions No backport decisions were made at this meeting because there were no PRs nominated for backport. Working group sync wg-mir-opt The current goal is to make the MIR Place data structure non-recursive (Issue #52708). This should use less memory, be easier to work with, and probably faster as well.</description></item><item><title>2019.04.12</title><link>https://rust-lang.github.io/compiler-team/minutes/steering-meeting/2019-04-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/steering-meeting/2019-04-12/</guid><description>2019.04.12 Zulip topic.
Announcements nikomatsakis has opened a PR with a draft RFC on the compiler-team repository. This RFC describes adding a new level (&amp;ldquo;compiler team contributors&amp;rdquo;) to recognize people who have been contributing regularly. It also tries to document a few things about members etc. Please give it a read! eddyb is nearing completion on their work on the symbol naming revamp. It might even offer some performance improvements. nikomatsakis mentioned that in the wg-traits meeting on Monday we plan to discuss how the Chalk crates are setup and the work to refactor them to make them more friendly for the RLS etc.</description></item><item><title>2019.04.18</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-04-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-04-18/</guid><description>2019-04-18 Volunteers wanted No issues discussed this week. Backport decisions There were no beta backport nominations this week.
&amp;ldquo;Use informational target machine for metadata&amp;rdquo; (#58605) was nominated for backport to stable.
Nomination was declined Working group sync wg-llvm wg-llvm is working on optimizing overflow intrinsics with add and sub instructions.
A PR (#59546) has also been opened to fix a long standing unsoundness issue. The PR is currently waiting for someone to run lolbench.</description></item><item><title>2019.04.25</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-04-25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-04-25/</guid><description>2019-04-25 Volunteers wanted Somebody needed to reduce #60136 Somebody needed to write documentation #60059 Backport decisions &amp;ldquo;Temporarily accept [i|u][32|size] suffixes on a tuple index and warn&amp;rdquo; #60186
Accepted &amp;ldquo;Revert &amp;ldquo;compile crates under test w/ -Zemit-stack-sizes&amp;rdquo; #59911
Accepted Working group sync wg-rfc-2229 RFC 2229 is a proposal to change how closures capture variables. Instead of capturing the complete variable when a part of it is used (ie foo.bar), only the &amp;ldquo;path&amp;rdquo; will be captured by the closure.</description></item><item><title>2019.05.02</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-05-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-05-02/</guid><description>2019-05-02 Volunteers wanted call for assistance: Does someone have an ARM (and maybe also MUSL?) host they could use to try to replicate &amp;ldquo;Stable rustc always panics on arm/musl&amp;rdquo; Backport decisions There were no beta- nor stable-nominations for backport. Working group sync wg-meta The compiler contributor RFC is in FCP and should be merged soon.
They are trying to get some sort of &amp;ldquo;design meeting&amp;rdquo; up and going. The plan is to discuss that initial proposal in more depth tomorrow at steering meeting, and then get started after that.</description></item><item><title>2019.05.09</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-05-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-05-09/</guid><description>2019-05-09 Volunteers wanted compiler panic &amp;ldquo;randomly&amp;rdquo; with incremental build (#60629)
Help is wanted to reproduce the issue Regression: Typemap type mismatch in 1.34.0+ (#60375)
Help is wanted to narrow down the problem Backport decisions save-analysis: Fix ICE when processing associated constant (#60649) Backport accepted Working group sync wg-nll NLL migration mode is enabled on Rust 2015.
The next goal is to remove the old AST-based borrow checker.
Link to full discussion</description></item><item><title>2019.05.10</title><link>https://rust-lang.github.io/compiler-team/working-groups/parallel-rustc/minutes/2019.05.10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/parallel-rustc/minutes/2019.05.10/</guid><description>2019.05.10 Zulip topic.
Plan for parallel-rustc Gather the performance data of the feature internally Make a &amp;ldquo;go/no-go&amp;rdquo; decision based on the data Overall conclusions The overall conclusions was that before shipping we should improve the documentation. To that end, we are trying to gather major design questions in a hackmd document. Here is a link to the start of a discussion about documentation.
Gathered data The most important data on our plan are recorded on hackmd.</description></item><item><title>2019.05.16</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-05-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-05-16/</guid><description>2019-05-16 Volunteers wanted request for investigation: &amp;ldquo;Compiler panic with generic-typed nested closures&amp;rdquo; (#59494)
request for investigation: &amp;ldquo;Exponential compile-time and type_length_limit blowup when nesting closure wrappers&amp;rdquo; (#54540)
eddyb has excellent notes here on the fundamental problem request for investigation: &amp;ldquo;llvm lint: &amp;ldquo;Undefined behavior: Call argument type mismatches callee parameter type&amp;rdquo; with mixing debug and release&amp;rdquo; (#48310)
specifically, we need to resolve whether this is in fact an LLVM bug request for investigation: &amp;ldquo;ICE with unsized associated type&amp;rdquo; (#60431)</description></item><item><title>2019.05.23</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-05-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-05-23/</guid><description>2019-05-23 Volunteers wanted No issues discussed this week. Backport decisions &amp;ldquo;Fix ICE with inconsistent macro matchers&amp;rdquo; (#61046)
Backport accepted &amp;ldquo;debuginfo: Revert to old/more verbose behavior for -Cdebuginfo=1&amp;rdquo; (#61007)
Backport accepted Working group sync wg-pgo PGO stands for Profiler Guided Optimization.
Code is instrumented and then run. The profilng data gathered at runtime is then used in subsequent compilations to guide optimizations.
PGO support is almost complete!
The remaining work is mostly just around the UI side of things: documenting compiler flags, moving flags from -Z to -C.</description></item><item><title>2019.06.06</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-06-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-06-06/</guid><description>2019-06-06 Volunteers wanted No issues discussed this week. Backport decisions Fix regression 61475 #61500 Backport approved Turn turbo :fish: :ice_cream: into an error #61189 Backport approved Fix overflowing literal lint in loops #61098 Backport approved Fix more escaping ReScopes #60765 Backport approved Constrain all regions in the concrete type for an opaque type #60449 Backport approved Working group sync wg-mir-opt const propagation (by Wesley Wiser) on mir opt level 2</description></item><item><title>2019.06.13</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-06-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-06-13/</guid><description>2019-06-13 Volunteers wanted No issues discussed this week. Backport decisions Handle index out of bound errors during const eval without panic #61598 Approved for beta backport. Working group sync wg-llvm Nikita Popov fixed a codegen issue with LLVM float min/max intrinsics on X86.
This allowed varkor to switch our min/max functions to use those intrinsics.
Nikita Popov is working on getting CVP nowrap inference reenabled in LLVM.
Link to full discussion</description></item><item><title>2019.06.20</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-06-20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-06-20/</guid><description>2019-06-20 Volunteers wanted No issues discussed this week. Backport decisions Beta: &amp;ldquo;resolve: Temporarily make panic available with no_implicit_prelude&amp;rdquo; #61971
Backport accepted Beta: &amp;ldquo;Fix ICE involving mut references&amp;rdquo; #61947
Backport accepted Beta: &amp;ldquo;rustc_typeck: correctly compute Substs for Res::SelfCtor.&amp;rdquo; #61896
Backport accepted Beta: &amp;ldquo;Fix rust-lldb wrapper scripts.&amp;rdquo; #61827
Backport declined Beta: &amp;ldquo;Fix cfg(test) build for x86_64-fortanix-unknown-sgx&amp;rdquo; #61503
Backport accepted Beta: &amp;ldquo;Dont ICE on an attempt to use GAT without feature gate&amp;rdquo; #61118</description></item><item><title>2019.06.27</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-06-27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-06-27/</guid><description>2019-06-27 The meeting largely consisted of discussion of a few nominated issues:
Rustdoc recursion limit issue
Assigned to @nagisa Incorrect span / broken rustfix: help: use dyn: dyn #[dom_struct]
@davidtwco is assigned and working on a fix. Soundness hole in pattern matching on enums with an uninhabited variant
Assigned to @eddyb. Self as default type isnt typechecked
Under discussion at a future T-Lang meeting. Incremental compilation results in linker error when method use is removed</description></item><item><title>2019.07.04</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-07-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-07-04/</guid><description>2019-07-04 Volunteers wanted No issues discussed this week. Backport decisions There were no backport nominations this week. Working group sync wg-meta
Conferences, Mozilla All-Hands, and other activities have been keeping members of the group busy recently. So there&amp;rsquo;s been a slight stall in activity.
The compiler team website is nearly completed thanks to @Federico Carrone and @catalinasy!
Link to full discussion
Meta A poll was taken to see if there was interest in moving the Friday Compiler Steering Meeting to another day or time.</description></item><item><title>2019.07.11</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-07-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-07-11/</guid><description>2019-07-11 Volunteers wanted No issues discussed this week. Backport nominations Raise the default recursion limit to 128
Approved for beta backport Fix ICEs when Self is used in type aliases
Approved for beta backport Emit warning when trying to use PGO in conjunction with unwinding on Windows
On hold while @wesleywiser looks into alternative approaches Working group sync wg-pipelining
Tracking issue #60988
@alexcrichton is proposing we stabilize the feature and turn it on for everyone by default.</description></item><item><title>2019.07.18</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-07-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-07-18/</guid><description>2019-07-18 Volunteers wanted No issues discussed this week. Backport nominations Fix #62660
Approved for beta backport Declined for stable backport Cancel unemitted diagnostics during error recovery
Approved for beta backport Handle errors during error recovery gracefully
Approved for beta backport Correctly break out of recovery loop
Approved for beta backport Declined for stable backport Emit warning when trying to use PGO in conjunction with unwinding on Windows
Declined because it&amp;rsquo;s supersceeded by #62615 Only error about MSVC + PGO + unwind if we&amp;rsquo;re generating code</description></item><item><title>2019.07.18</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-07-25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-07-25/</guid><description>2019-07-25 Volunteers wanted #60297 - we are looking for someone with access to ARM/musl to help debug this
#62896 and #62932 - there are some embedded failures, quite possibly related to LLVM, that could use bisection
Backport nominations Make the parser TokenStream more resilient after mismatched delimiter recovery Approved for beta backport Working group sync No working group sync this week.</description></item><item><title>2019.08.01</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-08-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-08-01/</guid><description>2019-08-01 Volunteers wanted No issues discussed this week.
Backport decisions There were no pending backport decisions this week.
Working group sync No working group sync this week.</description></item><item><title>2019.08.15</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-08-15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-08-15/</guid><description>2019-08-15 Volunteers wanted #60297 - we are looking for someone with access to ARM/musl to help debug this Backport nominations #63508 Do not ICE when synthesizing spans falling inside unicode chars Beta backport accepted Working group sync wg-rustc-dev-guide wg-rustc-dev-guide&amp;rsquo;s objective is to make the compiler easier to learn by ensuring that rustc-dev-guide is &amp;ldquo;complete&amp;rdquo;.
Currently they&amp;rsquo;re working on:
Getting video lectures about parts of the compiler from people who know them Turning existing video lectures into content for the rustc-dev-guide Triaging and working on issues and pull requests for rustc-dev-guide content Help is always wanted!</description></item><item><title>2019.08.29</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-08-29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-08-29/</guid><description>2019-08-29 Volunteers wanted We&amp;rsquo;ve had a few issues recently related to upgrading LLVM. We&amp;rsquo;d like to create a new working group which will focus on fixing ICEs and miscompilations caused by LLVM. Backport nominations Account for doc comments coming from proc macros without spans #63930
Accepted for beta backport fix nounwind attribute logic #63909
Declined for beta backport Fix nested eager expansions in arguments of format_args #63717
Accepted for beta backport Don&amp;rsquo;t access a static just for its size and alignment #62982</description></item><item><title>2019.09.05</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-09-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-09-05/</guid><description>2019-09-05 Volunteers wanted Backport nominations Update xLTO compatibility table in rustc book #64092
Approved for beta backport Support &amp;ldquo;soft&amp;rdquo; feature-gating using a lint #64066
Approved for beta backport pprust: Do not print spaces before some tokens #63897
Approved for beta backport Working group sync No working group sync this week.</description></item><item><title>2019.09.12</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-09-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-09-12/</guid><description>2019-09-12 Volunteers wanted We are looking for someone with access to an arm/musl system to help troubleshoot #60297 Backport nominations Update LLVM submodule #64317
Approved for beta backport fix nounwind attribute logic #63909
No conclusion reached yet. We&amp;rsquo;ll revisit next week. pprust: Do not print spaces before some tokens #63897
Approved for beta backport Working group sync wg-polonius After a long hiatus, this working group is being rebooted with a focus on expanding Polonius coverage to include initialization checking and region subtyping in addition to borrow checking.</description></item><item><title>2019.09.19</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-09-19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-09-19/</guid><description>2019-09-19 Volunteers wanted &amp;ldquo;Better error message when attempting to instantiate tuple structs with private fields&amp;rdquo; #58017 Volunteer wanted to bisect this issue. Backport nominations &amp;ldquo;fn ptr is structural match&amp;rdquo; #64431
Accepted for beta backport &amp;ldquo;fix nounwind attribute logic&amp;rdquo; #63909
Declined for beta backport Working group sync wg-self-profile Three main things being worked on:
Getting the &amp;ldquo;minimum viable product&amp;rdquo; done as planned #58967
Improving the ergonomics of self-profiling
we want to collect use cases on irlo and then try to come up with good, tooling assisted workflows for those use cases Use self-profiling to implement a feature that allows to attribute compile time to specific parts of the source code this feature is currently still in the brainstorming phase comments welcome https://github.</description></item><item><title>2019.09.26</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-09-26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-09-26/</guid><description>2019-09-26 Volunteers wanted Help wanted: proc-macro param attrs dropping first attrs in impl fns #64682
Help wanted: error: internal compiler error: unexpected panic: inconsistent resolution for a macro #64803
Backport nominations Fix #64744. Account for the Zero sub-pattern case. #64748
Approved for beta backport Rustdoc render async function re-export #64599
Approved for beta backport Working group sync wg-traits wg-traits is spinning back up and has a number of projects currently being worked on:</description></item><item><title>2019.09.30-planning</title><link>https://rust-lang.github.io/compiler-team/working-groups/parallel-rustc/minutes/2019.09.30-planning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/parallel-rustc/minutes/2019.09.30-planning/</guid><description>2019.09.30 Planning Meeting Zulip topic.
Roadmap Sequential overhead Rerun perf benchmark with -j1 (but not limiting parallel codegen) and identify hotspots Identify cases one by one and optimize Overly fine-grained locking risks subtle ordering or dead-lock bugs Solution: audit Poor jobserver integration leading to overall poor scaling Little public testing of correctness and performance Call for permance testing, asking for data with -Ztimings requires us to have easy builds available, perhaps?</description></item><item><title>2019.10.10</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-10-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-10-10/</guid><description>2019-10-10 Announcements @centril is splitting libsyntax into data and logic parts which will decrease the amount of code librustc depends on.
@nagisa a cross-platform version of stacker which will allow us to avoid stack overflows in rustc.
There is a compiler team design meeting scheduled for tomorrow (2019-10-11) to discuss some of @Zoxc&amp;rsquo;s PRs.
@pnfelix is revising the code that handles structural match checking.
@nikomatsakis has a PR (#65232) up which helps us get closer to lazy normalization.</description></item><item><title>2019.10.17</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-10-17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-10-17/</guid><description>2017-10-17 Announcements Design meeting on debuginfo strategy tomorrow (2019-10-18) on Zulip.
The traits working group had a design meeting yesterday on lazy normalization.
@nikomatsakis has been looking into lazy normalization specifically for constants and hopes to have some notes to share soon.
The LLVM ICE-breakers working group is nearly ready to go live.
@spastorino has nearly finished interning Place projections. PR 1, PR2
@centril is continuing to work on splitting libsyntax apart</description></item><item><title>2019.10.24</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-10-24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-10-24/</guid><description>2019-10-24 Announcments @simulacrum landed the rustc-dev split PR which decreases the size of the rustc-dev rustup component #65474 Backport nominations Avoid ICE when adjusting bad self ty #65755
Accepted for beta and stable backport Avoid ICE when checking Destination of break inside a closure #65518
Accepted for beta and stable backport save-analysis: Nest tables when processing impl block definitions #65511
Accepted for beta backport save-analysis: Don&amp;rsquo;t ICE when resolving qualified type paths in struct members #65353</description></item><item><title>2019.10.31</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-10-31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-10-31/</guid><description>2019-10-31 Announcments Rust 1.39 ships on Thursday!
Backport nominations &amp;ldquo;save-analysis: Account for async desugaring in async fn return types&amp;rdquo; #65936
Accepted for beta backport &amp;ldquo;resolve: Turn the &amp;ldquo;non-empty glob must import something&amp;rdquo; error into a lint&amp;rdquo; #65539
Accepted for beta backport Working group sync wg-pgo PGO is available in the stable compiler. Docs are in the rustc-dev-guide and the rustc-book
Unfortunately we don&amp;rsquo;t observe significant performance gains from applying it (except for tiny synthetic test cases).</description></item><item><title>2019.11.07</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-11-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-11-07/</guid><description>2019-11-07 Announcments @pnkfelix is moving to the US and will be working in the Eastern timezone.
@wesleywiser has been working on the constant propagation pass and wants to turn it on for debug &amp;amp; release builds to improve compilation time.
Rust 1.39 has shipped with async/await support and other goodies.
Backport nominations Do not ICE with a precision flag in formatting str and no format arguments #66093 Approved for beta &amp;amp; stable backport.</description></item><item><title>2019.11.14</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-11-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-11-14/</guid><description>2019-11-14 Announcements Request for assistance: &amp;ldquo;Rustc panics (NoSolution): could not prove Binder(projection soup)&amp;rdquo; #65581
Request for assistance: &amp;ldquo;Rust 1.38 regressions weren&amp;rsquo;t fully triaged&amp;rdquo; #65577
Request for assistance: &amp;ldquo;Miscompilation with target-cpu=znver1 (AMD Ryzen 1000/2000 series) on Windows + LLVM 9.&amp;rdquo; #63959
@cjgillot replaced a lot of TypeFoldable impls with a derive #66384
The Infra team has finished evaluating GitHub Actions and we&amp;rsquo;re switching!
This will have a signficant, positive impact on CI build time.</description></item><item><title>2019.11.21</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-11-21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-11-21/</guid><description>2019-11-21 Announcements perf.rust-lang.org is switching to a new benchmarking server so all of the old data is being removed to avoid skewed comparisons.
The constant propagation MIR optimization pass is on by default which provides some improvements to debug and release compile times.
@pnkfelix wrote a blog post about minimizing rustc bugs.
Backport nominations &amp;ldquo;Do not ICE on trait aliases with missing obligations” #66392
Accepted for stable backport &amp;ldquo;Fix ICE when trying to suggest Type&amp;lt;&amp;gt; instead of Type()&amp;rdquo; #66390</description></item><item><title>2019.11.28</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-11-28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-11-28/</guid><description>2019-11-28 Announcements perf.rust-lang.org has been fully migrated to the new server for benchmarking.
GitHub Actions is now running both Windows and Linux workloads!
Backport nominations &amp;ldquo;Handle non_exhaustive in borrow checking&amp;rdquo; #66722
Accepted for beta backport &amp;ldquo;Fix some issues with attributes on unnamed fields&amp;rdquo; #66669
Accepted for beta backport Working group sync wg-diagnostics Work is proceeding slowly on the out-of-tree diagnostic rendering.</description></item><item><title>2019.12.05</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-12-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-12-05/</guid><description>2019-12-05 Announcements @centril is working on a major refactoring of the expression, statement, and item parsers in librustc_parse
@eddyb landed [#56231] which unblocks optimizing MIR while preserving debuginfo for variables.
Backport nominations &amp;ldquo;E0023: handle expected != tuple pattern type&amp;rdquo; #67044
Approved for beta backport &amp;ldquo;Fix some issues with attributes on unnamed fields&amp;rdquo; #66669
Approved for beta &amp;amp; stable backport &amp;ldquo;Do not ICE in if without else in async fn&amp;rdquo; #66391</description></item><item><title>2019.12.12</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-12-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-12-12/</guid><description>2019-12-12 Announcements @pnkfelix posted an RFC about future-incompat lints RFC 2834
@eddyb landed some additional caching for trait selection which gives some nice speedups #66821
Const eval now has support for if/match and a PR for loop/while is open.
@eddyb is resurrecting their SROA MIR optimization #48300
Backport nominations resolve: Always resolve visibilities on impl items #67236
Approved for beta backport resolve: Resolve visibilities on fields with non-builtin attributes #67106</description></item><item><title>2019.12.19</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-12-19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-12-19/</guid><description>2019-12-19 Announcements @pnkfelix has moved back to the USA
There will be a new Rust release by end-of-day
@michaelwoerister has a PR up that adds support for recording query-keys during a -Z self-profile session #67397
@matthewjasper and @wesleywiser have been asked to join the compiler team as full members and both have accepted
@centril is working on a stabilization report for sub-slice patterns
Backport nominations Don&amp;rsquo;t suppress move errors for union fields #67314</description></item><item><title>2020-02-28 focused and efficient triage</title><link>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2020-02-28-focused-and-efficient-triage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2020-02-28-focused-and-efficient-triage/</guid><description>Focused and Efficient Triage Meeting proposal Pre-meeting notes Zulip meeting thread The goal of the meeting was to discuss the idea of creating a pre-triage working group, the tasks we need to do and who should be doing them. The motivation is that (a) a lot of work for our current triage process is falling on @pnkfelix and (b) there is a kind of lack of clarity around our goals, how we use our labels, etc.</description></item><item><title>2020-03-12 shared library to represent Rust types</title><link>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2020-03-12-shared-library-for-types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2020-03-12-shared-library-for-types/</guid><description>Shared library to represent Rust types Notes from the meeting The later sections of this document were largely prepared before the discussion. This section contains notes from the discussion itself. You can also read the complete discussion in our zulip-archive.
Conclusions consensus from folks in the meeting: are &amp;ldquo;cautiously optimistic&amp;rdquo; about this approach, and open to us trying to create PRs that move rustc in this direction are ok with having a rusc-ty library that is published to crates.</description></item><item><title>2020-04-03 Cranelift backend for rustc</title><link>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2020-04-03-cranelift-backend-for-rustc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2020-04-03-cranelift-backend-for-rustc/</guid><description>Cranelift backend for rustc You can also read the complete discussion in our zulip-archive.
Meeting Proposal
Pre-meeting details and agenda outline
Overview of the Cranelift backend Cranelift is a code generation backend written in Rust which is under development for use in WebAssembly compilers. As such, it could potentially improve compilation times in rustc because it is optimized for efficiently generating code rather than generating efficient code.
Over the past ~1.</description></item><item><title>2020-05-29 Roadmap 2020-2021</title><link>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2020-05-29-Roadmap-2020-2021/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2020-05-29-Roadmap-2020-2021/</guid><description>Links Zulip topic Meeting proposal: rust-lang/compiler-team#287 Key notes and points from the meeting itself Parallel compilation: There was a general consensus to deprioritize parallel compilation in favor of pursuing better improvements to incremental compilation. One interesting use case is CI turnaround times. Parallel compilation doesn&amp;rsquo;t do much there since most CI systems are not very beefy. Incremental doesn&amp;rsquo;t either, but it might if you enabled incremental support (and could trust it well enough).</description></item><item><title>2020-09-18 Major Change Proposal Retrospective</title><link>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2020-09-18-mcp-retrospective/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2020-09-18-mcp-retrospective/</guid><description>Links Zulip topic Meeting proposal: rust-lang/compiler-team#314 Key notes and points from the meeting itself Feedback on MCPs after being seconded can be difficult to deal with. (link)
Some feelings of &amp;ldquo;where were you a week ago&amp;rdquo; as aluded to above We do want to encourage feedback even if it&amp;rsquo;s late but we should weigh some kinds of feedback more heavily than others &amp;ldquo;late&amp;rdquo; in the process. Most common feedback was: (link)</description></item><item><title>2020.01.02</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2020-01-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2020-01-02/</guid><description>2020-01-02 Announcements Happy new year!
@centril has a PR to extract rustc_hir from rustc #67803
@centril and @matthewjasper have written a stabilization report for slice_patterns #67712
Backport nominations Do not ICE on lifetime error involving closures #67687
Approved for beta backport Treat extern statics just like statics in the “const pointer to static” representation #67630
Deferred until next week Use the correct type for static qualifs #67621
Approved for beta backport Don’t suppress move errors for union fields #67314</description></item><item><title>2020.01.09</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2020-01-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2020-01-09/</guid><description>2020-01-09 Announcements Lots of activity happening on const generics &amp;amp; lazy normalization For example, #67890 by @benlewis Beta nominations Do not ICE on lifetime error involving closures #67687
Approved for stable &amp;amp; beta backport Treat extern statics just like statics in the &amp;ldquo;const pointer to static&amp;rdquo; representation #67630
Approved for beta backport Use the correct type for static qualifs #67621
Approved for beta backport Don&amp;rsquo;t suppress move errors for union fields #67314</description></item><item><title>2020.01.23</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2020-01-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2020-01-23/</guid><description>2020-01-23 Announcements No compiler team design meeting tomorrow, it has been rescheduled for Feb 7. We&amp;rsquo;ll be discussing &amp;ldquo;parser library-ification&amp;rdquo;.
The next Rust release is scheduled for Jan 30 (one week away). The tools &amp;ldquo;no breakage week&amp;rdquo; started yesterday in preperation for the release.
Backport nominations Do not ICE on malformed suggestion spans #68256
Approved for beta backport. Revert parts of #66405 #67471
Approved for beta backport.</description></item><item><title>2020.02.06</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2020-02-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2020-02-06/</guid><description>2020-02-06 Announcements There is a design meeting this Friday (2020-02-07) on parser-librarification.
@davidtwco has made progress on the polymorphization effort and has posted a status update.
@mw has posted a major change proposal to make incremental compilation respect the -Ccodegen-units setting.
Cargo report future-incompat rfc#2834 is on track to get an FCP merge request from the cargo team in the near future.
Backport nominations Correct ICE caused by macros generating invalid spans #68611</description></item><item><title>2020.02.13</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2020-02-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2020-02-13/</guid><description>2020-02-13 Backport nominations Correct ICE caused by macros generating invalid spans #68611
Approved for stable &amp;amp; beta backport Fix extra subslice lowering #69128
Approved for beta backport Working group sync wg-polymorphization @davidtwco writes:
Since this is the first update to the compiler team meeting, this working group is my work for my master&amp;rsquo;s thesis - it aims to implement an analysis to detect when functions could remain polymorphic during code generation.</description></item><item><title>2020.02.20</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2020-02-20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2020-02-20/</guid><description>2020-02-20 Announcements On Feb 28th we will discuss our triage procedures and how we can make them more efficient. See rust-lang/compiler-team#247 for more details.
On Mar 6th, we will discuss plans to extract rustc&amp;rsquo;s representation of types and trait solving into a standalone library. See rust-lang/compiler-team#234 for more details.
Please review the new rollup guidance if you haven&amp;rsquo;t yet.
Triagebot now has notification functionality
Backport nominations Revert &amp;ldquo;Remove checked_add in Layout::repeat&amp;rdquo; #69241</description></item><item><title>Call for participation</title><link>https://rust-lang.github.io/compiler-team/procedures/call-for-participation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/procedures/call-for-participation/</guid><description>Call for participation One way to get help with a project is to issue a call for participation on the dedicated internals thread.
Such calls should follow this (very simple) template, so as to help clarify what&amp;rsquo;s going on:
- **Title:** Investigate #123141 - **Experience level expected:** (Newcomer | Contributor | Experienced) - **Urgency:** (ASAP | over next few months | whenever) - **Contact:** @your-name-here in [the #your-stream-here stream on Zulip][z] [z]: https://rust-lang.</description></item><item><title>Chat platform</title><link>https://rust-lang.github.io/compiler-team/about/chat-platform/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/about/chat-platform/</guid><description>Chat Platform The compiler team hangs out in the rust-lang Zulip these days.
Feel free to introduce yourself and say hi in the #new-members stream!
The #t-compiler/help stream is also a great place to ask questions.
In addition, each working group has one or more streams where they communicate.</description></item><item><title>Code Of Conduct</title><link>https://rust-lang.github.io/compiler-team/about/CODE_OF_CONDUCT/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/about/CODE_OF_CONDUCT/</guid><description>The Rust Code of Conduct A version of this document can be found online.
Conduct Contact: rust-mods@rust-lang.org
We are committed to providing a friendly, safe and welcoming environment for all, regardless of level of experience, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, nationality, or other similar characteristic. On IRC, please avoid using overtly sexual nicknames or other nicknames that might detract from a friendly, safe and welcoming environment for all.</description></item><item><title>Compiler Team Contributors</title><link>https://rust-lang.github.io/compiler-team/working-groups/meta/rfc-drafts/compiler-team-contributors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/meta/rfc-drafts/compiler-team-contributors/</guid><description>Compiler Team Contributors Feature Name: (fill me in with a unique ident, my_awesome_feature) Start Date: (fill me in with today&amp;rsquo;s date, YYYY-MM-DD) RFC PR: rust-lang/rfcs#0000 Rust Issue: rust-lang/rust#0000 Summary Introduce an intermediate level of member for the compiler team, the compiler team contributor.
Motivation This proposal is part of a larger effort to introduce more structure into the compiler team&amp;rsquo;s makeup. This structure should make it easier to become a part of the compiler team, by laying out a clear path to membership and by offering more official roles.</description></item><item><title>Debugging Support</title><link>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-10-18-debuginfo-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-10-18-debuginfo-meeting/</guid><description>Debugging Support in the Compiler Zulip stream or read on the Zulip archive The problems https://github.com/rust-lang/rust/issues/64343
We have bugs with debuginfo that are causing broad pain for people who use x.py test, but we do not have dedicated developers who own maintenance of debugger support.
https://github.com/rust-lang/rust/pull/60826
We have Pull Requests to improve our debuginfo support, but we do not have dedicated developers who own maintenance of debugger support.
Q: Are we willing/able to maintain debuginfo stuff Q: if we don&amp;rsquo;t, then can we afford to keep these tests?</description></item><item><title>Dep-graph loading (#62083)</title><link>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-10-11-DepGraph-persistence-PR62038/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-10-11-DepGraph-persistence-PR62038/</guid><description>design meeting 2019-10-11 Zulip stream
introduction Dear @T-compiler/meeting,
Today we will be having a design meeting. The topic was originally sketched as &amp;ldquo;some Zoxc PR&amp;rdquo;. We&amp;rsquo;ve since narrowed that down to discuss #62038, which is a refactoring to how dep-graph loading occurs. @Zoxc wrote up a comment giving a summary of the ideas. Note that this PR itself is an incremental step towards #60035, which aims to make dep-graph loading/saving more continuous.</description></item><item><title>FAQs</title><link>https://rust-lang.github.io/compiler-team/working-groups/diagnostics/FAQ/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/diagnostics/FAQ/</guid><description>Frequently Asked Questions (FAQ) If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.
There are no FAQs so far. Please ask us more questions.</description></item><item><title>FAQs</title><link>https://rust-lang.github.io/compiler-team/working-groups/llvm/FAQ/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/llvm/FAQ/</guid><description>Frequently Asked Questions (FAQ) Looks like no questions have been asked yet! If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.</description></item><item><title>FAQs</title><link>https://rust-lang.github.io/compiler-team/working-groups/meta/FAQ/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/meta/FAQ/</guid><description>Frequently Asked Questions (FAQ) Looks like no questions have been asked yet! If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.</description></item><item><title>FAQs</title><link>https://rust-lang.github.io/compiler-team/working-groups/mir-opt/FAQ/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/mir-opt/FAQ/</guid><description>Frequently Asked Questions (FAQ) If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.
Is this working group optimizing the MIR of functions or the MIR-datastructures? Yes
Why is the above answer so short? We&amp;rsquo;re doing both. MIR-datastructures are mostly restructured where necessary to make more optimizations possible.</description></item><item><title>FAQs</title><link>https://rust-lang.github.io/compiler-team/working-groups/nll/FAQ/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/nll/FAQ/</guid><description>Frequently Asked Questions (FAQ) If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.
What is the relationship to Polonius? Polonius is an experimental, &amp;ldquo;next generation&amp;rdquo; NLL implementation, initially described in [this blog post][polonius]. Enabling the use of Polonius is not in scope for the NLL working group &amp;ndash; see [the polonius working group][../polonius].</description></item><item><title>FAQs</title><link>https://rust-lang.github.io/compiler-team/working-groups/parallel-rustc/FAQ/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/parallel-rustc/FAQ/</guid><description>Frequently Asked Questions (FAQ) Looks like no questions have been asked yet! If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.</description></item><item><title>FAQs</title><link>https://rust-lang.github.io/compiler-team/working-groups/pgo/FAQ/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/pgo/FAQ/</guid><description>Frequently Asked Questions (FAQ) Looks like no questions have been asked yet! If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.</description></item><item><title>FAQs</title><link>https://rust-lang.github.io/compiler-team/working-groups/pipelining/FAQ/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/pipelining/FAQ/</guid><description>Frequently Asked Questions (FAQ) Looks like no questions have been asked yet! If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.</description></item><item><title>FAQs</title><link>https://rust-lang.github.io/compiler-team/working-groups/polonius/FAQ/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/polonius/FAQ/</guid><description>Frequently Asked Questions (FAQ) Looks like no questions have been asked yet! If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.</description></item><item><title>FAQs</title><link>https://rust-lang.github.io/compiler-team/working-groups/rfc-2229/FAQ/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/rfc-2229/FAQ/</guid><description>Frequently Asked Questions (FAQ) Looks like no questions have been asked yet! If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.</description></item><item><title>FAQs</title><link>https://rust-lang.github.io/compiler-team/working-groups/rls-2.0/FAQ/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/rls-2.0/FAQ/</guid><description>Frequently asked questions</description></item><item><title>FAQs</title><link>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/FAQ/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/FAQ/</guid><description>Frequently Asked Questions (FAQ) If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.
There are no FAQs so far. Please ask us more questions.</description></item><item><title>FAQs</title><link>https://rust-lang.github.io/compiler-team/working-groups/self-profile/FAQ/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/self-profile/FAQ/</guid><description>Frequently Asked Questions (FAQ) Looks like no questions have been asked yet! If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.</description></item><item><title>FAQs- Template</title><link>https://rust-lang.github.io/compiler-team/working-groups/template/FAQ/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/template/FAQ/</guid><description>This page is an example template and not the actual NLL working group. Frequently Asked Questions (FAQ) Looks like no questions have been asked yet! If you have a question, feel free to file an issue or ask in the working group&amp;rsquo;s Zulip stream.</description></item><item><title>Forming a new working group</title><link>https://rust-lang.github.io/compiler-team/procedures/form-new-working-group/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/procedures/form-new-working-group/</guid><description>Forming a new working group So, you would like to form a working group?
Step 0. What is a working group? Working groups are the basic way that the compiler team tracks what is going on. If you are doing some sort of task that the compiler team will want to track over time, then it makes sense to form a working group, even if you don&amp;rsquo;t plan to be getting more people involved.</description></item><item><title>Notes</title><link>https://rust-lang.github.io/compiler-team/working-groups/diagnostics/NOTES/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/diagnostics/NOTES/</guid><description>Diagnostics Meeting Notes 2019-05-24 zulip link We triaged all P-medium A-diagnostics issues We figured out a first action for getting annotate-snippets into rustc: https://github.com/rust-lang/rust/issues/59346 We have a plan to reduce the boilerplate needed at the diagnostic emitter site: https://github.com/rust-lang/rust/issues/61132</description></item><item><title>Notes</title><link>https://rust-lang.github.io/compiler-team/working-groups/llvm/NOTES/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/llvm/NOTES/</guid><description>LLVM Meeting Notes No meetings have been held yet.</description></item><item><title>Notes</title><link>https://rust-lang.github.io/compiler-team/working-groups/meta/NOTES/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/meta/NOTES/</guid><description>Meta Meeting Notes This document contains meeting notes from the Meta working group.
2019-02-28: Meeting Written by: @spastorino
What problems do we want to solve from a compiler team member perspective and from a contributor perspective? Help to grow the team by ensuring that we engage people who&amp;rsquo;ve started to get active in rustc? Provide a source of people who can help implement things without needing as much mentoring? What does it mean to be a journeyperson?</description></item><item><title>Notes</title><link>https://rust-lang.github.io/compiler-team/working-groups/mir-opt/NOTES/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/mir-opt/NOTES/</guid><description>Mir Optimizations (mir-opt) Meeting Notes This document will contain meeting notes from the mir-opt working group.</description></item><item><title>Notes</title><link>https://rust-lang.github.io/compiler-team/working-groups/nll/NOTES/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/nll/NOTES/</guid><description>Non-Lexical Lifetimes (NLL) Meeting Notes This document contains meeting notes from the NLL working group.
2019-02-19: Agenda: Meta: What should this meeting be for? Sync-up regarding Place 2.0 (#52708) Status Updates (TBD) 2019-02-13: Status updates matthewjasper Opened #58347 to fix issues around closures Got #57609 (match rework) ready for review Opened #58353 spastorino Worked on #52708 pnkfelix Looked a bit at #52708 after assisting spastorino with it lqd: continued on #57374 davidtwco: merged #58161</description></item><item><title>Notes</title><link>https://rust-lang.github.io/compiler-team/working-groups/parallel-rustc/NOTES/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/parallel-rustc/NOTES/</guid><description>This working group hasn&amp;rsquo;t had any meetings yet. parallel-rustc Meeting Notes This document contains meeting notes from the parallel-rustc working group.</description></item><item><title>Notes</title><link>https://rust-lang.github.io/compiler-team/working-groups/pgo/NOTES/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/pgo/NOTES/</guid><description>Profile-Guided Optimization Meeting Notes This document contains meeting notes from the PGO working group.
WG Status Update - 2019/03/28 https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202019-03-28.20.2354818/near/161957622</description></item><item><title>Notes</title><link>https://rust-lang.github.io/compiler-team/working-groups/pipelining/NOTES/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/pipelining/NOTES/</guid><description>Pipelining Meeting Notes Video 2019-04-05 @alexcrichton and @nnethercote met on video for ~30m and talked about various aspects of implementing pipelining in the compiler.
What are metadata/rlibs? First we talked a bit about what are rlibs/metadata files and how is this all going to be put together. The recap is:
Rustc can produce metadata files (--emit metadata). These metadata files are like header files for Rust crates. They&amp;rsquo;re internally a compiler-specific binary format and cannot be inspected.</description></item><item><title>Notes</title><link>https://rust-lang.github.io/compiler-team/working-groups/rls-2.0/NOTES/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/rls-2.0/NOTES/</guid><description>2019-02-20 Notes from &amp;ldquo;Design of syntax trees&amp;rdquo; meeting Zulip stream
We haven&amp;rsquo;t nailed down the exact design, but we&amp;rsquo;ve covered the design space a bit, and formulated interesting questions to evaluate designs:
What are the requirements of IDEs? Full-fidelity trees, &amp;ldquo;common super type&amp;rdquo; of nodes for bottom-up traversals. Should queries reach inside of the syntax tree? In general, how incremental computation works with syntax trees? Offsets are bad for incremental (change a lot), parent pointers are bad for incremental (give access to too much context).</description></item><item><title>Notes</title><link>https://rust-lang.github.io/compiler-team/working-groups/self-profile/NOTES/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/self-profile/NOTES/</guid><description>Self-Profile Meeting Notes This document contains meeting notes from the self-profile working group.
2019-03-05: Meeting Written by: @wesleywiser
Purpose of meeting: Initial meeting to get organized and decide on some next steps.
Agenda:
Current status update Where to track work? What does an Minimum Viable Product (MVP) look like? Next work items? Current Status After a few rounds of experimentation, we have a -Z self-profile option available in the nightly compliler.</description></item><item><title>Notes - Templates</title><link>https://rust-lang.github.io/compiler-team/working-groups/template/NOTES/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/template/NOTES/</guid><description>This page is an example template and not the actual NLL working group. Feel free to break this out into a directory. Non-Lexical Lifetimes (NLL) Meeting Notes This document contains meeting notes from the NLL working group.
2019-02-22: Triage Meeting Written by: @davidtwco
Purpose of meeting: Given slow winding down of the NLL working group, discussed the ongoing purpose of the meeting. @spastorino suggested using the time as an space for open discussion and office hours (as previously suggested by @pnkfelix).</description></item><item><title>Place Interning</title><link>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-09-27-place-interning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-09-27-place-interning/</guid><description>Place projection interning meeting 2019-09-27 Zulip stream
Ideas to pursue at some later point or in parallel removing the field from the projections get rid of static from PlaceBase I (oli-obk) think this would be good to pursue ealier than later since it&amp;rsquo;ll just eliminate an annoying piece that we don&amp;rsquo;t really care about most of the time intern entire places at the MIR level interning (base, Vec&amp;lt;projection&amp;gt;) means less re-use overall though nice hack: rfirst 128 (eddyb suggests 2^16) locals or so can be mapped to themselves could even be extended for whatever the most common projections are if that proves useful insert gratuitous reference to random compression methods here Ideas rejected intern the Vec&amp;lt;Projection&amp;gt; to a &amp;amp;[Projection] Rejected: List is better because it is smaller, and we can use a PlaceRef for cases where you want to do subslicing Although &amp;amp;[Projection] would mean that a.</description></item><item><title>Planning the gcx, tcx transition</title><link>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-06-21-the-gcx-tcx-transition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-06-21-the-gcx-tcx-transition/</guid><description>Planning the 'gcx, 'tcx transition Zulip thread Summary Discuss the end-state for tcx Plan the steps we will take to get there and time frame Motivation Now that we have removed the per-inference context interners, we plan to transition the compiler to a different naming scheme. This is a major shift and something we should plan carefully.
Also, it&amp;rsquo;s an opportunity to consider an alternate naming scheme &amp;ndash; tcx and 'tcx is not known to be particularly popular.</description></item><item><title>Read-Eval-Print-Loop (REPL) Extensions</title><link>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-11-29-repl-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-11-29-repl-meeting/</guid><description>Zulip stream or read on the Zulip archive. Agenda Design doc: https://hackmd.io/GJokfI0wQ0i4SIgRbFTmfw
Big picture overview and questions
Essential changes to support REPL extensions
Big picture overview of design, and on-the-fly questions about it Read (to an AST), Compile (AST to MIR), Eval (the MIR to a value), Print (the value). and Loop.
Question: Is this going to be a tool analogous to miri, where check-in&amp;rsquo;s that break it may not break CI immediately, but rather will just file follow-up bugs?</description></item><item><title>Roadmap 2020</title><link>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-10-04-Roadmap-2020-Goals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-10-04-Roadmap-2020-Goals/</guid><description>Roadmap 2020 Compiler Discussion Zulip topic
2019 roadmap (for reference) The compiler team has five main themes of work for this year:
Improving &amp;ldquo;core strength&amp;rdquo; by lowering raw compilation times and also generating better code (which in turn can help with compilation times) Improved IDE integration, including support for typed completions Extracting parts of rustc into libraries, which are easier to understand and maintain but also help in developing a Rust specification Supporting lang team in key feature development, such as around async fn support, or improvements to the trait system Improving our documentation and organization, helping to make it clearer what is going on at any given time, and how people can get involved.</description></item><item><title>rust-analyzer and libraryification</title><link>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-09-13-rust-analyzer-and-libraryification/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-09-13-rust-analyzer-and-libraryification/</guid><description>rust-analyzer and libraryification Zulip thread Proposal issue: rust-lang/rust#160 Additional notes: hackmd document Summary Goal of the meeting is to update on rust-analyzer plans and discuss taking the next step towards extracting &amp;ldquo;standalone libraries&amp;rdquo; that can be shared between rustc and rust-analyzer.
Update on rust-analyzer Rust-analyzer has made big strides and now includes
name resolution a partial type checker preliminary integration with chalk for trait solving as well as a shared lexer with rustc What does library-ification mean?</description></item><item><title>Rustc Dev Guide WG 2019-05-14 sync meeting</title><link>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/2019.05.14-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/2019.05.14-meeting/</guid><description>Rustc Dev Guide WG 2019-05-14 sync meeting Topics discussed: Define what’s the walkthrough section we want to add Triage missing rustc-dev-guide chapters How do we want to keep track of who is doing what? Does github Projects works nice for this? Plan for walkthrough/overview chapter Goal is to have a chapter which will walk through compilation of simple program Links to other chapters for details This overview differs from the existing queries chapter in that the latter is more focused on how to create your own queries.</description></item><item><title>Rustc Dev Guide WG 2019-05-28 sync meeting</title><link>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/2019.05.28-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/2019.05.28-meeting/</guid><description>Rustc Dev Guide WG 2019-05-28 sync meeting Triaging rustc-dev-guide repo Some discussion about how to assign issues on the rust-lang/rustc-dev-guide repo Problem: can&amp;rsquo;t assign issues to non-members Possible solutions: Add WG-rustc-dev-guide members to repo so they can be assigned use triagebot model: bot is assigned the issue and edits the OP to mention the current owner. Forge Discussed purpose of the forge and how it differs from rustc-dev-guide Niko feels that most of the content in the forge doesn&amp;rsquo;t obviously belong in the guide and that the stuff currently in the guide feels like it belongs in the guide Forge is for team procedures, infra stuff would also be good to add craterbot and rustc-timer links to forge (probably link to READMEs of their repos) link forge from main page my rule of thumb [for what to put in the guide] is sort of &amp;ldquo;is this something you would do while fixing a compiler bug or implementing a compiler feature&amp;rdquo; -niko</description></item><item><title>Rustc Dev Guide WG 2019-06-11 sync meeting</title><link>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/2019.06.11-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/2019.06.11-meeting/</guid><description>Rustc Dev Guide WG 2019-06-11 sync meeting WIP stuff Write an overview chapter (lokalmatador)
Steady progress, about to finish up the part on HIR and moving on to MIR Changed the example to bubblesort in the meantime using some mutable borrows Stick to old trait solver for now, according to Niko Draft/WIP: https://paper.dropbox.com/doc/A-first-glance-at-rustc--AexZRkGI1D_0C_eqE5ZBqmgjAQ-Mk45wFbBKBT9C8e9rPaCd Transcribe the Compiler Lecture Series into chapters
amanjeev: debugging support Merge what we have and iterate Needs to be reviewed juanbono: coherence in chalk Working with igaray igaray: representing types in rustc No progress, but have not dropped it Add rustc guide to toolstate (mark-i-m)</description></item><item><title>Rustc Dev Guide WG 2019-06-25 sync meeting</title><link>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/2019.06.25-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/2019.06.25-meeting/</guid><description>Rustc Dev Guide WG 2019-06-25 sync meeting Helping with mdbook igaray says that doc team has taken up this work and it is not very specific to WG-rustc-dev-guide Blog post announcing documentation efforts and tasks, &amp;hellip; It wasn&amp;rsquo;t clear to us where such a post would be published spastorino will check with niko and see if this can be posted on rust blog or if we need some other dev-blog.rlo igaray volunteers to write a quick post if we can post on blog.</description></item><item><title>Rustc Dev Guide WG 2019-07-09 sync meeting</title><link>https://rust-lang.github.io/compiler-team/working-groups/diagnostics/minutes/2019.07.09-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/diagnostics/minutes/2019.07.09-meeting/</guid><description>Rustc Dev Guide WG 2019-07-09 sync meeting some discussion about organizing lectures on missing topics
it&amp;rsquo;s hard because the preparation may put off potential lecturers maybe instead go for more informal zulip-based &amp;ldquo;explain everything you know about X&amp;rdquo; can then summarize zulip log agreed to change terminology from &amp;ldquo;transcribe&amp;rdquo; -&amp;gt; &amp;ldquo;summarize&amp;rdquo;
mark-i-m volunteers to try to organize meeting with petrochenkov about macros
amanjeev volunteers to try to organize meeting with nagisa or alexchricton about codegen</description></item><item><title>Rustc Dev Guide WG 2019-07-09 sync meeting</title><link>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/2019.07.09-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/2019.07.09-meeting/</guid><description>Rustc Dev Guide WG 2019-07-09 sync meeting some discussion about organizing lectures on missing topics
it&amp;rsquo;s hard because the preparation may put off potential lecturers maybe instead go for more informal zulip-based &amp;ldquo;explain everything you know about X&amp;rdquo; can then summarize zulip log agreed to change terminology from &amp;ldquo;transcribe&amp;rdquo; -&amp;gt; &amp;ldquo;summarize&amp;rdquo;
mark-i-m volunteers to try to organize meeting with petrochenkov about macros
amanjeev volunteers to try to organize meeting with nagisa or alexchricton about codegen</description></item><item><title>Rustc Dev Guide WG 2019-07-23 sync meeting</title><link>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/2019.07.23-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/2019.07.23-meeting/</guid><description>Rustc Dev Guide WG 2019-07-23 sync meeting rustc-dev-guide strike force Need to go through older issues on repo and see what is actionable for each one
Easier issues need to just get done
Harder issues may need a talk/meeting with an expert
spastorino proposes writing a post on IRLO
mark-i-m volunteers to do this Long meeting Last time, we discussed scheduling a long meeting mark-i-m proposes August 19, but spastorino notes that this is close to RustConf.</description></item><item><title>Rustc Dev Guide WG 2019-08-06 sync meeting</title><link>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/2019.08.06-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/2019.08.06-meeting/</guid><description>Rustc Dev Guide WG 2019-08-06 sync meeting @Tshepang Lekhonkhobe joined the Rustc Dev Guide WG!
@mark-i-m reported that toolslate/linkcheck is now working properly with following overview on how:
The linkchecker in the rust CI is run from https://github.com/rust-lang/rust/tree/master/src/tools/rustbook. It just runs mdbook_linkcheck as a library. That is called by only one linux builder from the script in src/ci/docker/. The hack on the rustc-dev-guide CI checks the output of mdbook_linkcheck from stdout/stderr and looks for timeout errors.</description></item><item><title>Rustc Dev Guide WG 2019-08-21 sync meeting</title><link>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/2019.08.20-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/2019.08.20-meeting/</guid><description>Rustc Dev Guide WG 2019-08-21 sync meeting It was a fairly quiet meeting.
The 2nd Macros Discussion with @petrochenkov is tomorrow at UTC 7pm. @amanjeev volunteered to be added to the toolstate ping list. We decided to leave discussion of other items until more people are present.</description></item><item><title>Rustc Dev Guide WG 2019-09-17 sync meeting</title><link>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/2019.09.17-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/2019.09.17-meeting/</guid><description>Rustc Dev Guide WG 2019-09-17 sync meeting Team discussed that we all are going to watch same video
This lecture https://github.com/rust-lang/rustc-dev-guide/issues/375 Notes and questions to be discussed in a separate meeting on Tue, 24 September, 15:30 @mark-i-m reported
We are now using mdbook-linkcheck 0.4, which has caching Opening PR https://github.com/rust-lang/rustc-dev-guide/pull/446 to add instructions about fixing toolslate @Iñaki Garay reported that the effort to summarize the videos was underestimated.
@Amanjeev Sethi agreed</description></item><item><title>Rustc Dev Guide WG 2019-10-01 sync meeting</title><link>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/2019.10.01-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/2019.10.01-meeting/</guid><description>Rustc Dev Guide WG 2019-10-01 sync meeting Team discussed that watching same video by all members, one video at a time, works well for everyone so far
Everyone is taking notes in this paper doc. Discussion was about this lecture https://github.com/rust-lang/rustc-dev-guide/issues/375 @Santiago Pastorino reported that How to build and run guide page needs help
Team might create a new doc for this page to collect ideas. @mark-i-m reported that
It seems our CI is broken, as this should not be passing: https://travis-ci.</description></item><item><title>Rustc Dev Guide WG 2019-11-26 planning meeting</title><link>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/2019.11.26-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/2019.11.26-meeting/</guid><description>Rustc Dev Guide WG 2019-11-26 planning meeting Team discussed most important missing chapters from the master doc. A consensus was reached which was noted on the master doc. Prioritizing the Overview lecture and doc over others. Working as a team on the lecture/doc. Team discussed to work with Hackmd vs Paper For this Overview doc. So we have experience with Paper as well as Hackmd. Team discussed about Working Process @Santiago mentioned that it might be a good idea to tackle two things in parallel A lecture arrangement.</description></item><item><title>Steering meeting</title><link>https://rust-lang.github.io/compiler-team/about/steering-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/about/steering-meeting/</guid><description>Steering Meeting The compiler steering meeting is the place for high-level discussion and planning. The meeting takes place weekly. The topics of the meeting are selected at periodic planning meetings. See the steering meeting procedure for more details. See #58850 for more information.
See the compiler team calendar for the topics of the next scheduled meetings. There is also a dedicated internals thread.
The steering meeting takes place on Zulip. Look for a topic like &amp;ldquo;steering meeting YYYY-MM-DD&amp;rdquo; (with today&amp;rsquo;s date, of course).</description></item><item><title>Steering meeting</title><link>https://rust-lang.github.io/compiler-team/procedures/steering-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/procedures/steering-meeting/</guid><description>Steering meeting This content has moved to the Rust forge.</description></item><item><title>T-compiler Meeting Agenda 2024-06-27</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-06-27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-06-27/</guid><description>tags: weekly, rustc type: docs note_id: PfNc4XsWTbmI-XxbcooiGw T-compiler Meeting Agenda 2024-06-27 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-06-27T22:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Add -C embed-source (DWARFv5 source code embedding extension)&amp;rdquo; compiler-team#764 (Zulip) Old MCPs (stale MCP might be closed as per MCP procedure) None at this time Old MCPs (not seconded, take a look) &amp;ldquo;Add hygiene attributes to compile expanded source code&amp;rdquo; compiler-team#692 (Zulip) (last review activity: 5 months ago) concern: added-complexity-to-frontend &amp;ldquo;Target families for executable format&amp;rdquo; compiler-team#716 (Zulip) (last review activity: 4 months ago) &amp;ldquo;Partial compilation using MIR-only rlibs&amp;rdquo; compiler-team#738 (Zulip) (last review activity: 2 months ago) &amp;ldquo;Add Hotpatch flag&amp;rdquo; compiler-team#745 (Zulip) (last review activity: about 40 days ago) Pending FCP requests (check your boxes!</description></item><item><title>T-compiler Meeting Agenda 2024-07-04</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-07-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-07-04/</guid><description>tags: weekly, rustc type: docs note_id: b8aoULbjSOiPk2z64V-ncA T-compiler Meeting Agenda 2024-07-04 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-07-04T22:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!) &amp;ldquo;Add -Z embed-source (DWARFv5 source code embedding extension)&amp;rdquo; compiler-team#764 (Zulip) Old MCPs (stale MCP might be closed as per MCP procedure) None at this time Old MCPs (not seconded, take a look) &amp;ldquo;Add hygiene attributes to compile expanded source code&amp;rdquo; compiler-team#692 (Zulip) (last review activity: 5 months ago) concern: added-complexity-to-frontend &amp;ldquo;Target families for executable format&amp;rdquo; compiler-team#716 (Zulip) (last review activity: 5 months ago) &amp;ldquo;Partial compilation using MIR-only rlibs&amp;rdquo; compiler-team#738 (Zulip) (last review activity: 2 months ago) &amp;ldquo;Add Hotpatch flag&amp;rdquo; compiler-team#745 (Zulip) (last review activity: about 48 days ago) Pending FCP requests (check your boxes!</description></item><item><title>T-compiler Meeting Agenda 2024-07-11</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-07-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-07-11/</guid><description>tags: weekly, rustc type: docs note_id: eQkxivnwRCuEACPKwn7T3A T-compiler Meeting Agenda 2024-07-11 Announcements Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-07-11T22:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!) No new proposals this time.</description></item><item><title>T-compiler Meeting Agenda 2024-07-25</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-07-25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-07-25/</guid><description>tags: weekly, rustc type: docs note_id: zlNQiMzJThWdBQvPYaqh0w T-compiler Meeting Agenda 2024-07-25 Announcements Today release of stable Rust 1.80 (blog post) Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-07-25T22:00:00+01:00 MCPs/FCPs New MCPs (take a look, see if you like them!</description></item><item><title>T-compiler Meeting Agenda 2024-08-08</title><link>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-08-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/triage-meeting/T-compiler-Meeting-Agenda-2024-08-08/</guid><description>tags: weekly, rustc type: docs note_id: 8PHAmxDiTwiyWL202LNelw T-compiler Meeting Agenda 2024-08-08 Announcements A Rust 1.80.1 will be out (with stable backports from last week): blog post. Reminder: if you see a PR/issue that seems like there might be legal implications due to copyright/IP/etc, please let us know (or at least message @davidtwco or @Wesley Wiser so we can pass it along). Other WG meetings Types Team: ITE (Impl Trait Everywhere) Triage time:2024-08-08T22:00:00+01:00 wg-rust-analyzer steering meeting on Zulip (https://rust-lang.</description></item><item><title>Target Tier Policy</title><link>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-09-20-target-tier-policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-09-20-target-tier-policy/</guid><description>Target Tier Policy Zulip thread Proposal issue: rust-lang/rust#166 Original proposal with history Summary We should have an official, objective policy for adding new (tier 3) targets, and for raising targets to tier 2 (with rustup builds) or even tier 1.
Conclusion: Josh to revise policy based on feedback (done, see below) and subsequently submit as an RFC.
Motivation Rust developers regularly implement new targets in the Rust compiler, and reviewers of pull requests for such new targets would like a clear, consistent policy to cite for accepting or rejecting such targets.</description></item><item><title>Third Party out of tree crates</title><link>https://rust-lang.github.io/compiler-team/procedures/crates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/procedures/crates/</guid><description>Third-party and out-of-tree crates This document describe the guidelines for creating out-of-tree crates for use in the compiler and using third-party crates within the compiler. These guidelines were originally discussed at the Rust All Hands 2019 by the compiler team and others; and then at the 01/03/2019 steering meeting.
Out-of-tree crates One of the primary goals of this policy is to ensure that there is consistency in how out-of-tree crates used in the compiler are set up (at least, those maintained by the compiler team and living in rust-lang) and that the experience is uniform across rust-lang/rust and these crates.</description></item><item><title>Triage Meeting</title><link>https://rust-lang.github.io/compiler-team/about/triage-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/about/triage-meeting/</guid><description>Triage Meeting The compiler triage meeting is the place for tracking regressions, progress on urgent bugs and checking-in with the compiler team&amp;rsquo;s working groups. Each meeting, two working groups (rotating) check-in with their progress and blockers.
The meeting takes place every week. See the compiler team calendar for the next scheduled meeting (normally weekly).
The triage meeting takes place on Zulip. Look for a topic like &amp;ldquo;#54818 weekly meeting YYYY-MM-DD&amp;rdquo; or &amp;ldquo;weekly meeting YYYY-MM-DD&amp;rdquo; (with the proper date, of course).</description></item><item><title>Triage meeting on 2019-02-24</title><link>https://rust-lang.github.io/compiler-team/working-groups/traits/minutes/triage-2019-02-24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/traits/minutes/triage-2019-02-24/</guid><description>Triage meeting on 2019-02-24 Info Zulip thread.
Summary The goal of the meeting was to try and figure out, in somewhat more detail, how we want to organize the traits working group itself. We&amp;rsquo;ve been doing work on enumerating and triaging the set of things we hope to do, but in this meeting we were basically trying to come up with some concrete next steps.
Ultimately we identified the following next steps:</description></item><item><title>Triage meeting on 2019-03-04</title><link>https://rust-lang.github.io/compiler-team/working-groups/traits/minutes/triage-2019-03-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/traits/minutes/triage-2019-03-04/</guid><description>Triage meeting on 2019-03-04 Info Zulip thread.
Summary We followed up on the goals from last time.
Lifetime problems around async-await We discussed how we found a way to resolve the async fn complications by changing the async fn desugaring, and hence don&amp;rsquo;t need any deep trait action. We are still interested in trying to find a way to solve the &amp;ldquo;captures problem&amp;rdquo; for impl Trait, however, and alexreg and nikomatsakis may do some follow-up there.</description></item><item><title>Triage meeting on 2019-03-11</title><link>https://rust-lang.github.io/compiler-team/working-groups/traits/minutes/triage-2019-03-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/traits/minutes/triage-2019-03-11/</guid><description>Triage meeting on 2019-03-11 Info Zulip thread
Help wanted! nikomatsakis is looking for someone to help with investigating lazy normatlization. The task would be to experimentally modify rustc and is best suited to someone already vaguely familiar with the Rust query system etc. See below. Summary We followed up on the goals from last time.
Lazy normalization and const generics Link
Last week, nikomatsakis did more investigation, taking notes in this dropbox paper document.</description></item><item><title>Triage Working Group Discussion</title><link>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-07-08-triage-wg/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-07-08-triage-wg/</guid><description>Triage Working Group Discussion Zulip thread Summary Discussed ideas of a triage working group and how that might interact Discussed pnkfelix/nikomatsakis taking leave over next few weeks and what to do in the meantime Discussed the problems around review queues pnkfelix/nikomatsakis absence pnkfelix will be going on parental leave for 2 months starting July 15. nikomatsakis will be on PTO for a month or so, with limited availability. In the interim, nagisa has volunteered to run meetings.</description></item><item><title>Unify Dataflow Frameworks (#202)</title><link>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-11-09-unified-dataflow-framework/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-11-09-unified-dataflow-framework/</guid><description>Design Meeting 2019-11-08 Zulip Stream
Agenda Design doc: https://hackmd.io/@39Qr_z9cQhasi25sGjmFnA/Skvd9rztS
Explain the current state of things
We currently have two wholly separate APIs for dataflow, one for bit-vector problems and one that allows arbitrary transfer functions but still restricts the lattice to a powerset of indices. I want to merge these two to make code more DRY. The prototype implementation is described pretty thoroughly in the design doc, but maybe go over it a bit?</description></item><item><title>WG rustc-dev-guide future meeting agenda</title><link>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/agenda/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/rustc-dev-guide/minutes/agenda/</guid><description>WG-Rustc Dev Guide future meeting agenda See this doc</description></item><item><title>WG-Polonius meeting minutes 2019.04.23</title><link>https://rust-lang.github.io/compiler-team/working-groups/polonius/minutes/2019.04.23-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/polonius/minutes/2019.04.23-meeting/</guid><description>WG-Polonius meeting minutes: 2019/04/23 Relevant links:
The meeting happened in this Zulip thread A Paper document for the WIP roadmap In this meeting, we started with a short review of the previous week&amp;rsquo;s work:
Albin continued work on implementing liveness in Polonius, and finalized #105, which is now ready to be merged into a new polonius-engine release. Niko wrote up notes describing the second part of the liveness effort: modifying rustc to emit var_used and var_defined facts for the previous PR.</description></item><item><title>WG-Polonius meeting minutes 2019.04.30</title><link>https://rust-lang.github.io/compiler-team/working-groups/polonius/minutes/2019.04.30-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/polonius/minutes/2019.04.30-meeting/</guid><description>WG-Polonius meeting minutes: 2019/04/30 Relevant links:
The meeting happened in this Zulip thread. The WIP Roadmap Paper. In this meeting, we started with a short review of the previous week&amp;rsquo;s work:
Albin continued work on implementing liveness in Polonius, and opened the rustc part of this work: generating the facts needed by the Polonius computation. Niko wrote up some more notes on continuing the liveness work: the next major part being computing the region_live_at facts in Polonius analyses instead of rustc.</description></item><item><title>WG-Polonius meeting minutes 2019.05.07</title><link>https://rust-lang.github.io/compiler-team/working-groups/polonius/minutes/2019.05.07-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/polonius/minutes/2019.05.07-meeting/</guid><description>WG-Polonius meeting minutes: 2019/05/07 Relevant links:
The meeting happened in this Zulip thread. The WIP Roadmap Paper. In this shorter meeting, we spent most of the time on the previous week&amp;rsquo;s work:
Niko has written more notes and steps for implementing liveness. With these, most of liveness is described (modulo the specifics of drop) :tada:. Albin smoothly continued work on computing liveness in Polonius in #105, and rustc&amp;rsquo;s #60266: finishing up last week&amp;rsquo;s steps about the beginning of fact generation, and preparing to emit the ones needed to compute the region_live_at relation.</description></item><item><title>WG-Polonius meeting minutes 2019.05.14</title><link>https://rust-lang.github.io/compiler-team/working-groups/polonius/minutes/2019.05.14-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/polonius/minutes/2019.05.14-meeting/</guid><description>WG-Polonius meeting minutes: 2019/05/14 Relevant links:
The meeting happened in this Zulip thread. The WIP Roadmap Paper. A recap of last week&amp;rsquo;s work:
Niko and Albin went through a lot of details of liveness, in the dedicated Zulip thread (around this point). With the previous week&amp;rsquo;s steps, and these conversations, Albin has continued the work on liveness, and is now basically done :tada:. With the 2 PRs, Polonius is able to compute the same region_live_at facts as rustc.</description></item><item><title>WG-Polonius meeting minutes 2019.05.28</title><link>https://rust-lang.github.io/compiler-team/working-groups/polonius/minutes/2019.05.28-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/polonius/minutes/2019.05.28-meeting/</guid><description>WG-Polonius meeting minutes: 2019/05/28 Relevant links:
The meeting happened in this Zulip thread. The WIP Roadmap Paper. This week, we discussed the following topics:
1. Profiling and fact generation @lokalmatador has made some progress on the profiling tasks: WIP branch is here gathering timing data for parts of NLLs and Polonius using rustc&amp;rsquo;s -Z self-profile API.
The granularity of profiling was discussed, especially regarding fact generation and the separation between NLLs and Polonius.</description></item><item><title>WG-Polonius meeting minutes 2019.06.04</title><link>https://rust-lang.github.io/compiler-team/working-groups/polonius/minutes/2019.06.04-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/polonius/minutes/2019.06.04-meeting/</guid><description>WG-Polonius meeting minutes: 2019/06/04 Relevant links:
The meeting happened in this Zulip thread. The WIP Roadmap Paper. This week, we discussed the following topics:
1. Liveness To help with reviewing polonius#105, some last minutes changes were discussed:
the older facts recorded in the Polonius dataset (the inputs directory) needed regenerating. This creates a huge diff for review, so separating those out to be &amp;ldquo;rubberstamped&amp;rdquo; would be interesting. squashing the other, important, commits for easy review.</description></item><item><title>WG-Polonius meeting minutes 2019.06.11</title><link>https://rust-lang.github.io/compiler-team/working-groups/polonius/minutes/2019.06.11-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/polonius/minutes/2019.06.11-meeting/</guid><description>WG-Polonius meeting minutes: 2019/06/11 Relevant links:
The meeting happened in this Zulip thread. The WIP Roadmap Paper. This week, we worked on — and discussed — the following topics:
1. Proposal: stop tracking subset relations along the CFG Niko wrote up an issue with more details about the proposal: issue #107. We also discussed it more in the dedicated zulip thread, around this point.
We made an example where the new refinement would improve on Polonius&amp;rsquo; behaviour: it currently flags an unnecessary error on this example.</description></item><item><title>WG-Polonius meeting minutes, 2019.03.07</title><link>https://rust-lang.github.io/compiler-team/working-groups/polonius/minutes/2019.03.07-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/working-groups/polonius/minutes/2019.03.07-meeting/</guid><description>WG-Polonius meeting minutes: 2019/03/07 Relevant links:
The meeting happened in this Zulip thread A Paper document for the WIP roadmap The first meeting of the WG Polonius was dedicated to finding concrete next steps, both as part of working on the roadmap, and as onboarding @albins into the group. Since Albin will do a masters related to Polonius, we also worked out other areas they could tackle as time progressed.</description></item><item><title>Working Group Retrospective</title><link>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-11-16-Working-Group-Retrospective/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rust-lang.github.io/compiler-team/minutes/design-meeting/2019-11-16-Working-Group-Retrospective/</guid><description>Working Group Retrospective Zulip stream or read on the Zulip archive What you are looking at We did a short survey before the meeting. The following notes were scraped from the 10 responses. I tried to de-duplicate common items. Towards the end, you will find some minutes that were taken during the meeting itself. &amp;ndash;nikomatsakis
Things to KEEP doing Working groups are useful Nice to know who to talk to in order to get involved this was more of a struggle before Providing opportunities for mentorship is good Scoping out small groups of decision makers for &amp;ldquo;in the weeds&amp;rdquo; decisions Weekly updates Dedicated Zulip streams: great to have ability to link/skim, even if most are muted Regular meetings are a good way to keep working groups focused Things to STOP doing Maybe fewer working groups, with more time/energy invested in each?</description></item></channel></rss>